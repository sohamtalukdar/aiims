{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/MultipleChoiceTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers\n}) => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  useEffect(() => {\n    // Start recording when component mounts\n    const startRecording = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaRecorderRef.current.ondataavailable = event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        };\n        mediaRecorderRef.current.start();\n      } catch (error) {\n        console.error('Error starting recording:', error);\n      }\n    };\n    startRecording();\n\n    // Cleanup function\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleAnswerSelect = choiceIndex => {\n    setAllSelectedAnswers(prevSelected => {\n      const updatedAnswers = {\n        ...prevSelected\n      };\n\n      // Initialize array for current question if it doesn't exist\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n\n      // Toggle selection\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        // Add the choice if not already selected\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        // Remove the choice if already selected\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n      }\n      return updatedAnswers;\n    });\n  };\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  const handleSubmit = async () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      await new Promise(resolve => {\n        mediaRecorderRef.current.onstop = () => {\n          const audioBlob = new Blob(mediaChunksRef.current, {\n            type: 'audio/webm'\n          });\n          setAudioBlob(audioBlob);\n          resolve();\n        };\n      });\n    }\n    const finalScore = Object.values(allSelectedAnswers).reduce((total, selections) => total + (selections ? selections.length : 0), 0);\n    const formData = new FormData();\n    formData.append('name', state.name);\n    formData.append('age', state.age);\n    formData.append('patientId', state.patientId);\n    formData.append('score', finalScore.toString());\n    if (audioBlob) {\n      formData.append('audio', audioBlob, 'mmse_audio.webm');\n    }\n    try {\n      console.log('Sending MMSE score to server:', finalScore);\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save MMSE score');\n      }\n      console.log('MMSE score saved successfully');\n      setTestCompleted(true);\n    } catch (error) {\n      console.error('Error saving MMSE score:', error);\n      alert('Failed to save test score. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-choice-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '5px'\n      },\n      children: task.questions[currentQuestionIndex].question[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), currentQuestionIndex === 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + '/pentagon.png',\n        alt: \"Shape for copying\",\n        style: {\n          maxWidth: '45%',\n          height: 'auto'\n        },\n        onError: e => {\n          console.error(\"Image failed to load\");\n          console.log(\"Attempted path:\", e.target.src);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            margin: '5px 0',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: currentSelections.includes(index),\n            onChange: () => handleAnswerSelect(index),\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '30vh',\n        marginTop: '10px'\n      },\n      children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          textAlign: 'center',\n          margin: '5px 0',\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: currentSelections.includes(index),\n          onChange: () => handleAnswerSelect(index),\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this), choice[language]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: currentQuestionIndex === 0,\n          style: {\n            marginRight: '10px'\n          },\n          children: language === 'hindi' ? 'पिछला' : 'Previous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: currentQuestionIndex === task.questions.length - 1,\n          children: language === 'hindi' ? 'अगला' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-counter\",\n        style: {\n          marginRight: '20px'\n        },\n        children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number-navigation\",\n      style: {\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n      },\n      children: task.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentQuestionIndex(index);\n        },\n        style: {\n          margin: '5px',\n          padding: '10px',\n          backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n          color: index === currentQuestionIndex ? '#fff' : '#000',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: language === 'hindi' ? 'जमा करें' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(MultipleChoiceTask, \"4HbpTbp5jjVb1N6u/sqHzrH3ovE=\", false, function () {\n  return [useLocation];\n});\n_c = MultipleChoiceTask;\nexport default MultipleChoiceTask;\nvar _c;\n$RefreshReg$(_c, \"MultipleChoiceTask\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","MultipleChoiceTask","task","language","setTestCompleted","currentQuestionIndex","setCurrentQuestionIndex","allSelectedAnswers","setAllSelectedAnswers","_s","state","audioBlob","setAudioBlob","mediaRecorderRef","mediaChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","data","size","push","start","error","console","stop","getTracks","forEach","track","handleNext","questions","length","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","totalSelectedCount","Object","values","reduce","total","selections","currentSelections","handleSubmit","Promise","resolve","onstop","Blob","type","finalScore","formData","FormData","append","name","age","patientId","toString","log","response","fetch","method","body","ok","Error","alert","className","children","style","textAlign","marginBottom","question","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","src","process","env","PUBLIC_URL","alt","maxWidth","height","onError","e","target","display","flexDirection","alignItems","choices","map","choice","margin","width","checked","includes","onChange","marginRight","justifyContent","minHeight","onClick","disabled","flexWrap","q","padding","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/MultipleChoiceTask.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n}) => {\n  const { state } = useLocation();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  useEffect(() => {\n    // Start recording when component mounts\n    const startRecording = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        \n        mediaRecorderRef.current.ondataavailable = (event) => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        };\n\n        mediaRecorderRef.current.start();\n      } catch (error) {\n        console.error('Error starting recording:', error);\n      }\n    };\n\n    startRecording();\n\n    // Cleanup function\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleAnswerSelect = (choiceIndex) => {\n    setAllSelectedAnswers((prevSelected) => {\n      const updatedAnswers = { ...prevSelected };\n      \n      // Initialize array for current question if it doesn't exist\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      \n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      \n      // Toggle selection\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        // Add the choice if not already selected\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        // Remove the choice if already selected\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n          (idx) => idx !== choiceIndex\n        );\n      }\n      \n      return updatedAnswers;\n    });\n  };\n\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n    (total, selections) => total + selections.length,\n    0\n  );\n\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  \n  const handleSubmit = async () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      await new Promise(resolve => {\n        mediaRecorderRef.current.onstop = () => {\n          const audioBlob = new Blob(mediaChunksRef.current, { type: 'audio/webm' });\n          setAudioBlob(audioBlob);\n          resolve();\n        };\n      });\n    }\n\n    const finalScore = Object.values(allSelectedAnswers).reduce(\n      (total, selections) => total + (selections ? selections.length : 0),\n      0\n    );\n    \n    const formData = new FormData();\n    formData.append('name', state.name);\n    formData.append('age', state.age);\n    formData.append('patientId', state.patientId);\n    formData.append('score', finalScore.toString());\n    \n    if (audioBlob) {\n      formData.append('audio', audioBlob, 'mmse_audio.webm');\n    }\n\n    try {\n      console.log('Sending MMSE score to server:', finalScore);\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save MMSE score');\n      }\n\n      console.log('MMSE score saved successfully');\n      setTestCompleted(true);\n    } catch (error) {\n      console.error('Error saving MMSE score:', error);\n      alert('Failed to save test score. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"multiple-choice-task\">\n      <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n        {task.questions[currentQuestionIndex].question[language]}\n      </h3>\n\n      {currentQuestionIndex === 10 ? (\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          <img \n            src={process.env.PUBLIC_URL + '/pentagon.png'} \n            alt=\"Shape for copying\" \n            style={{ maxWidth: '45%', height: 'auto' }}\n            onError={(e) => {\n              console.error(\"Image failed to load\");\n              console.log(\"Attempted path:\", e.target.src);\n            }}\n          />\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n              <label\n                key={index}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  textAlign: 'center',\n                  margin: '5px 0',\n                  width: '200px',\n                }}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={currentSelections.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                  style={{ marginRight: '10px' }}\n                />\n                {choice[language]}\n              </label>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '30vh',\n          marginTop: '10px'\n        }}>\n          {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n            <label\n              key={index}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                textAlign: 'center',\n                margin: '5px 0',\n                width: '200px',\n              }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={currentSelections.includes(index)}\n                onChange={() => handleAnswerSelect(index)}\n                style={{ marginRight: '10px' }}\n              />\n              {choice[language]}\n            </label>\n          ))}\n        </div>\n      )}\n\n      {/* Navigation Buttons and Counter */}\n      <div className=\"navigation-container\" style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px'\n      }}>\n        <div className=\"navigation-buttons\">\n          <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n            {language === 'hindi' ? 'पिछला' : 'Previous'}\n          </button>\n          <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n            {language === 'hindi' ? 'अगला' : 'Next'}\n          </button>\n        </div>\n        <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n          {language === 'hindi'\n            ? `चयनित: ${totalSelectedCount}`\n            : `Score: ${totalSelectedCount}`}\n        </div>\n      </div>\n\n      {/* Question Number Navigation */}\n      <div\n        className=\"question-number-navigation\"\n        style={{\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n        }}\n      >\n        {task.questions.map((q, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              setCurrentQuestionIndex(index);\n            }}\n            style={{\n              margin: '5px',\n              padding: '10px',\n              backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n              color: index === currentQuestionIndex ? '#fff' : '#000',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n\n      {/* Submit Button */}\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <button\n          onClick={handleSubmit}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n          }}\n        >\n          {language === 'hindi' ? 'जमा करें' : 'Submit'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MultipleChoiceTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}