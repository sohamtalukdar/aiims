{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './data/tasks';\nimport './App.css';\n\n// Language Constants\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = {\n  ENGLISH: 'english',\n  HINDI: 'hindi'\n};\n\n// Helper Function for Language Texts\nconst getText = (key, language) => {\n  const texts = {\n    welcome: {\n      english: 'Welcome to the Dementia Test!',\n      hindi: 'डिमेंशिया टेस्ट में आपका स्वागत है!'\n    },\n    // Add other key-text mappings here\n    // Example:\n    exit: {\n      english: 'Exit',\n      hindi: 'बाहर निकलें'\n    }\n    // Continue for all text elements used in the component\n  };\n  return texts[key][language];\n};\nfunction FileUploadForm() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n\n  // Modal States\n  const [showModal, setShowModal] = useState(true);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n\n  // Tab and Task States\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n\n  // Language State\n  const [language, setLanguage] = useState(LANGUAGES.ENGLISH);\n\n  // Recording States\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState('');\n  const [countdown, setCountdown] = useState(60);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n\n  // Additional States\n  const [showTick, setShowTick] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem('allSelectedAnswers');\n    return savedData ? JSON.parse(savedData) : {};\n  });\n\n  // Effect: Validate Patient Info on Mount\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Effect: Persist Answers to Session Storage\n  useEffect(() => {\n    sessionStorage.setItem('allSelectedAnswers', JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n\n  // Effect: Clear Session Storage on Refresh\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n      sessionStorage.clear();\n    };\n    window.addEventListener('beforeunload', clearDataOnRefresh);\n    return () => {\n      window.removeEventListener('beforeunload', clearDataOnRefresh);\n    };\n  }, []);\n\n  // Effect: Block Page Refresh and Context Menu During Test\n  useEffect(() => {\n    const blockRefresh = e => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n        e.returnValue = '';\n        return 'Test is in progress. Refresh is disabled.';\n      }\n    };\n    const blockKeyboardRefresh = e => {\n      if (!showInitialPopup) {\n        if (e.metaKey && e.key === 'r' ||\n        // Cmd + R (macOS)\n        e.ctrlKey && e.key === 'r' ||\n        // Ctrl + R (Windows/Linux)\n        e.key === 'F5' // F5 (all platforms)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          setShowRefreshWarning(true);\n        }\n      }\n    };\n    const blockContextMenu = e => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('beforeunload', blockRefresh);\n    window.addEventListener('keydown', blockKeyboardRefresh);\n    window.addEventListener('contextmenu', blockContextMenu);\n    return () => {\n      window.removeEventListener('beforeunload', blockRefresh);\n      window.removeEventListener('keydown', blockKeyboardRefresh);\n      window.removeEventListener('contextmenu', blockContextMenu);\n    };\n  }, [showInitialPopup]);\n\n  // Handle Refresh Confirmation\n  const handleRefreshConfirm = () => {\n    setShowRefreshWarning(false);\n    window.location.reload();\n  };\n  const handleRefreshCancel = () => {\n    setShowRefreshWarning(false);\n  };\n\n  // Handle Tab Click with Validations\n  const handleTabClick = useCallback(id => {\n    if (completedTasks.has(id) || id < selectedTab) {\n      return;\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setCountdown(60);\n    setMediaURL('');\n    mediaChunksRef.current = [];\n\n    // Stop any ongoing recordings\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    if (id === 2) {\n      setShowInitialInstructions(true);\n    } else {\n      setShowInitialInstructions(false);\n    }\n  }, [completedTasks, selectedTab]);\n\n  // Calculate Total Score\n  const calculateScore = useCallback(() => {\n    let totalScore = 0;\n    Object.values(allSelectedAnswers).forEach(selections => {\n      if (selections && selections.length > 0) {\n        totalScore += selections.length;\n      }\n    });\n    return totalScore;\n  }, [allSelectedAnswers]);\n\n  // Handle Exit\n  const handleExit = useCallback(() => {\n    sessionStorage.clear();\n    navigate('/');\n  }, [navigate]);\n\n  // Handle Media Recording\n  const handleMediaRecord = useCallback(() => {\n    const mediaType = selectedTab === 1 ? {\n      video: true,\n      audio: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      setMediaURL('');\n      setCountdown(60);\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        // Start Countdown\n        countdownIntervalRef.current = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownIntervalRef.current);\n              if (mediaRecorder.state === 'recording') {\n                mediaRecorder.stop();\n                stream.getTracks().forEach(track => track.stop());\n                setIsRecording(false);\n              }\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n\n        // Collect Data Chunks\n        mediaRecorder.addEventListener('dataavailable', event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        });\n\n        // Handle Stop Event\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          const url = URL.createObjectURL(mediaBlob);\n          setMediaURL(url);\n          if (selectedTab === 1) {\n            setVideoBlob(mediaBlob);\n          } else {\n            setAudioBlob(mediaBlob);\n          }\n          setIsRecording(false);\n          mediaChunksRef.current = [];\n          clearInterval(countdownIntervalRef.current);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        setIsRecording(false);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n      }\n    }\n  }, [isRecording, selectedTab]);\n\n  // Handle Re-recording\n  const handleReRecord = useCallback(() => {\n    setMediaURL('');\n    selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    handleMediaRecord();\n  }, [selectedTab, handleMediaRecord]);\n\n  // Handle Form Submission\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n        alert('Patient information is missing. Please start over.');\n        navigate('/');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      formData.append('score', calculateScore());\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n        setIsSubmitting(false);\n        return;\n      }\n      formData.append(selectedTab === 1 ? 'video' : 'audio', currentBlob, `${selectedTab === 1 ? 'video' : 'audio'}.webm`);\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n      const result = await response.json();\n      console.log('Upload result:', result);\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n        const nextTab = selectedTab + 1;\n        if (nextTab < tasks.length) {\n          handleTabClick(nextTab);\n        }\n      }, 1000);\n      setMediaURL('');\n      selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  }, [isSubmitting, state, navigate, selectedTab, videoBlob, audioBlob, calculateScore, handleTabClick]);\n\n  // Handle Answer Selection\n  const handleAnswerSelect = useCallback(choiceIndex => {\n    setAllSelectedAnswers(prevSelected => {\n      const updatedAnswers = {\n        ...prevSelected\n      };\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n      }\n      return updatedAnswers;\n    });\n  }, [currentQuestionIndex]);\n\n  // Render Tick\n  const renderTick = useMemo(() => {\n    return showTick ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tick\",\n      children: \"\\u2714\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 23\n    }, this) : null;\n  }, [showTick]);\n\n  // Component: TaskCompletion\n  const TaskCompletion = useCallback(() => {\n    const score = calculateScore();\n    const maxScore = 30; // Maximum possible MMSE score\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen p-8 bg-white max-w-2xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold mb-8 text-gray-800\",\n          children: language === LANGUAGES.HINDI ? 'धन्यवाद!' : 'Thank You!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-6 rounded-lg shadow-sm mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: language === LANGUAGES.HINDI ? 'आपका स्कोर' : 'Your Score'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-bold text-blue-600\",\n            children: [score, \" / \", maxScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg\",\n            children: language === LANGUAGES.HINDI ? 'आपका परीक्षण पूरा हो गया है। परिणाम आपके स्वास्थ्य देखभाल प्रदाता द्वारा साझा किए जाएंगे।' : 'Your test has been completed. The results will be shared by your healthcare provider.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-600\",\n            children: language === LANGUAGES.HINDI ? 'कृपया अपने स्वास्थ्य देखभाल प्रदाता से संपर्क करें।' : 'Please contact your healthcare provider for follow-up.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExit,\n            className: \"exit-button\",\n            \"aria-label\": language === LANGUAGES.HINDI ? 'बाहर निकलें' : 'Exit',\n            children: language === LANGUAGES.HINDI ? 'बाहर निकलें' : 'Exit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this);\n  }, [calculateScore, language, handleExit]);\n\n  // Component: InstructionModal\n  const InstructionModal = useCallback(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: language === LANGUAGES.HINDI ? 'निर्देश' : 'Instructions'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal-paragraph\",\n        children: selectedTab === 0 ? language === LANGUAGES.HINDI ? 'कृपया \"आवाज़ रिकॉर्ड करें\" पर क्लिक करें और जोर से पढ़ें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें।' : 'Please click \"Record Voice\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save.' : language === LANGUAGES.HINDI ? 'कृपया \"वीडियो रिकॉर्ड करें\" पर क्लिक करें और चित्र का वर्णन करें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें। ज़ूम इन के लिए, कृपया चित्र पर क्लिक करें।' : 'Please click \"Record Video\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save. To zoom in, please click on the picture.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-ok-button\",\n        onClick: () => setShowModal(false),\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 5\n  }, this), [language, selectedTab]);\n\n  // Component: InitialInstructions\n  const InitialInstructions = useCallback(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"initial-instructions-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-instructions-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: language === LANGUAGES.HINDI ? 'ऑनलाइन MMSE परीक्षण में आपका स्वागत है' : 'Welcome to the Online MMSE Test'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"instructions-paragraph\",\n        children: language === LANGUAGES.HINDI ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0911\\u0928\\u0932\\u093E\\u0907\\u0928 MMSE \\u091F\\u0947\\u0938\\u094D\\u091F: \\u0924\\u0948\\u092F\\u093E\\u0930\\u0940 \\u0914\\u0930 \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), \"\\u0938\\u094D\\u0935\\u093E\\u0917\\u0924 \\u0939\\u0948! \\u091F\\u0947\\u0938\\u094D\\u091F \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0938\\u0947 \\u092A\\u0939\\u0932\\u0947 \\u0915\\u0943\\u092A\\u092F\\u093E \\u0928\\u093F\\u092E\\u094D\\u0928\\u0932\\u093F\\u0916\\u093F\\u0924 \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u090F\\u0915 \\u0926\\u0947\\u0916\\u092D\\u093E\\u0932\\u0915\\u0930\\u094D\\u0924\\u093E (Caregiver) \\u0915\\u0940 \\u0909\\u092A\\u0938\\u094D\\u0925\\u093F\\u0924\\u093F \\u0906\\u0935\\u0936\\u094D\\u092F\\u0915 \\u0939\\u0948, \\u091C\\u094B \\u091F\\u0947\\u0938\\u094D\\u091F \\u0932\\u0947 \\u0938\\u0915\\u0947\\u0964\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u090F\\u0915 \\u0916\\u093E\\u0932\\u0940 \\u0915\\u093E\\u0917\\u091C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u090F\\u0915 \\u092A\\u0947\\u0928 \\u092F\\u093E \\u092A\\u0947\\u0902\\u0938\\u093F\\u0932\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u0906\\u0935\\u0936\\u094D\\u092F\\u0915 \\u0938\\u0939\\u093E\\u092F\\u0915 \\u0909\\u092A\\u0915\\u0930\\u0923 (\\u091C\\u0948\\u0938\\u0947, \\u0936\\u094D\\u0930\\u0935\\u0923 \\u092F\\u0902\\u0924\\u094D\\u0930, \\u091A\\u0936\\u094D\\u092E\\u093E, \\u0918\\u0921\\u093C\\u0940)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u0926\\u0947\\u0916\\u092D\\u093E\\u0932\\u0915\\u0930\\u094D\\u0924\\u093E \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u094B \\u092C\\u0948\\u0920\\u093E\\u090F\\u0901: \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u094B \\u0905\\u092A\\u0928\\u0947 \\u0938\\u093E\\u092E\\u0928\\u0947 \\u0910\\u0938\\u0940 \\u091C\\u0917\\u0939 \\u092A\\u0930 \\u092C\\u0948\\u0920\\u093E\\u090F\\u0901 \\u091C\\u0939\\u093E\\u0901 \\u0935\\u0947 \\u0906\\u092A\\u0915\\u094B \\u0938\\u094D\\u092A\\u0937\\u094D\\u091F \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0926\\u0947\\u0916 \\u0914\\u0930 \\u0938\\u0941\\u0928 \\u0938\\u0915\\u0947\\u0902\\u0964\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u092A\\u0922\\u093C\\u0947\\u0902: \\u092A\\u094D\\u0930\\u0924\\u094D\\u092F\\u0947\\u0915 \\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u0915\\u094B \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u0947 \\u0932\\u093F\\u090F \\u091C\\u093C\\u094B\\u0930 \\u0938\\u0947 \\u092A\\u0922\\u093C\\u0947\\u0902\\u0964\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u0909\\u0924\\u094D\\u0924\\u0930 \\u091A\\u093F\\u0939\\u094D\\u0928\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902: \\u092F\\u0926\\u093F \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0938\\u0939\\u0940 \\u0909\\u0924\\u094D\\u0924\\u0930 \\u0926\\u0947\\u0924\\u093E \\u0939\\u0948 \\u0924\\u094B \\u091A\\u0947\\u0915\\u092C\\u0949\\u0915\\u094D\\u0938 \\u092A\\u0930 \\u0928\\u093F\\u0936\\u093E\\u0928 \\u0932\\u0917\\u093E\\u090F\\u0901\\u0964\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u0905\\u0917\\u0932\\u0947 \\u092A\\u0930 \\u091C\\u093E\\u090F\\u0902: \\u0939\\u0930 \\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u0915\\u0947 \\u092C\\u093E\\u0926 \\\"\\u0905\\u0917\\u0932\\u093E\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), \"\\u0915\\u094D\\u092F\\u093E \\u0906\\u092A \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0924\\u0948\\u092F\\u093E\\u0930 \\u0939\\u0948\\u0902?\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Online MMSE Test: Preparation & Instructions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), \"Welcome! Before starting the test, please ensure the following:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"A caregiver is present to administer the test.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"A blank paper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"A pen or pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Any necessary aids (e.g., hearing aids, glasses, clock)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Instructions for the Caregiver:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Seat the Patient: Position the patient across from you, where they can see and hear you clearly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Read Aloud: Read each question out loud to the patient.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Mark Responses: Check the box if the patient answers correctly.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Progress: Click \\\"Next\\\" after each question.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), \"Are you ready to begin?\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"agreement-text\",\n        children: language === LANGUAGES.HINDI ? 'यदि आप \"स्वीकार करें\" पर क्लिक करते हैं, तो आप परीक्षण में भाग लेने के लिए सहमत हैं।' : 'By clicking \"Accept,\" you agree to participate in the test.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instruction-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accept-button\",\n          onClick: () => setShowInitialInstructions(false),\n          children: language === LANGUAGES.HINDI ? 'स्वीकार करें' : 'Accept'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"deny-button\",\n          onClick: () => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          },\n          children: language === LANGUAGES.HINDI ? 'अस्वीकार करें' : 'Deny'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this), [language]);\n\n  // Component: MultipleChoiceTask\n  const MultipleChoiceTask = _s(useCallback(_s(() => {\n    _s();\n    const task = tasks[selectedTab];\n    const totalSelectedCount = useMemo(() => {\n      return Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n    }, [allSelectedAnswers]);\n    const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    };\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-choice-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: task.questions[currentQuestionIndex].question[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), currentQuestionIndex === 11 && task.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-image-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/pentagon.png\",\n          alt: \"Shape for copying\",\n          className: \"question-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"choices-container\",\n          children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"choice-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: currentSelections.includes(index),\n              onChange: () => handleAnswerSelect(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this), choice[language]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"choices-container\",\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"choice-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: currentSelections.includes(index),\n            onChange: () => handleAnswerSelect(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 17\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            className: \"nav-button\",\n            children: language === LANGUAGES.HINDI ? 'पिछला' : 'Previous'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === task.questions.length - 1,\n            className: \"nav-button\",\n            children: language === LANGUAGES.HINDI ? 'अगला' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-counter\",\n          children: language === LANGUAGES.HINDI ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-number-navigation\",\n        children: task.questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQuestionIndex(index),\n          className: `question-number-button ${index === currentQuestionIndex ? 'active' : ''}`,\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setTestCompleted(true),\n          className: \"submit-button\",\n          \"aria-label\": language === LANGUAGES.HINDI ? 'जमा करें' : 'Submit',\n          children: language === LANGUAGES.HINDI ? 'जमा करें' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 7\n    }, this);\n  }, \"3ETbLl8Rz+XJfSt6McCfWX6g1So=\"), [selectedTab, language, allSelectedAnswers, currentQuestionIndex, handleAnswerSelect]), \"3ETbLl8Rz+XJfSt6McCfWX6g1So=\");\n\n  // Component: TaskContent\n  const TaskContent = useCallback(() => {\n    const task = tasks[selectedTab];\n    if (task.id === 2) {\n      if (testCompleted) {\n        return /*#__PURE__*/_jsxDEV(TaskCompletion, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 16\n        }, this);\n      }\n      if (showInitialInstructions) {\n        return /*#__PURE__*/_jsxDEV(InitialInstructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 16\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"zoom-instruction\",\n          children: [language === LANGUAGES.HINDI ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', ' ', \"\\uD83D\\uDD0D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Task\",\n          className: \"task-image\",\n          onClick: () => setShowImageModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-modal\",\n          onClick: () => setShowImageModal(false),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.image,\n            alt: \"Popup Task\",\n            className: \"popup-task-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-paragraph\",\n        children: task.paragraph[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 7\n    }, this);\n  }, [selectedTab, language, showImageModal, testCompleted, showInitialInstructions, TaskCompletion, InitialInstructions, MultipleChoiceTask]);\n\n  // Component: InitialPopup\n  const InitialPopup = useCallback(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"initial-popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: language === LANGUAGES.ENGLISH ? 'Welcome to the Dementia Test!' : 'डिमेंशिया टेस्ट में आपका स्वागत है!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"initial-popup-paragraph\",\n        children: language === LANGUAGES.ENGLISH ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"This test includes three parts:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Paragraph Reading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this), \" (1 min)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Picture Interpretation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this), \" (1 min)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"MMSE online test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), \" (~15 min, requires a caregiver if available)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), \"Please ensure you\\u2019re in a quiet space with audio and video recording permissions enabled.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this), \"Please Choose the language for the test\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"\\u092F\\u0939 \\u091F\\u0947\\u0938\\u094D\\u091F \\u0924\\u0940\\u0928 \\u092D\\u093E\\u0917\\u094B\\u0902 \\u092E\\u0947\\u0902 \\u0939\\u0948:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u092A\\u0948\\u0930\\u093E\\u0917\\u094D\\u0930\\u093E\\u092B \\u092A\\u0922\\u093C\\u0928\\u093E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 15\n          }, this), \" (1 \\u092E\\u093F\\u0928\\u091F)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u091A\\u093F\\u0924\\u094D\\u0930 \\u0935\\u094D\\u092F\\u093E\\u0916\\u094D\\u092F\\u093E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), \" (1 \\u092E\\u093F\\u0928\\u091F)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"MMSE \\u0911\\u0928\\u0932\\u093E\\u0907\\u0928 \\u091F\\u0947\\u0938\\u094D\\u091F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 15\n          }, this), \" (~15 \\u092E\\u093F\\u0928\\u091F, \\u0915\\u0947\\u092F\\u0930\\u0917\\u093F\\u0935\\u0930 \\u0909\\u092A\\u0932\\u092C\\u094D\\u0927 \\u0939\\u094B \\u0924\\u094B)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902 \\u0915\\u093F \\u0906\\u092A \\u0936\\u093E\\u0902\\u0924 \\u0938\\u094D\\u0925\\u093E\\u0928 \\u092E\\u0947\\u0902 \\u0939\\u0948\\u0902 \\u0914\\u0930 \\u0911\\u0921\\u093F\\u092F\\u094B-\\u0935\\u0940\\u0921\\u093F\\u092F\\u094B \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0905\\u0928\\u0941\\u092E\\u0924\\u093F \\u0938\\u0915\\u094D\\u0937\\u092E \\u0939\\u0948\\u0964\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 15\n          }, this), \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u092A\\u0930\\u0940\\u0915\\u094D\\u0937\\u0923 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u092D\\u093E\\u0937\\u093E \\u091A\\u0941\\u0928\\u0947\\u0902\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage(LANGUAGES.ENGLISH),\n          className: `language-button ${language === LANGUAGES.ENGLISH ? 'active' : ''}`,\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage(LANGUAGES.HINDI),\n          className: `language-button ${language === LANGUAGES.HINDI ? 'active' : ''}`,\n          children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"begin-test-button\",\n        onClick: () => setShowInitialPopup(false),\n        children: language === LANGUAGES.ENGLISH ? 'Begin Test' : 'टेस्ट शुरू करें'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 675,\n    columnNumber: 5\n  }, this), [language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-id-display\",\n      children: [\"Patient ID: \", state.patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 9\n    }, this), showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''} ${completedTasks.has(task.id) ? 'completed' : ''} ${task.id < selectedTab ? 'disabled' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            \"aria-disabled\": completedTasks.has(task.id) || task.id < selectedTab,\n            children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"checkmark\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 53\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(TaskContent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"media-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-controls\",\n              children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-playback\",\n                children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: mediaURL,\n                  controls: true,\n                  className: \"recorded-media\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 786,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                  src: mediaURL,\n                  controls: true,\n                  className: \"recorded-media\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 788,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleReRecord,\n                  className: \"re-record-button\",\n                  children: language === LANGUAGES.HINDI ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 790,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recording-controls\",\n                children: [isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Time remaining: \", countdown, \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 796,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleMediaRecord,\n                  className: \"record-button\",\n                  \"aria-label\": isRecording ? language === LANGUAGES.HINDI ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === LANGUAGES.HINDI ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice',\n                  children: isRecording ? language === LANGUAGES.HINDI ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === LANGUAGES.HINDI ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 797,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !mediaURL || isSubmitting,\n              className: \"submit-media-button\",\n              children: language === LANGUAGES.HINDI ? 'जमा करें' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 19\n            }, this), renderTick]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 11\n      }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: language === LANGUAGES.HINDI ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: language === LANGUAGES.HINDI ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?' : 'Refreshing the page will remove all current entries. Do you want to continue?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefreshCancel,\n              className: \"cancel-button\",\n              children: language === LANGUAGES.HINDI ? 'रद्द करें' : 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefreshConfirm,\n              className: \"confirm-button\",\n              children: language === LANGUAGES.HINDI ? 'रीफ्रेश करें' : 'Refresh'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 737,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadForm, \"i2joIEo1gVxhY7xRF1S3x8WftmU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","useLocation","useNavigate","tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","LANGUAGES","ENGLISH","HINDI","getText","key","language","texts","welcome","english","hindi","exit","FileUploadForm","_s2","_s","$RefreshSig$","isSubmitting","setIsSubmitting","state","navigate","showModal","setShowModal","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","showInitialInstructions","setShowInitialInstructions","showRefreshWarning","setShowRefreshWarning","selectedTab","setSelectedTab","completedTasks","setCompletedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","testCompleted","setTestCompleted","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","countdown","setCountdown","mediaRecorderRef","mediaChunksRef","countdownIntervalRef","audioBlob","setAudioBlob","videoBlob","setVideoBlob","showTick","setShowTick","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","patientId","name","age","setItem","stringify","clearDataOnRefresh","clear","window","addEventListener","removeEventListener","blockRefresh","e","preventDefault","returnValue","blockKeyboardRefresh","metaKey","ctrlKey","stopPropagation","blockContextMenu","handleRefreshConfirm","location","reload","handleRefreshCancel","handleTabClick","id","has","current","stop","stream","getTracks","forEach","track","calculateScore","totalScore","Object","values","selections","length","handleExit","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","mediaRecorder","MediaRecorder","start","setInterval","prev","clearInterval","event","data","size","push","mediaBlob","Blob","type","url","URL","createObjectURL","catch","err","console","error","alert","handleReRecord","handleSubmit","formData","FormData","append","currentBlob","response","fetch","method","body","ok","errorData","json","Error","result","log","setTimeout","nextTab","message","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","renderTick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TaskCompletion","score","maxScore","onClick","InstructionModal","InitialInstructions","MultipleChoiceTask","task","totalSelectedCount","reduce","total","currentSelections","handleNext","questions","handlePrevious","question","image","src","alt","choices","map","choice","checked","includes","onChange","disabled","_","TaskContent","paragraph","InitialPopup","title","onSubmit","controls","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './data/tasks';\nimport './App.css';\n\n// Language Constants\nconst LANGUAGES = {\n  ENGLISH: 'english',\n  HINDI: 'hindi',\n};\n\n// Helper Function for Language Texts\nconst getText = (key, language) => {\n  const texts = {\n    welcome: {\n      english: 'Welcome to the Dementia Test!',\n      hindi: 'डिमेंशिया टेस्ट में आपका स्वागत है!',\n    },\n    // Add other key-text mappings here\n    // Example:\n    exit: {\n      english: 'Exit',\n      hindi: 'बाहर निकलें',\n    },\n    // Continue for all text elements used in the component\n  };\n  return texts[key][language];\n};\n\nfunction FileUploadForm() {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  // Modal States\n  const [showModal, setShowModal] = useState(true);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n\n  // Tab and Task States\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n\n  // Language State\n  const [language, setLanguage] = useState(LANGUAGES.ENGLISH);\n\n  // Recording States\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState('');\n  const [countdown, setCountdown] = useState(60);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const countdownIntervalRef = useRef(null);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n\n  // Additional States\n  const [showTick, setShowTick] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem('allSelectedAnswers');\n    return savedData ? JSON.parse(savedData) : {};\n  });\n\n  // Effect: Validate Patient Info on Mount\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Effect: Persist Answers to Session Storage\n  useEffect(() => {\n    sessionStorage.setItem('allSelectedAnswers', JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n\n  // Effect: Clear Session Storage on Refresh\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n      sessionStorage.clear();\n    };\n\n    window.addEventListener('beforeunload', clearDataOnRefresh);\n\n    return () => {\n      window.removeEventListener('beforeunload', clearDataOnRefresh);\n    };\n  }, []);\n\n  // Effect: Block Page Refresh and Context Menu During Test\n  useEffect(() => {\n    const blockRefresh = (e) => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n        e.returnValue = '';\n        return 'Test is in progress. Refresh is disabled.';\n      }\n    };\n\n    const blockKeyboardRefresh = (e) => {\n      if (!showInitialPopup) {\n        if (\n          (e.metaKey && e.key === 'r') || // Cmd + R (macOS)\n          (e.ctrlKey && e.key === 'r') || // Ctrl + R (Windows/Linux)\n          e.key === 'F5' // F5 (all platforms)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          setShowRefreshWarning(true);\n        }\n      }\n    };\n\n    const blockContextMenu = (e) => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n      }\n    };\n\n    window.addEventListener('beforeunload', blockRefresh);\n    window.addEventListener('keydown', blockKeyboardRefresh);\n    window.addEventListener('contextmenu', blockContextMenu);\n\n    return () => {\n      window.removeEventListener('beforeunload', blockRefresh);\n      window.removeEventListener('keydown', blockKeyboardRefresh);\n      window.removeEventListener('contextmenu', blockContextMenu);\n    };\n  }, [showInitialPopup]);\n\n  // Handle Refresh Confirmation\n  const handleRefreshConfirm = () => {\n    setShowRefreshWarning(false);\n    window.location.reload();\n  };\n\n  const handleRefreshCancel = () => {\n    setShowRefreshWarning(false);\n  };\n\n  // Handle Tab Click with Validations\n  const handleTabClick = useCallback(\n    (id) => {\n      if (completedTasks.has(id) || id < selectedTab) {\n        return;\n      }\n\n      setSelectedTab(id);\n      setShowModal(id !== 2);\n      setCountdown(60);\n      setMediaURL('');\n      mediaChunksRef.current = [];\n\n      // Stop any ongoing recordings\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach((track) => track.stop());\n      }\n\n      if (id === 2) {\n        setShowInitialInstructions(true);\n      } else {\n        setShowInitialInstructions(false);\n      }\n    },\n    [completedTasks, selectedTab]\n  );\n\n  // Calculate Total Score\n  const calculateScore = useCallback(() => {\n    let totalScore = 0;\n    Object.values(allSelectedAnswers).forEach((selections) => {\n      if (selections && selections.length > 0) {\n        totalScore += selections.length;\n      }\n    });\n    return totalScore;\n  }, [allSelectedAnswers]);\n\n  // Handle Exit\n  const handleExit = useCallback(() => {\n    sessionStorage.clear();\n    navigate('/');\n  }, [navigate]);\n\n  // Handle Media Recording\n  const handleMediaRecord = useCallback(() => {\n    const mediaType = selectedTab === 1 ? { video: true, audio: true } : { audio: true };\n\n    if (!isRecording) {\n      setMediaURL('');\n      setCountdown(60);\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n\n      navigator.mediaDevices\n        .getUserMedia(mediaType)\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaChunksRef.current = [];\n\n          mediaRecorder.start();\n          setIsRecording(true);\n\n          // Start Countdown\n          countdownIntervalRef.current = setInterval(() => {\n            setCountdown((prev) => {\n              if (prev <= 1) {\n                clearInterval(countdownIntervalRef.current);\n                if (mediaRecorder.state === 'recording') {\n                  mediaRecorder.stop();\n                  stream.getTracks().forEach((track) => track.stop());\n                  setIsRecording(false);\n                }\n                return 0;\n              }\n              return prev - 1;\n            });\n          }, 1000);\n\n          // Collect Data Chunks\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            if (event.data.size > 0) {\n              mediaChunksRef.current.push(event.data);\n            }\n          });\n\n          // Handle Stop Event\n          mediaRecorder.addEventListener('stop', () => {\n            const mediaBlob = new Blob(mediaChunksRef.current, {\n              type: selectedTab === 1 ? 'video/webm' : 'audio/webm',\n            });\n            const url = URL.createObjectURL(mediaBlob);\n            setMediaURL(url);\n\n            if (selectedTab === 1) {\n              setVideoBlob(mediaBlob);\n            } else {\n              setAudioBlob(mediaBlob);\n            }\n\n            setIsRecording(false);\n            mediaChunksRef.current = [];\n            clearInterval(countdownIntervalRef.current);\n          });\n        })\n        .catch((err) => {\n          console.error('Error accessing media:', err);\n          setIsRecording(false);\n          alert(\n            `Could not access your ${\n              selectedTab === 1 ? 'camera' : 'microphone'\n            }. Please check your browser settings.`\n          );\n        });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach((track) => track.stop());\n        clearInterval(countdownIntervalRef.current);\n        setCountdown(0);\n      }\n    }\n  }, [isRecording, selectedTab]);\n\n  // Handle Re-recording\n  const handleReRecord = useCallback(() => {\n    setMediaURL('');\n    selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    mediaChunksRef.current = [];\n\n    if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n      mediaRecorderRef.current.stream.getTracks().forEach((track) => track.stop());\n    }\n\n    handleMediaRecord();\n  }, [selectedTab, handleMediaRecord]);\n\n  // Handle Form Submission\n  const handleSubmit = useCallback(\n    async (e) => {\n      e.preventDefault();\n\n      if (isSubmitting) return;\n\n      setIsSubmitting(true);\n\n      try {\n        if (!state?.patientId || !state?.name || !state?.age) {\n          alert('Patient information is missing. Please start over.');\n          navigate('/');\n          return;\n        }\n\n        const formData = new FormData();\n        formData.append('name', state.name);\n        formData.append('age', state.age);\n        formData.append('patientId', state.patientId);\n        formData.append('score', calculateScore());\n\n        const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n        if (!currentBlob) {\n          alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n          setIsSubmitting(false);\n          return;\n        }\n\n        formData.append(selectedTab === 1 ? 'video' : 'audio', currentBlob, `${selectedTab === 1 ? 'video' : 'audio'}.webm`);\n\n        const response = await fetch('http://localhost:5001/save', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || 'Upload failed');\n        }\n\n        const result = await response.json();\n        console.log('Upload result:', result);\n\n        setShowTick(true);\n        setTimeout(() => {\n          setShowTick(false);\n          setCompletedTasks((prev) => new Set([...prev, selectedTab]));\n          const nextTab = selectedTab + 1;\n          if (nextTab < tasks.length) {\n            handleTabClick(nextTab);\n          }\n        }, 1000);\n\n        setMediaURL('');\n        selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n      } catch (error) {\n        console.error('Submission error:', error);\n        alert(error.message || 'Error uploading file. Please try again.');\n      } finally {\n        setIsSubmitting(false);\n      }\n    },\n    [isSubmitting, state, navigate, selectedTab, videoBlob, audioBlob, calculateScore, handleTabClick]\n  );\n\n  // Handle Answer Selection\n  const handleAnswerSelect = useCallback(\n    (choiceIndex) => {\n      setAllSelectedAnswers((prevSelected) => {\n        const updatedAnswers = { ...prevSelected };\n        if (!updatedAnswers[currentQuestionIndex]) {\n          updatedAnswers[currentQuestionIndex] = [];\n        }\n\n        const currentAnswers = updatedAnswers[currentQuestionIndex];\n        const index = currentAnswers.indexOf(choiceIndex);\n        if (index === -1) {\n          updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n        } else {\n          updatedAnswers[currentQuestionIndex] = currentAnswers.filter((idx) => idx !== choiceIndex);\n        }\n\n        return updatedAnswers;\n      });\n    },\n    [currentQuestionIndex]\n  );\n\n  // Render Tick\n  const renderTick = useMemo(() => {\n    return showTick ? <span className=\"tick\">✔</span> : null;\n  }, [showTick]);\n\n  // Component: TaskCompletion\n  const TaskCompletion = useCallback(() => {\n    const score = calculateScore();\n    const maxScore = 30; // Maximum possible MMSE score\n\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen p-8 bg-white max-w-2xl mx-auto\">\n        <div className=\"text-center w-full\">\n          <h2 className=\"text-3xl font-bold mb-8 text-gray-800\">\n            {language === LANGUAGES.HINDI ? 'धन्यवाद!' : 'Thank You!'}\n          </h2>\n          {/* Score Display */}\n          <div className=\"bg-blue-50 p-6 rounded-lg shadow-sm mb-8\">\n            <h3 className=\"text-xl font-semibold mb-2\">\n              {language === LANGUAGES.HINDI ? 'आपका स्कोर' : 'Your Score'}\n            </h3>\n            <div className=\"text-4xl font-bold text-blue-600\">\n              {score} / {maxScore}\n            </div>\n          </div>\n          <div className=\"space-y-4\">\n            <p className=\"text-lg\">\n              {language === LANGUAGES.HINDI\n                ? 'आपका परीक्षण पूरा हो गया है। परिणाम आपके स्वास्थ्य देखभाल प्रदाता द्वारा साझा किए जाएंगे।'\n                : 'Your test has been completed. The results will be shared by your healthcare provider.'}\n            </p>\n            <p className=\"text-base text-gray-600\">\n              {language === LANGUAGES.HINDI\n                ? 'कृपया अपने स्वास्थ्य देखभाल प्रदाता से संपर्क करें।'\n                : 'Please contact your healthcare provider for follow-up.'}\n            </p>\n\n            {/* Exit Button */}\n            <button\n              onClick={handleExit}\n              className=\"exit-button\"\n              aria-label={language === LANGUAGES.HINDI ? 'बाहर निकलें' : 'Exit'}\n            >\n              {language === LANGUAGES.HINDI ? 'बाहर निकलें' : 'Exit'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }, [calculateScore, language, handleExit]);\n\n  // Component: InstructionModal\n  const InstructionModal = useCallback(() => (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <h2>{language === LANGUAGES.HINDI ? 'निर्देश' : 'Instructions'}</h2>\n        <p className=\"modal-paragraph\">\n          {selectedTab === 0\n            ? language === LANGUAGES.HINDI\n              ? 'कृपया \"आवाज़ रिकॉर्ड करें\" पर क्लिक करें और जोर से पढ़ें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें।'\n              : 'Please click \"Record Voice\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save.'\n            : language === LANGUAGES.HINDI\n            ? 'कृपया \"वीडियो रिकॉर्ड करें\" पर क्लिक करें और चित्र का वर्णन करें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें। ज़ूम इन के लिए, कृपया चित्र पर क्लिक करें।'\n            : 'Please click \"Record Video\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save. To zoom in, please click on the picture.'}\n        </p>\n        <button className=\"custom-ok-button\" onClick={() => setShowModal(false)}>\n          OK\n        </button>\n      </div>\n    </div>\n  ), [language, selectedTab]);\n\n  // Component: InitialInstructions\n  const InitialInstructions = useCallback(() => (\n    <div className=\"initial-instructions-overlay\">\n      <div className=\"initial-instructions-content\">\n        <h2>{language === LANGUAGES.HINDI ? 'ऑनलाइन MMSE परीक्षण में आपका स्वागत है' : 'Welcome to the Online MMSE Test'}</h2>\n        <p className=\"instructions-paragraph\">\n          {language === LANGUAGES.HINDI ? (\n            <>\n              <strong>ऑनलाइन MMSE टेस्ट: तैयारी और निर्देश</strong>\n              <br />\n              <br />\n              स्वागत है! टेस्ट शुरू करने से पहले कृपया निम्नलिखित सुनिश्चित करें:\n              <ul>\n                <li>एक देखभालकर्ता (Caregiver) की उपस्थिति आवश्यक है, जो टेस्ट ले सके।</li>\n                <li>एक खाली कागज</li>\n                <li>एक पेन या पेंसिल</li>\n                <li>आवश्यक सहायक उपकरण (जैसे, श्रवण यंत्र, चश्मा, घड़ी)</li>\n              </ul>\n              <br />\n              <strong>देखभालकर्ता के लिए निर्देश:</strong>\n              <ul>\n                <li>व्यक्ति को बैठाएँ: व्यक्ति को अपने सामने ऐसी जगह पर बैठाएँ जहाँ वे आपको स्पष्ट रूप से देख और सुन सकें।</li>\n                <li>प्रश्न पढ़ें: प्रत्येक प्रश्न को व्यक्ति के लिए ज़ोर से पढ़ें।</li>\n                <li>उत्तर चिह्नित करें: यदि व्यक्ति सही उत्तर देता है तो चेकबॉक्स पर निशान लगाएँ।</li>\n                <li>अगले पर जाएं: हर प्रश्न के बाद \"अगला\" पर क्लिक करें।</li>\n              </ul>\n              <br />\n              क्या आप शुरू करने के लिए तैयार हैं?\n            </>\n          ) : (\n            <>\n              <strong>Online MMSE Test: Preparation & Instructions</strong>\n              <br />\n              <br />\n              Welcome! Before starting the test, please ensure the following:\n              <ul>\n                <li>A caregiver is present to administer the test.</li>\n                <li>A blank paper</li>\n                <li>A pen or pencil</li>\n                <li>Any necessary aids (e.g., hearing aids, glasses, clock)</li>\n              </ul>\n              <br />\n              <strong>Instructions for the Caregiver:</strong>\n              <ul>\n                <li>Seat the Patient: Position the patient across from you, where they can see and hear you clearly.</li>\n                <li>Read Aloud: Read each question out loud to the patient.</li>\n                <li>Mark Responses: Check the box if the patient answers correctly.</li>\n                <li>Progress: Click \"Next\" after each question.</li>\n              </ul>\n              <br />\n              Are you ready to begin?\n            </>\n          )}\n        </p>\n        <p className=\"agreement-text\">\n          {language === LANGUAGES.HINDI\n            ? 'यदि आप \"स्वीकार करें\" पर क्लिक करते हैं, तो आप परीक्षण में भाग लेने के लिए सहमत हैं।'\n            : 'By clicking \"Accept,\" you agree to participate in the test.'}\n        </p>\n        <div className=\"instruction-buttons\">\n          <button className=\"accept-button\" onClick={() => setShowInitialInstructions(false)}>\n            {language === LANGUAGES.HINDI ? 'स्वीकार करें' : 'Accept'}\n          </button>\n          <button\n            className=\"deny-button\"\n            onClick={() => {\n              setShowInitialInstructions(false);\n              setTestCompleted(true);\n            }}\n          >\n            {language === LANGUAGES.HINDI ? 'अस्वीकार करें' : 'Deny'}\n          </button>\n        </div>\n      </div>\n    </div>\n  ), [language]);\n\n  // Component: MultipleChoiceTask\n  const MultipleChoiceTask = useCallback(() => {\n    const task = tasks[selectedTab];\n\n    const totalSelectedCount = useMemo(() => {\n      return Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n    }, [allSelectedAnswers]);\n\n    const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    };\n\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n      }\n    };\n\n    return (\n      <div className=\"multiple-choice-task\">\n        <h3 className=\"question-text\">{task.questions[currentQuestionIndex].question[language]}</h3>\n\n        {/* Render the current question and choices */}\n        {currentQuestionIndex === 11 && task.image ? (\n          <div className=\"question-image-section\">\n            <img src=\"/pentagon.png\" alt=\"Shape for copying\" className=\"question-image\" />\n            <div className=\"choices-container\">\n              {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                <label key={index} className=\"choice-label\">\n                  <input\n                    type=\"checkbox\"\n                    checked={currentSelections.includes(index)}\n                    onChange={() => handleAnswerSelect(index)}\n                  />\n                  {choice[language]}\n                </label>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div className=\"choices-container\">\n            {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n              <label key={index} className=\"choice-label\">\n                <input\n                  type=\"checkbox\"\n                  checked={currentSelections.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                />\n                {choice[language]}\n              </label>\n            ))}\n          </div>\n        )}\n\n        {/* Navigation Buttons and Counter */}\n        <div className=\"navigation-container\">\n          <div className=\"navigation-buttons\">\n            <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} className=\"nav-button\">\n              {language === LANGUAGES.HINDI ? 'पिछला' : 'Previous'}\n            </button>\n            <button\n              onClick={handleNext}\n              disabled={currentQuestionIndex === task.questions.length - 1}\n              className=\"nav-button\"\n            >\n              {language === LANGUAGES.HINDI ? 'अगला' : 'Next'}\n            </button>\n          </div>\n          <div className=\"selected-counter\">\n            {language === LANGUAGES.HINDI ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`}\n          </div>\n        </div>\n\n        {/* Question Number Navigation */}\n        <div className=\"question-number-navigation\">\n          {task.questions.map((_, index) => (\n            <button\n              key={index}\n              onClick={() => setCurrentQuestionIndex(index)}\n              className={`question-number-button ${index === currentQuestionIndex ? 'active' : ''}`}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"submit-button-container\">\n          <button\n            onClick={() => setTestCompleted(true)}\n            className=\"submit-button\"\n            aria-label={language === LANGUAGES.HINDI ? 'जमा करें' : 'Submit'}\n          >\n            {language === LANGUAGES.HINDI ? 'जमा करें' : 'Submit'}\n          </button>\n        </div>\n      </div>\n    );\n  }, [selectedTab, language, allSelectedAnswers, currentQuestionIndex, handleAnswerSelect]);\n\n  // Component: TaskContent\n  const TaskContent = useCallback(() => {\n    const task = tasks[selectedTab];\n\n    if (task.id === 2) {\n      if (testCompleted) {\n        return <TaskCompletion />;\n      }\n\n      if (showInitialInstructions) {\n        return <InitialInstructions />;\n      }\n\n      return <MultipleChoiceTask />;\n    }\n\n    return (\n      <div className=\"task-content\">\n        {task.image ? (\n          <>\n            <div className=\"zoom-instruction\">\n              {language === LANGUAGES.HINDI\n                ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें'\n                : 'Click on the image to zoom in / zoom out'}{' '}\n              🔍\n            </div>\n            <img\n              src={task.image}\n              alt=\"Task\"\n              className=\"task-image\"\n              onClick={() => setShowImageModal(true)}\n            />\n            {showImageModal && (\n              <div className=\"image-modal\" onClick={() => setShowImageModal(false)}>\n                <img src={task.image} alt=\"Popup Task\" className=\"popup-task-image\" />\n              </div>\n            )}\n          </>\n        ) : (\n          <p className=\"task-paragraph\">{task.paragraph[language]}</p>\n        )}\n      </div>\n    );\n  }, [selectedTab, language, showImageModal, testCompleted, showInitialInstructions, TaskCompletion, InitialInstructions, MultipleChoiceTask]);\n\n  // Component: InitialPopup\n  const InitialPopup = useCallback(() => (\n    <div className=\"initial-popup-overlay\">\n      <div className=\"initial-popup-content\">\n        <h2>{language === LANGUAGES.ENGLISH ? 'Welcome to the Dementia Test!' : 'डिमेंशिया टेस्ट में आपका स्वागत है!'}</h2>\n        <p className=\"initial-popup-paragraph\">\n          {language === LANGUAGES.ENGLISH ? (\n            <>\n              This test includes three parts:\n              <br />\n              <br />\n              <strong>Paragraph Reading</strong> (1 min)\n              <br />\n              <strong>Picture Interpretation</strong> (1 min)\n              <br />\n              <strong>MMSE online test</strong> (~15 min, requires a caregiver if available)\n              <br />\n              <br />\n              Please ensure you’re in a quiet space with audio and video recording permissions enabled.\n              <br />\n              <br />\n              Please Choose the language for the test\n            </>\n          ) : (\n            <>\n              यह टेस्ट तीन भागों में है:\n              <br />\n              <br />\n              <strong>पैराग्राफ पढ़ना</strong> (1 मिनट)\n              <br />\n              <strong>चित्र व्याख्या</strong> (1 मिनट)\n              <br />\n              <strong>MMSE ऑनलाइन टेस्ट</strong> (~15 मिनट, केयरगिवर उपलब्ध हो तो)\n              <br />\n              <br />\n              कृपया सुनिश्चित करें कि आप शांत स्थान में हैं और ऑडियो-वीडियो रिकॉर्डिंग अनुमति सक्षम है।\n              <br />\n              <br />\n              कृपया परीक्षण के लिए भाषा चुनें\n            </>\n          )}\n        </p>\n        <div className=\"language-selection\">\n          <button\n            onClick={() => setLanguage(LANGUAGES.ENGLISH)}\n            className={`language-button ${language === LANGUAGES.ENGLISH ? 'active' : ''}`}\n          >\n            English\n          </button>\n          <button\n            onClick={() => setLanguage(LANGUAGES.HINDI)}\n            className={`language-button ${language === LANGUAGES.HINDI ? 'active' : ''}`}\n          >\n            हिंदी\n          </button>\n        </div>\n        <button className=\"begin-test-button\" onClick={() => setShowInitialPopup(false)}>\n          {language === LANGUAGES.ENGLISH ? 'Begin Test' : 'टेस्ट शुरू करें'}\n        </button>\n      </div>\n    </div>\n  ), [language]);\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div className=\"patient-id-display\">\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {/* Initial Test Setup Modal */}\n      {showInitialPopup ? (\n        <InitialPopup />\n      ) : (\n        <>\n          {/* Instructions Modal */}\n          {showModal && <InstructionModal />}\n\n          {/* Main Content */}\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''} ${\n                      completedTasks.has(task.id) ? 'completed' : ''\n                    } ${task.id < selectedTab ? 'disabled' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                    aria-disabled={completedTasks.has(task.id) || task.id < selectedTab}\n                  >\n                    {task.title[language]}\n                    {completedTasks.has(task.id) && <span className=\"checkmark\">✓</span>}\n                  </div>\n                ))}\n            </div>\n\n            {/* Task Content Area */}\n            <div className=\"content\">\n              <TaskContent />\n\n              {/* Media Recording Form */}\n              {selectedTab !== 2 && (\n                <form onSubmit={handleSubmit} className=\"media-form\">\n                  <div className=\"media-controls\">\n                    {mediaURL ? (\n                      <div className=\"media-playback\">\n                        {selectedTab === 1 ? (\n                          <video src={mediaURL} controls className=\"recorded-media\" />\n                        ) : (\n                          <audio src={mediaURL} controls className=\"recorded-media\" />\n                        )}\n                        <button type=\"button\" onClick={handleReRecord} className=\"re-record-button\">\n                          {language === LANGUAGES.HINDI ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"recording-controls\">\n                        {isRecording && <p>Time remaining: {countdown}s</p>}\n                        <button\n                          type=\"button\"\n                          onClick={handleMediaRecord}\n                          className=\"record-button\"\n                          aria-label={isRecording ? (language === LANGUAGES.HINDI ? 'रिकॉर्डिंग रोकें' : 'Stop Recording') : language === LANGUAGES.HINDI\n                            ? selectedTab === 1\n                              ? 'वीडियो रिकॉर्ड करें'\n                              : 'आवाज़ रिकॉर्ड करें'\n                            : selectedTab === 1\n                            ? 'Record Video'\n                            : 'Record Voice'}\n                        >\n                          {isRecording\n                            ? language === LANGUAGES.HINDI\n                              ? 'रिकॉर्डिंग रोकें'\n                              : 'Stop Recording'\n                            : language === LANGUAGES.HINDI\n                            ? selectedTab === 1\n                              ? 'वीडियो रिकॉर्ड करें'\n                              : 'आवाज़ रिकॉर्ड करें'\n                            : selectedTab === 1\n                            ? 'Record Video'\n                            : 'Record Voice'}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  <button type=\"submit\" disabled={!mediaURL || isSubmitting} className=\"submit-media-button\">\n                    {language === LANGUAGES.HINDI ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {renderTick}\n                </form>\n              )}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <h2>{language === LANGUAGES.HINDI ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}</h2>\n                <p>\n                  {language === LANGUAGES.HINDI\n                    ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                    : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n                </p>\n                <div className=\"button-container\">\n                  <button onClick={handleRefreshCancel} className=\"cancel-button\">\n                    {language === LANGUAGES.HINDI ? 'रद्द करें' : 'Cancel'}\n                  </button>\n                  <button onClick={handleRefreshConfirm} className=\"confirm-button\">\n                    {language === LANGUAGES.HINDI ? 'रीफ्रेश करें' : 'Refresh'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}