{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './data/tasks';\nimport './App.css';\n\n// Custom hook for media recording\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useMediaRecorder = selectedTab => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [countdown, setCountdown] = useState(60);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const handleMediaRecord = async () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true,\n      audio: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(mediaType);\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        const countdownInterval = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownInterval);\n              if (mediaRecorder.state === \"recording\") {\n                mediaRecorder.stop();\n                stream.getTracks().forEach(track => track.stop());\n                setIsRecording(false);\n              }\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        mediaRecorder.countdownInterval = countdownInterval;\n        mediaRecorder.addEventListener('dataavailable', event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          const url = URL.createObjectURL(mediaBlob);\n          setMediaURL(url);\n          setIsRecording(false);\n          mediaChunksRef.current = [];\n          clearInterval(mediaRecorder.countdownInterval);\n          return mediaBlob;\n        });\n      } catch (error) {\n        console.error('Error accessing media:', error);\n        setIsRecording(false);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      }\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n      }\n    }\n  };\n  return {\n    isRecording,\n    mediaURL,\n    countdown,\n    handleMediaRecord,\n    setMediaURL\n  };\n};\n\n// Custom hook for handling submissions\n_s(useMediaRecorder, \"MGTcCyau3A+J/iO2XnZMdE7ptXI=\");\nconst useSubmitHandler = (state, navigate, setShowTick, setCompletedTasks, selectedTab) => {\n  _s2();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async (e, mediaBlob, score = '0') => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n        throw new Error('Patient information is missing');\n      }\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      formData.append('score', score);\n      if (!mediaBlob && selectedTab !== 2) {\n        throw new Error(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      }\n      if (selectedTab === 1) {\n        formData.append('video', mediaBlob, 'video.webm');\n      } else if (selectedTab === 0) {\n        formData.append('audio', mediaBlob, 'audio.webm');\n      }\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n      }, 1000);\n      return true;\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n      return false;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return {\n    isSubmitting,\n    handleSubmit\n  };\n};\n\n// Custom hook for session storage\n_s2(useSubmitHandler, \"oafqrj090+oRf5bsyDQJHsshgoc=\");\nconst useSessionStorage = (key, initialValue) => {\n  _s3();\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = sessionStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(storedValue));\n    } catch (error) {\n      console.error(error);\n    }\n  }, [key, storedValue]);\n  return [storedValue, setStoredValue];\n};\n\n// Utility functions\n_s3(useSessionStorage, \"85AY5VMEeFHicyA4Z5VHr6dnayI=\");\nconst calculateScore = allSelectedAnswers => {\n  return Object.values(allSelectedAnswers).reduce((total, selections) => total + ((selections === null || selections === void 0 ? void 0 : selections.length) || 0), 0);\n};\n\n// Component to handle initial popup\nconst InitialPopup = ({\n  language,\n  setLanguage,\n  onClose\n}) => {\n  _s4();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [language]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"initial-popup-overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: language === 'english' ? '/audio/q1_en.mp3' : '/audio/q1_hi.mp3'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: language === 'english' ? 'Welcome to the Dementia Test!' : 'डिमेंशिया टेस्ट में आपका स्वागत है!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage('english'),\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setLanguage('hindi'),\n          children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n// Main component\n_s4(InitialPopup, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = InitialPopup;\nfunction FileUploadForm() {\n  _s5();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    state\n  } = location;\n\n  // State management with custom hooks\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showModal, setShowModal] = useState(true);\n  const [showTick, setShowTick] = useState(false);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  // Custom hooks\n  const [allSelectedAnswers, setAllSelectedAnswers] = useSessionStorage('allSelectedAnswers', {});\n  const {\n    isRecording,\n    mediaURL,\n    countdown,\n    handleMediaRecord,\n    setMediaURL\n  } = useMediaRecorder(selectedTab);\n  const {\n    isSubmitting,\n    handleSubmit\n  } = useSubmitHandler(state, navigate, setShowTick, setCompletedTasks, selectedTab);\n\n  // Navigation protection\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Handle tab switching\n  const handleTabClick = id => {\n    if (completedTasks.has(id) || id < selectedTab) return;\n    setCountdown(60);\n    setMediaURL(\"\");\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  };\n\n  // Handle rerecording\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n\n  // Render methods\n  const renderMediaControls = () => {\n    if (mediaURL) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-playback\",\n        children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n          src: mediaURL,\n          controls: true,\n          style: {\n            maxWidth: '350px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: mediaURL,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleReRecord,\n          className: \"custom-button\",\n          children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-controls\",\n      children: [isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Time remaining: \", countdown, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleMediaRecord,\n        className: \"custom-button\",\n        children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this);\n  };\n  const renderContent = () => {\n    if (showInitialPopup) {\n      return /*#__PURE__*/_jsxDEV(InitialPopup, {\n        language: language,\n        setLanguage: setLanguage,\n        onClose: () => setShowInitialPopup(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''} \n                            ${completedTasks.has(task.id) ? 'completed' : ''}\n                            ${task.id < selectedTab ? 'disabled' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 51\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(TaskContent, {\n            task: tasks[selectedTab],\n            language: language,\n            testCompleted: testCompleted,\n            showInitialInstructions: showInitialInstructions,\n            setShowInitialInstructions: setShowInitialInstructions,\n            setTestCompleted: setTestCompleted,\n            allSelectedAnswers: allSelectedAnswers,\n            setAllSelectedAnswers: setAllSelectedAnswers,\n            currentQuestionIndex: currentQuestionIndex,\n            setCurrentQuestionIndex: setCurrentQuestionIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleSubmit(e, mediaURL),\n            className: \"media-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-controls\",\n              children: renderMediaControls()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !mediaURL || isSubmitting,\n              className: \"custom-button\",\n              children: language === 'hindi' ? 'जमा करें' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tick\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-id-display\",\n      children: [\"Patient ID: \", state.patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n}\n\n// TaskContent component\n_s5(FileUploadForm, \"izBIAcbywB+J01jM/N29Idjl7a4=\", false, function () {\n  return [useLocation, useNavigate, useSessionStorage, useMediaRecorder, useSubmitHandler];\n});\n_c2 = FileUploadForm;\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n  currentQuestionIndex,\n  setCurrentQuestionIndex\n}) => {\n  if (task.id === 2) {\n    if (testCompleted) {\n      return /*#__PURE__*/_jsxDEV(TaskCompletion, {\n        language: language,\n        allSelectedAnswers: allSelectedAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 14\n      }, this);\n    }\n    if (showInitialInstructions) {\n      return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n        onAccept: () => setShowInitialInstructions(false),\n        onDeny: () => {\n          setShowInitialInstructions(false);\n          setTestCompleted(true);\n        },\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n      task: task,\n      language: language,\n      setTestCompleted: setTestCompleted,\n      allSelectedAnswers: allSelectedAnswers,\n      setAllSelectedAnswers: setAllSelectedAnswers,\n      currentQuestionIndex: currentQuestionIndex,\n      setCurrentQuestionIndex: setCurrentQuestionIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-content\",\n    children: task.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoom-instruction\",\n        children: [language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: task.image,\n        alt: \"Task\",\n        className: \"task-image\",\n        onClick: () => setShowImageModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-paragraph\",\n      children: task.paragraph[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n};\n\n// MultipleChoiceTask component\n_c3 = TaskContent;\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers\n}) => {\n  const handleAnswerSelect = choiceIndex => {\n    setAllSelectedAnswers(prevSelected => {\n      const updatedAnswers = {\n        ...prevSelected\n      };\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n      }\n      return updatedAnswers;\n    });\n  };\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + ((selections === null || selections === void 0 ? void 0 : selections.length) || 0), 0);\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-choice-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.questions[currentQuestionIndex].question[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choices-container\",\n      children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"choice-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: currentSelections.includes(index),\n          onChange: () => handleAnswerSelect(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this), choice[language]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentQuestionIndex(prev => Math.max(0, prev - 1)),\n        disabled: currentQuestionIndex === 0,\n        children: language === 'hindi' ? 'पिछला' : 'Previous'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentQuestionIndex(prev => Math.min(task.questions.length - 1, prev + 1)),\n        disabled: currentQuestionIndex === task.questions.length - 1,\n        children: language === 'hindi' ? 'अगला' : 'Next'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-display\",\n      children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 491,\n    columnNumber: 5\n  }, this);\n};\n\n// Export the component\n_c4 = MultipleChoiceTask;\nexport default FileUploadForm;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"InitialPopup\");\n$RefreshReg$(_c2, \"FileUploadForm\");\n$RefreshReg$(_c3, \"TaskContent\");\n$RefreshReg$(_c4, \"MultipleChoiceTask\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","useMediaRecorder","selectedTab","_s","isRecording","setIsRecording","mediaURL","setMediaURL","countdown","setCountdown","mediaRecorderRef","mediaChunksRef","handleMediaRecord","mediaType","video","audio","stream","navigator","mediaDevices","getUserMedia","mediaRecorder","MediaRecorder","current","start","countdownInterval","setInterval","prev","clearInterval","state","stop","getTracks","forEach","track","addEventListener","event","data","size","push","mediaBlob","Blob","type","url","URL","createObjectURL","error","console","alert","useSubmitHandler","navigate","setShowTick","setCompletedTasks","_s2","isSubmitting","setIsSubmitting","handleSubmit","e","score","preventDefault","patientId","name","age","Error","formData","FormData","append","response","fetch","method","body","ok","errorData","json","setTimeout","Set","message","useSessionStorage","key","initialValue","_s3","storedValue","setStoredValue","item","sessionStorage","getItem","JSON","parse","setItem","stringify","calculateScore","allSelectedAnswers","Object","values","reduce","total","selections","length","InitialPopup","language","setLanguage","onClose","_s4","audioRef","play","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","FileUploadForm","_s5","location","setSelectedTab","showInitialPopup","setShowInitialPopup","showModal","setShowModal","showTick","completedTasks","showImageModal","setShowImageModal","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","currentQuestionIndex","setCurrentQuestionIndex","setAllSelectedAnswers","handleTabClick","id","has","handleReRecord","renderMediaControls","controls","style","maxWidth","renderContent","InstructionModal","filter","task","map","title","TaskContent","onSubmit","disabled","_c2","TaskCompletion","InitialInstructions","onAccept","onDeny","MultipleChoiceTask","image","alt","paragraph","_c3","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","idx","totalSelectedCount","currentSelections","questions","question","choices","choice","checked","includes","onChange","Math","max","min","_c4","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './data/tasks';\nimport './App.css';\n\n// Custom hook for media recording\nconst useMediaRecorder = (selectedTab) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [countdown, setCountdown] = useState(60);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  const handleMediaRecord = async () => {\n    const mediaType = selectedTab === 1 \n      ? { video: true, audio: true }\n      : { audio: true };\n\n    if (!isRecording) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(mediaType);\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        const countdownInterval = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownInterval);\n              if (mediaRecorder.state === \"recording\") {\n                mediaRecorder.stop();\n                stream.getTracks().forEach(track => track.stop());\n                setIsRecording(false);\n              }\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n\n        mediaRecorder.countdownInterval = countdownInterval;\n\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          const url = URL.createObjectURL(mediaBlob);\n          setMediaURL(url);\n          setIsRecording(false);\n          mediaChunksRef.current = [];\n          clearInterval(mediaRecorder.countdownInterval);\n          return mediaBlob;\n        });\n      } catch (error) {\n        console.error('Error accessing media:', error);\n        setIsRecording(false);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      }\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n      }\n    }\n  };\n\n  return {\n    isRecording,\n    mediaURL,\n    countdown,\n    handleMediaRecord,\n    setMediaURL\n  };\n};\n\n// Custom hook for handling submissions\nconst useSubmitHandler = (state, navigate, setShowTick, setCompletedTasks, selectedTab) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e, mediaBlob, score = '0') => {\n    e.preventDefault();\n    if (isSubmitting) return;\n\n    setIsSubmitting(true);\n    \n    try {\n      if (!state?.patientId || !state?.name || !state?.age) {\n        throw new Error('Patient information is missing');\n      }\n\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      formData.append('score', score);\n\n      if (!mediaBlob && selectedTab !== 2) {\n        throw new Error(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      }\n\n      if (selectedTab === 1) {\n        formData.append('video', mediaBlob, 'video.webm');\n      } else if (selectedTab === 0) {\n        formData.append('audio', mediaBlob, 'audio.webm');\n      }\n\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n      }, 1000);\n\n      return true;\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n      return false;\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return { isSubmitting, handleSubmit };\n};\n\n// Custom hook for session storage\nconst useSessionStorage = (key, initialValue) => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = sessionStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  useEffect(() => {\n    try {\n      sessionStorage.setItem(key, JSON.stringify(storedValue));\n    } catch (error) {\n      console.error(error);\n    }\n  }, [key, storedValue]);\n\n  return [storedValue, setStoredValue];\n};\n\n// Utility functions\nconst calculateScore = (allSelectedAnswers) => {\n  return Object.values(allSelectedAnswers).reduce(\n    (total, selections) => total + (selections?.length || 0),\n    0\n  );\n};\n\n// Component to handle initial popup\nconst InitialPopup = ({ language, setLanguage, onClose }) => {\n  const audioRef = useRef(null);\n  \n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [language]);\n\n  return (\n    <div className=\"initial-popup-overlay\">\n      <audio\n        ref={audioRef}\n        src={language === 'english' ? '/audio/q1_en.mp3' : '/audio/q1_hi.mp3'}\n      />\n      <div className=\"initial-popup-content\">\n        <h2>\n          {language === 'english' \n            ? 'Welcome to the Dementia Test!' \n            : 'डिमेंशिया टेस्ट में आपका स्वागत है!'}\n        </h2>\n        {/* ... Rest of the popup content */}\n        <div className=\"language-selection\">\n          <button onClick={() => setLanguage('english')}>English</button>\n          <button onClick={() => setLanguage('hindi')}>हिंदी</button>\n        </div>\n        <button onClick={onClose}>\n          {language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Main component\nfunction FileUploadForm() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { state } = location;\n\n  // State management with custom hooks\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showModal, setShowModal] = useState(true);\n  const [showTick, setShowTick] = useState(false);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  // Custom hooks\n  const [allSelectedAnswers, setAllSelectedAnswers] = useSessionStorage('allSelectedAnswers', {});\n  const { isRecording, mediaURL, countdown, handleMediaRecord, setMediaURL } = useMediaRecorder(selectedTab);\n  const { isSubmitting, handleSubmit } = useSubmitHandler(\n    state,\n    navigate,\n    setShowTick,\n    setCompletedTasks,\n    selectedTab\n  );\n\n  // Navigation protection\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Handle tab switching\n  const handleTabClick = (id) => {\n    if (completedTasks.has(id) || id < selectedTab) return;\n\n    setCountdown(60);\n    setMediaURL(\"\");\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  };\n\n  // Handle rerecording\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n\n  // Render methods\n  const renderMediaControls = () => {\n    if (mediaURL) {\n      return (\n        <div className=\"media-playback\">\n          {selectedTab === 1 ? (\n            <video src={mediaURL} controls style={{ maxWidth: '350px' }} />\n          ) : (\n            <audio src={mediaURL} controls />\n          )}\n          <button type=\"button\" onClick={handleReRecord} className=\"custom-button\">\n            {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"recording-controls\">\n        {isRecording && <p>Time remaining: {countdown}s</p>}\n        <button\n          type=\"button\"\n          onClick={handleMediaRecord}\n          className=\"custom-button\"\n        >\n          {isRecording\n            ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n            : language === 'hindi'\n            ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें'\n            : selectedTab === 1 ? 'Record Video' : 'Record Voice'}\n        </button>\n      </div>\n    );\n  };\n\n  const renderContent = () => {\n    if (showInitialPopup) {\n      return (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      );\n    }\n\n    return (\n      <>\n        {showModal && <InstructionModal onClose={() => setShowModal(false)} language={language} />}\n        <div className=\"container\">\n          {/* Tabs */}\n          <div className=\"tabs\">\n            {tasks\n              .filter((task) => !(task.id === 2 && testCompleted))\n              .map((task) => (\n                <div\n                  key={task.id}\n                  className={`tab ${selectedTab === task.id ? 'active' : ''} \n                            ${completedTasks.has(task.id) ? 'completed' : ''}\n                            ${task.id < selectedTab ? 'disabled' : ''}`}\n                  onClick={() => handleTabClick(task.id)}\n                >\n                  {task.title[language]}\n                  {completedTasks.has(task.id) && <span>✓</span>}\n                </div>\n              ))}\n          </div>\n\n          {/* Content */}\n          <div className=\"content\">\n            <TaskContent\n              task={tasks[selectedTab]}\n              language={language}\n              testCompleted={testCompleted}\n              showInitialInstructions={showInitialInstructions}\n              setShowInitialInstructions={setShowInitialInstructions}\n              setTestCompleted={setTestCompleted}\n              allSelectedAnswers={allSelectedAnswers}\n              setAllSelectedAnswers={setAllSelectedAnswers}\n              currentQuestionIndex={currentQuestionIndex}\n              setCurrentQuestionIndex={setCurrentQuestionIndex}\n            />\n\n            {/* Media Recording Form */}\n            {selectedTab !== 2 && (\n              <form onSubmit={(e) => handleSubmit(e, mediaURL)} className=\"media-form\">\n                <div className=\"media-controls\">\n                  {renderMediaControls()}\n                </div>\n                <button \n                  type=\"submit\" \n                  disabled={!mediaURL || isSubmitting}\n                  className=\"custom-button\"\n                >\n                  {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                </button>\n                {showTick && <span className=\"tick\">✔</span>}\n              </form>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div className=\"patient-id-display\">\n          Patient ID: {state.patientId}\n        </div>\n      )}\n      {renderContent()}\n    </div>\n  );\n}\n\n// TaskContent component\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n  currentQuestionIndex,\n  setCurrentQuestionIndex\n}) => {\n  if (task.id === 2) {\n    if (testCompleted) {\n      return <TaskCompletion language={language} allSelectedAnswers={allSelectedAnswers} />;\n    }\n    \n    if (showInitialInstructions) {\n      return (\n        <InitialInstructions\n          onAccept={() => setShowInitialInstructions(false)}\n          onDeny={() => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          }}\n          language={language}\n        />\n      );\n    }\n\n    return (\n      <MultipleChoiceTask\n        task={task}\n        language={language}\n        setTestCompleted={setTestCompleted}\n        allSelectedAnswers={allSelectedAnswers}\n        setAllSelectedAnswers={setAllSelectedAnswers}\n        currentQuestionIndex={currentQuestionIndex}\n        setCurrentQuestionIndex={setCurrentQuestionIndex}\n      />\n    );\n  }\n\n  return (\n    <div className=\"task-content\">\n      {task.image ? (\n        <div>\n          <div className=\"zoom-instruction\">\n            {language === 'hindi' \n              ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' \n              : 'Click on the image to zoom in / zoom out'} 🔍\n          </div>\n          <img\n            src={task.image}\n            alt=\"Task\"\n            className=\"task-image\"\n            onClick={() => setShowImageModal(true)}\n          />\n        </div>\n      ) : (\n        <p className=\"task-paragraph\">\n          {task.paragraph[language]}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// MultipleChoiceTask component\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n}) => {\n  const handleAnswerSelect = (choiceIndex) => {\n    setAllSelectedAnswers((prevSelected) => {\n      const updatedAnswers = { ...prevSelected };\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      const index = currentAnswers.indexOf(choiceIndex);\n      \n      if (index === -1) {\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n          (idx) => idx !== choiceIndex\n        );\n      }\n      return updatedAnswers;\n    });\n  };\n\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n    (total, selections) => total + (selections?.length || 0),\n    0\n  );\n\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n\n  return (\n    <div className=\"multiple-choice-task\">\n      <h3>{task.questions[currentQuestionIndex].question[language]}</h3>\n      <div className=\"choices-container\">\n        {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n          <label key={index} className=\"choice-label\">\n            <input\n              type=\"checkbox\"\n              checked={currentSelections.includes(index)}\n              onChange={() => handleAnswerSelect(index)}\n            />\n            {choice[language]}\n          </label>\n        ))}\n      </div>\n      <div className=\"navigation-container\">\n        <button \n          onClick={() => setCurrentQuestionIndex(prev => Math.max(0, prev - 1))}\n          disabled={currentQuestionIndex === 0}\n        >\n          {language === 'hindi' ? 'पिछला' : 'Previous'}\n        </button>\n        <button\n          onClick={() => setCurrentQuestionIndex(prev => Math.min(task.questions.length - 1, prev + 1))}\n          disabled={currentQuestionIndex === task.questions.length - 1}\n        >\n          {language === 'hindi' ? 'अगला' : 'Next'}\n        </button>\n      </div>\n      <div className=\"score-display\">\n        {language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`}\n      </div>\n    </div>\n  );\n};\n\n// Export the component\nexport default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}