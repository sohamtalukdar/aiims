{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './components/tasks';\nimport MMSETest from './components/MMSETest';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n\n  // Navigation and UI States\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showModal, setShowModal] = useState(true);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [language, setLanguage] = useState('english');\n\n  // Media Recording States\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [countdown, setCountdown] = useState(60);\n  const [showTick, setShowTick] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Refs\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  // Check for required patient info\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Handle page refresh and navigation\n  useEffect(() => {\n    const handleBeforeUnload = e => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n        e.returnValue = '';\n        return \"Test is in progress. Refresh is disabled.\";\n      }\n    };\n    const handleKeyboardRefresh = e => {\n      if (!showInitialPopup && (e.metaKey && e.key === 'r' || e.ctrlKey && e.key === 'r' || e.key === 'F5')) {\n        e.preventDefault();\n        return false;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    window.addEventListener('keydown', handleKeyboardRefresh);\n    window.addEventListener('contextmenu', e => !showInitialPopup && e.preventDefault());\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      window.removeEventListener('keydown', handleKeyboardRefresh);\n    };\n  }, [showInitialPopup]);\n  const handleTabClick = id => {\n    var _mediaRecorderRef$cur;\n    // Prevent navigation to completed or previous tasks\n    if (completedTasks.has(id) || id < selectedTab) {\n      return;\n    }\n\n    // Reset recording state\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    if (((_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : _mediaRecorderRef$cur.state) === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n  };\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true,\n      audio: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      // Start new recording\n      setMediaURL(\"\");\n      setCountdown(60);\n      setVideoBlob(null);\n      setAudioBlob(null);\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        const countdownInterval = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownInterval);\n              if (mediaRecorder.state === \"recording\") {\n                mediaRecorder.stop();\n                stream.getTracks().forEach(track => track.stop());\n                setIsRecording(false);\n              }\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        mediaRecorder.countdownInterval = countdownInterval;\n        mediaRecorder.addEventListener('dataavailable', event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          const url = URL.createObjectURL(mediaBlob);\n          setMediaURL(url);\n          selectedTab === 1 ? setVideoBlob(mediaBlob) : setAudioBlob(mediaBlob);\n          setIsRecording(false);\n          mediaChunksRef.current = [];\n          clearInterval(mediaRecorder.countdownInterval);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        setIsRecording(false);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      // Stop current recording\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n        throw new Error('Patient information is missing. Please start over.');\n      }\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      formData.append('score', '0'); // Only MMSE test has scores\n\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        throw new Error(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      }\n      formData.append(selectedTab === 1 ? 'video' : 'audio', currentBlob, selectedTab === 1 ? 'video.webm' : 'audio.webm');\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n        handleTabClick(selectedTab + 1);\n      }, 1000);\n      setMediaURL('');\n      setVideoBlob(null);\n      setAudioBlob(null);\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const renderTaskContent = () => {\n    const currentTask = tasks[selectedTab];\n    if (selectedTab === 2) {\n      return /*#__PURE__*/_jsxDEV(MMSETest, {\n        language: language,\n        onTestComplete: score => {\n          setCompletedTasks(prev => new Set([...prev, 2]));\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-content\",\n        children: currentTask.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-2 cursor-pointer\",\n            children: [language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: currentTask.image,\n            alt: \"Task\",\n            className: \"cursor-pointer max-w-full max-h-full\",\n            onClick: () => setShowImageModal(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-modal\",\n            onClick: () => setShowImageModal(false),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentTask.image,\n              alt: \"Task Full Size\",\n              className: \"max-w-90 max-h-90 object-contain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"w-3/5 mx-auto leading-relaxed text-lg\",\n          children: currentTask.paragraph[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"media-form flex flex-col items-center gap-4 mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-controls\",\n          children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-playback\",\n            children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: mediaURL,\n              controls: true,\n              className: \"max-w-sm w-full h-auto mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n              src: mediaURL,\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleMediaRecord(),\n              className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n              children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-controls\",\n            children: [isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center mb-2\",\n              children: [\"Time remaining: \", countdown, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleMediaRecord,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",\n              children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !mediaURL || isSubmitting,\n          className: \"px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700  disabled:opacity-50 disabled:cursor-not-allowed\",\n          children: language === 'hindi' ? 'जमा करें' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-green-600 text-2xl\",\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-5 right-5 bg-white px-3 py-2 rounded shadow-sm  border border-gray-200 font-mono text-sm\",\n      children: [\"Patient ID: \", state.patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: language,\n      setLanguage: setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && selectedTab !== 2 && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        language: language,\n        selectedTab: selectedTab,\n        onClose: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleTabClick(task.id),\n            className: `tab ${selectedTab === task.id ? 'active' : ''} \n                            ${completedTasks.has(task.id) ? 'completed' : ''}\n                            ${task.id < selectedTab ? 'disabled' : ''}`,\n            children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-1 text-green-600\",\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: renderTaskContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(RefreshWarningModal, {\n        language: language,\n        onConfirm: () => {\n          setShowRefreshWarning(false);\n          window.location.reload();\n        },\n        onCancel: () => setShowRefreshWarning(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadForm, \"pEozIgsCsbFHw2utZy0Z4kA1mYc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","MMSETest","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s","state","navigate","selectedTab","setSelectedTab","showInitialPopup","setShowInitialPopup","showModal","setShowModal","showImageModal","setShowImageModal","showRefreshWarning","setShowRefreshWarning","completedTasks","setCompletedTasks","Set","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","audioBlob","setAudioBlob","videoBlob","setVideoBlob","countdown","setCountdown","showTick","setShowTick","isSubmitting","setIsSubmitting","mediaRecorderRef","mediaChunksRef","patientId","name","age","handleBeforeUnload","e","preventDefault","returnValue","handleKeyboardRefresh","metaKey","key","ctrlKey","window","addEventListener","removeEventListener","handleTabClick","id","_mediaRecorderRef$cur","has","current","stop","stream","getTracks","forEach","track","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","mediaRecorder","MediaRecorder","start","countdownInterval","setInterval","prev","clearInterval","event","data","size","push","mediaBlob","Blob","type","url","URL","createObjectURL","catch","err","console","error","alert","handleSubmit","Error","formData","FormData","append","currentBlob","response","fetch","method","body","ok","errorData","json","setTimeout","message","renderTaskContent","currentTask","onTestComplete","score","fileName","_jsxFileName","lineNumber","columnNumber","children","className","image","src","alt","onClick","paragraph","onSubmit","controls","disabled","InitialPopup","onClose","InstructionModal","map","task","title","RefreshWarningModal","onConfirm","location","reload","onCancel","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './components/tasks';\nimport MMSETest from './components/MMSETest';\nimport './App.css';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  \n  // Navigation and UI States\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showModal, setShowModal] = useState(true);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [language, setLanguage] = useState('english');\n\n  // Media Recording States\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [countdown, setCountdown] = useState(60);\n  const [showTick, setShowTick] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  // Refs\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  // Check for required patient info\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Handle page refresh and navigation\n  useEffect(() => {\n    const handleBeforeUnload = (e) => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n        e.returnValue = '';\n        return \"Test is in progress. Refresh is disabled.\";\n      }\n    };\n\n    const handleKeyboardRefresh = (e) => {\n      if (!showInitialPopup && (\n        (e.metaKey && e.key === 'r') || \n        (e.ctrlKey && e.key === 'r') || \n        e.key === 'F5'\n      )) {\n        e.preventDefault();\n        return false;\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    window.addEventListener('keydown', handleKeyboardRefresh);\n    window.addEventListener('contextmenu', (e) => !showInitialPopup && e.preventDefault());\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      window.removeEventListener('keydown', handleKeyboardRefresh);\n    };\n  }, [showInitialPopup]);\n\n  const handleTabClick = (id) => {\n    // Prevent navigation to completed or previous tasks\n    if (completedTasks.has(id) || id < selectedTab) {\n      return;\n    }\n\n    // Reset recording state\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    \n    if (mediaRecorderRef.current?.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    \n    setSelectedTab(id);\n    setShowModal(id !== 2);\n  };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 \n      ? { video: true, audio: true }\n      : { audio: true };\n\n    if (!isRecording) {\n      // Start new recording\n      setMediaURL(\"\");\n      setCountdown(60);\n      setVideoBlob(null);\n      setAudioBlob(null);\n\n      navigator.mediaDevices.getUserMedia(mediaType)\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaChunksRef.current = [];\n\n          mediaRecorder.start();\n          setIsRecording(true);\n\n          const countdownInterval = setInterval(() => {\n            setCountdown((prev) => {\n              if (prev <= 1) {\n                clearInterval(countdownInterval);\n                if (mediaRecorder.state === \"recording\") {\n                  mediaRecorder.stop();\n                  stream.getTracks().forEach(track => track.stop());\n                  setIsRecording(false);\n                }\n                return 0;\n              }\n              return prev - 1;\n            });\n          }, 1000);\n\n          mediaRecorder.countdownInterval = countdownInterval;\n\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            if (event.data.size > 0) {\n              mediaChunksRef.current.push(event.data);\n            }\n          });\n\n          mediaRecorder.addEventListener('stop', () => {\n            const mediaBlob = new Blob(mediaChunksRef.current, {\n              type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n            });\n            const url = URL.createObjectURL(mediaBlob);\n            setMediaURL(url);\n\n            selectedTab === 1 ? setVideoBlob(mediaBlob) : setAudioBlob(mediaBlob);\n            setIsRecording(false);\n            mediaChunksRef.current = [];\n            clearInterval(mediaRecorder.countdownInterval);\n          });\n        })\n        .catch((err) => {\n          console.error('Error accessing media:', err);\n          setIsRecording(false);\n          alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n        });\n    } else {\n      // Stop current recording\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      if (!state?.patientId || !state?.name || !state?.age) {\n        throw new Error('Patient information is missing. Please start over.');\n      }\n\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      formData.append('score', '0'); // Only MMSE test has scores\n\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        throw new Error(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      }\n\n      formData.append(selectedTab === 1 ? 'video' : 'audio', currentBlob, \n        selectedTab === 1 ? 'video.webm' : 'audio.webm');\n\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks((prev) => new Set([...prev, selectedTab]));\n        handleTabClick(selectedTab + 1);\n      }, 1000);\n\n      setMediaURL('');\n      setVideoBlob(null);\n      setAudioBlob(null);\n\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const renderTaskContent = () => {\n    const currentTask = tasks[selectedTab];\n\n    if (selectedTab === 2) {\n      return (\n        <MMSETest \n          language={language}\n          onTestComplete={(score) => {\n            setCompletedTasks(prev => new Set([...prev, 2]));\n          }}\n        />\n      );\n    }\n\n    return (\n      <>\n        <div className=\"task-content\">\n          {currentTask.image ? (\n            <>\n              <div className=\"text-sm text-gray-600 mb-2 cursor-pointer\">\n                {language === 'hindi' \n                  ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' \n                  : 'Click on the image to zoom in / zoom out'} 🔍\n              </div>\n              <img\n                src={currentTask.image}\n                alt=\"Task\"\n                className=\"cursor-pointer max-w-full max-h-full\"\n                onClick={() => setShowImageModal(true)}\n              />\n              {showImageModal && (\n                <div className=\"image-modal\" onClick={() => setShowImageModal(false)}>\n                  <img\n                    src={currentTask.image}\n                    alt=\"Task Full Size\"\n                    className=\"max-w-90 max-h-90 object-contain\"\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <p className=\"w-3/5 mx-auto leading-relaxed text-lg\">\n              {currentTask.paragraph[language]}\n            </p>\n          )}\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"media-form flex flex-col items-center gap-4 mt-5\">\n          <div className=\"media-controls\">\n            {mediaURL ? (\n              <div className=\"media-playback\">\n                {selectedTab === 1 ? (\n                  <video \n                    src={mediaURL} \n                    controls\n                    className=\"max-w-sm w-full h-auto mb-3\"\n                  />\n                ) : (\n                  <audio src={mediaURL} controls />\n                )}\n                <button \n                  type=\"button\" \n                  onClick={() => handleMediaRecord()}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                </button>\n              </div>\n            ) : (\n              <div className=\"recording-controls\">\n                {isRecording && (\n                  <p className=\"text-center mb-2\">Time remaining: {countdown}s</p>\n                )}\n                <button\n                  type=\"button\"\n                  onClick={handleMediaRecord}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  {isRecording\n                    ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n                    : language === 'hindi'\n                    ? selectedTab === 1\n                      ? 'वीडियो रिकॉर्ड करें'\n                      : 'आवाज़ रिकॉर्ड करें'\n                    : selectedTab === 1\n                    ? 'Record Video'\n                    : 'Record Voice'}\n                </button>\n              </div>\n            )}\n          </div>\n\n          <button \n            type=\"submit\" \n            disabled={!mediaURL || isSubmitting}\n            className=\"px-6 py-2 bg-green-600 text-white rounded hover:bg-green-700 \n                     disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            {language === 'hindi' ? 'जमा करें' : 'Submit'}\n          </button>\n\n          {showTick && <span className=\"text-green-600 text-2xl\">✔</span>}\n        </form>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div className=\"fixed top-5 right-5 bg-white px-3 py-2 rounded shadow-sm \n                      border border-gray-200 font-mono text-sm\">\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {showModal && selectedTab !== 2 && (\n            <InstructionModal \n              language={language} \n              selectedTab={selectedTab}\n              onClose={() => setShowModal(false)} \n            />\n          )}\n\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks.map((task) => (\n                <div\n                  key={task.id}\n                  onClick={() => handleTabClick(task.id)}\n                  className={`tab ${selectedTab === task.id ? 'active' : ''} \n                            ${completedTasks.has(task.id) ? 'completed' : ''}\n                            ${task.id < selectedTab ? 'disabled' : ''}`}\n                >\n                  {task.title[language]}\n                  {completedTasks.has(task.id) && (\n                    <span className=\"ml-1 text-green-600\">✓</span>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            {/* Main Content Area */}\n            <div className=\"content\">\n              {renderTaskContent()}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <RefreshWarningModal \n              language={language}\n              onConfirm={() => {\n                setShowRefreshWarning(false);\n                window.location.reload();\n              }}\n              onCancel={() => setShowRefreshWarning(false)}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}