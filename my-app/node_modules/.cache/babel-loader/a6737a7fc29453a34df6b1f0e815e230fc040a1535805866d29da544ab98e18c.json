{"ast":null,"code":"import{calculateScore}from'./scoreUtils';import config from'./config.json';const handleSubmit=async _ref=>{let{e,isSubmitting,setIsSubmitting,state,navigate,selectedTab,allSelectedAnswers,videoBlob,audioBlob,setShowTick,setCompletedTasks,tasks,handleTabClick,setMediaURL,setVideoBlob,setAudioBlob}=_ref;e.preventDefault();if(isSubmitting){console.log('Already submitting, returning');return;}console.log('Starting submission for tab:',selectedTab);setIsSubmitting(true);try{if(!(state!==null&&state!==void 0&&state.patientId)||!(state!==null&&state!==void 0&&state.name)||!(state!==null&&state!==void 0&&state.age)){alert('Patient information is missing. Please start over.');navigate('/');return;}const formData=new FormData();formData.append('name',state.name);formData.append('age',state.age);formData.append('patientId',state.patientId);// Initialize score as 0\nlet scoreToSend='0';// Only calculate score for MMSE test (tab 2)\nif(selectedTab===2){const calculatedScore=calculateScore(allSelectedAnswers);console.log('Tab 2: Calculated score:',calculatedScore);scoreToSend=calculatedScore.toString();}else{console.log(`Tab ${selectedTab}: Using default score: 0`);}console.log('Setting score in formData:',scoreToSend);formData.append('score',scoreToSend);// Log all form data being sent\nconsole.log('Form data contents:');for(let pair of formData.entries()){console.log(`${pair[0]}: ${pair[1]}`);}const currentBlob=selectedTab===1?videoBlob:audioBlob;if(!currentBlob){alert(`Please record ${selectedTab===1?'video':'audio'} before submitting.`);setIsSubmitting(false);return;}if(selectedTab===1){formData.append('video',currentBlob,'video.webm');}else if(selectedTab===0){formData.append('audio',currentBlob,'audio.webm');}console.log('Sending request to server...');const response=await fetch(`${config.base_url}/save`,{method:'POST',body:formData});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Upload failed');}const result=await response.json();console.log('Server response:',result);setShowTick(true);setTimeout(()=>{setShowTick(false);setCompletedTasks(prev=>new Set([...prev,selectedTab]));const nextTab=selectedTab+1;if(nextTab<tasks.length){handleTabClick(nextTab);}},1000);setMediaURL('');if(selectedTab===1){setVideoBlob(null);}else{setAudioBlob(null);}}catch(error){console.error('Submission error:',error);alert(error.message||'Error uploading file. Please try again.');}finally{setIsSubmitting(false);}};export default handleSubmit;","map":{"version":3,"names":["calculateScore","config","handleSubmit","_ref","e","isSubmitting","setIsSubmitting","state","navigate","selectedTab","allSelectedAnswers","videoBlob","audioBlob","setShowTick","setCompletedTasks","tasks","handleTabClick","setMediaURL","setVideoBlob","setAudioBlob","preventDefault","console","log","patientId","name","age","alert","formData","FormData","append","scoreToSend","calculatedScore","toString","pair","entries","currentBlob","response","fetch","base_url","method","body","ok","errorData","json","Error","error","result","setTimeout","prev","Set","nextTab","length","message"],"sources":["/home/soham/aiims/my-app/src/handleSubmit.js"],"sourcesContent":["import { calculateScore } from './scoreUtils';\nimport config from './config.json';\n\nconst handleSubmit = async ({\n  e,\n  isSubmitting,\n  setIsSubmitting,\n  state,\n  navigate,\n  selectedTab,  \n  allSelectedAnswers,\n  videoBlob,\n  audioBlob,\n  setShowTick,\n  setCompletedTasks,\n  tasks,\n  handleTabClick,\n  setMediaURL,\n  setVideoBlob,\n  setAudioBlob\n}) => {  \n  e.preventDefault();\n  if (isSubmitting) {\n    console.log('Already submitting, returning');\n    return;\n  }\n    \n  console.log('Starting submission for tab:', selectedTab);\n  setIsSubmitting(true);\n    \n  try {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      alert('Patient information is missing. Please start over.');\n      navigate('/');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', state.name);\n    formData.append('age', state.age);\n    formData.append('patientId', state.patientId);\n    \n    // Initialize score as 0\n    let scoreToSend = '0';\n    \n    // Only calculate score for MMSE test (tab 2)\n    if (selectedTab === 2) {\n      const calculatedScore = calculateScore(allSelectedAnswers);\n      console.log('Tab 2: Calculated score:', calculatedScore);\n      scoreToSend = calculatedScore.toString();\n    } else {\n      console.log(`Tab ${selectedTab}: Using default score: 0`);\n    }\n    \n    console.log('Setting score in formData:', scoreToSend);\n    formData.append('score', scoreToSend);\n\n    // Log all form data being sent\n    console.log('Form data contents:');\n    for (let pair of formData.entries()) {\n      console.log(`${pair[0]}: ${pair[1]}`);\n    }\n\n    const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n    if (!currentBlob) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      setIsSubmitting(false);\n      return;\n    }\n\n    if (selectedTab === 1) {\n      formData.append('video', currentBlob, 'video.webm');\n    } else if (selectedTab === 0) {\n      formData.append('audio', currentBlob, 'audio.webm');\n    }\n\n    console.log('Sending request to server...');\n    const response = await fetch(`${config.base_url}/save`, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.error || 'Upload failed');\n    }\n\n    const result = await response.json();\n    console.log('Server response:', result);\n\n    setShowTick(true);\n    setTimeout(() => {\n      setShowTick(false);\n      setCompletedTasks((prev) => new Set([...prev, selectedTab]));\n      const nextTab = selectedTab + 1;\n      if (nextTab < tasks.length) {\n        handleTabClick(nextTab);\n      }\n    }, 1000);\n\n    setMediaURL('');\n    if (selectedTab === 1) {\n      setVideoBlob(null);\n    } else {\n      setAudioBlob(null);\n    }\n  } catch (error) {\n    console.error('Submission error:', error);\n    alert(error.message || 'Error uploading file. Please try again.');\n  } finally {\n    setIsSubmitting(false);\n  }\n};\n\nexport default handleSubmit;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}