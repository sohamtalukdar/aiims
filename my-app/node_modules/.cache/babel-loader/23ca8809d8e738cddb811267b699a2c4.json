{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js\";\nimport React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './FileUploadForm.css'; // Import the CSS file for styling\n\nfunction FileUploadForm() {\n  const {\n    state\n  } = useLocation();\n  const [showModal, setShowModal] = useState(true); // Show modal on initial load\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]); // Moved audioChunks to a ref\n\n  const tasks = [{\n    id: 0,\n    title: '1st Task',\n    paragraph: {\n      hindi: `एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था। नीता बचपन से ही बहुत ही समझदार थी। वह हमेशा अपने दादी के साथ खेलती और बातें करती थी। \n                एक दिन, नीता के पास एक खास खिलौना आया। यह एक सुंदर सा किताब था, जिसमें फूलों के बारे में बहुत सी ख़ूबसूरत तस्वीरें थीं। नीता ने दादी के साथ उस किताब को देखकर खुशी-खुशी पढ़ना शुरू किया। \n                उसके बाद, नीता ने अपने दोस्तों को भी वो किताब दिखाई और सबको फूलों के बारे में बताया। और सबको यह सिखाया कि प्रकृति की सुंदर सी चीजों को सबको समझने का अवसर मिलता है।\n                इस कहानी का संदेश है कि हमें प्रकृति की सुंदरता को समझने और महसूस करने का समय निकालना चाहिए, और हमें अपने परिवार और दोस्तों के साथ उसे साझा करना चाहिए।`,\n      english: `Once upon a time, in a small village, there was a lovely little girl named Neeta. Neeta was very wise from a young age. She would always play with her grandmother and chat with her.\n                  One day, Neeta got a special toy, a beautiful book with many lovely pictures of flowers. She happily started reading it with her grandmother.\n                  Later, she showed the book to her friends and told them about the flowers, teaching everyone about the beauty of nature.\n                  The message of this story is that we should take time to understand and appreciate nature's beauty and share it with family and friends.`\n    }\n  }, {\n    id: 1,\n    title: '2nd Task',\n    paragraph: {\n      hindi: 'यह दूसरी कार्य के लिए अनुच्छेद है।',\n      english: 'This is the paragraph for the 2nd task.'\n    }\n  }];\n  const handleTabClick = id => {\n    setSelectedTab(id);\n  };\n  const toggleLanguage = e => {\n    e.preventDefault();\n    setLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');\n  };\n  const handleAudioRecord = () => {\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start();\n        setIsRecording(true);\n        let audioChunks = [];\n        mediaRecorder.addEventListener('dataavailable', event => {\n          audioChunks.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const audioBlob = new Blob(audioChunks, {\n            type: 'audio/mpeg'\n          });\n          setAudioURL(URL.createObjectURL(audioBlob)); // Save audio URL to play back\n          setIsRecording(false);\n        });\n      });\n    } else {\n      mediaRecorderRef.current.stop(); // Stop recording if already recording\n    }\n  };\n  const handleReRecord = () => {\n    setAudioURL(\"\");\n    handleAudioRecord();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name);\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    formData.append('audio', audioURL);\n    const response = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    console.log(result);\n    alert(`Uploaded successfully: Audio URL: ${result.audio_url}`);\n  };\n\n  // Modal component for instructions\n  const InstructionModal = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Instructions\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Please click on the \\\"Record Voice\\\" button and read the passage out loud in whichever language you\\u2019re comfortable with. Once you finish reading, click \\\"Stop Recording\\\" and then \\\"Submit\\\" to save your recording.\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Got it!\")));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, showModal && /*#__PURE__*/React.createElement(InstructionModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n    onClick: () => handleTabClick(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, task.title))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleLanguage,\n    onMouseDown: e => e.preventDefault(),\n    style: {\n      marginBottom: '10px',\n      padding: '8px 12px',\n      cursor: 'pointer',\n      backgroundColor: '#007bff',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Switch to \", language === 'hindi' ? 'English' : 'Hindi'), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, tasks[selectedTab].title), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: 'center',\n      width: '60%',\n      margin: '0 auto',\n      lineHeight: '1.8',\n      fontSize: '1.1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, tasks[selectedTab].paragraph[language]), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '15px',\n      marginTop: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"audio-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, audioURL ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"audio\", {\n    src: audioURL,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleReRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, \"Re-record\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAudioRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, isRecording ? 'Stop Recording' : 'Record Voice')), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !audioURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(\"style\", {\n    jsx: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, `\n        .modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.6);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .modal-content {\n          background: white;\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          max-width: 400px;\n          width: 80%;\n        }\n        .modal-content h2 {\n          margin-top: 0;\n        }\n        .modal-content button {\n          margin-top: 20px;\n          padding: 10px 20px;\n          background-color: #007bff;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .modal-content button:hover {\n          background-color: #0056b3;\n        }\n      `));\n}\nexport default FileUploadForm;","map":{"version":3,"names":["React","useState","useRef","useLocation","FileUploadForm","state","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","audioURL","setAudioURL","mediaRecorderRef","audioChunksRef","tasks","id","title","paragraph","hindi","english","handleTabClick","toggleLanguage","e","preventDefault","prev","handleAudioRecord","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","current","start","audioChunks","addEventListener","event","push","data","audioBlob","Blob","type","URL","createObjectURL","stop","handleReRecord","handleSubmit","formData","FormData","append","name","age","response","fetch","method","body","result","json","console","log","alert","audio_url","InstructionModal","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","key","onMouseDown","style","marginBottom","padding","cursor","backgroundColor","color","border","borderRadius","textAlign","width","margin","lineHeight","fontSize","onSubmit","display","flexDirection","alignItems","gap","marginTop","Fragment","src","controls","disabled","jsx"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './FileUploadForm.css'; // Import the CSS file for styling\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const [showModal, setShowModal] = useState(true); // Show modal on initial load\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]); // Moved audioChunks to a ref\n\n  const tasks = [\n    {\n      id: 0,\n      title: '1st Task',\n      paragraph: {\n        hindi: `एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था। नीता बचपन से ही बहुत ही समझदार थी। वह हमेशा अपने दादी के साथ खेलती और बातें करती थी। \n                एक दिन, नीता के पास एक खास खिलौना आया। यह एक सुंदर सा किताब था, जिसमें फूलों के बारे में बहुत सी ख़ूबसूरत तस्वीरें थीं। नीता ने दादी के साथ उस किताब को देखकर खुशी-खुशी पढ़ना शुरू किया। \n                उसके बाद, नीता ने अपने दोस्तों को भी वो किताब दिखाई और सबको फूलों के बारे में बताया। और सबको यह सिखाया कि प्रकृति की सुंदर सी चीजों को सबको समझने का अवसर मिलता है।\n                इस कहानी का संदेश है कि हमें प्रकृति की सुंदरता को समझने और महसूस करने का समय निकालना चाहिए, और हमें अपने परिवार और दोस्तों के साथ उसे साझा करना चाहिए।`,\n        english: `Once upon a time, in a small village, there was a lovely little girl named Neeta. Neeta was very wise from a young age. She would always play with her grandmother and chat with her.\n                  One day, Neeta got a special toy, a beautiful book with many lovely pictures of flowers. She happily started reading it with her grandmother.\n                  Later, she showed the book to her friends and told them about the flowers, teaching everyone about the beauty of nature.\n                  The message of this story is that we should take time to understand and appreciate nature's beauty and share it with family and friends.`\n      }\n    },\n    {\n      id: 1,\n      title: '2nd Task',\n      paragraph: {\n        hindi: 'यह दूसरी कार्य के लिए अनुच्छेद है।',\n        english: 'This is the paragraph for the 2nd task.'\n      }\n    },\n  ];\n\n  const handleTabClick = (id) => {\n    setSelectedTab(id);\n  };\n\n  const toggleLanguage = (e) => {\n    e.preventDefault();\n    setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  };\n\n  const handleAudioRecord = () => {\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        let audioChunks = [];\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          audioChunks.push(event.data);\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const audioBlob = new Blob(audioChunks, { type: 'audio/mpeg' });\n          setAudioURL(URL.createObjectURL(audioBlob)); // Save audio URL to play back\n          setIsRecording(false);\n        });\n      });\n    } else {\n      mediaRecorderRef.current.stop(); // Stop recording if already recording\n    }\n  };\n\n  const handleReRecord = () => {\n    setAudioURL(\"\");\n    handleAudioRecord();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('name', state?.name);\n    formData.append('age', state?.age);\n    formData.append('audio', audioURL);\n\n    const response = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const result = await response.json();\n    console.log(result);\n    alert(`Uploaded successfully: Audio URL: ${result.audio_url}`);\n  };\n\n  // Modal component for instructions\n  const InstructionModal = () => (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Instructions</h2>\n        <p>\n          Please click on the \"Record Voice\" button and read the passage out loud\n          in whichever language you’re comfortable with. Once you finish reading,\n          click \"Stop Recording\" and then \"Submit\" to save your recording.\n        </p>\n        <button onClick={() => setShowModal(false)}>Got it!</button>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      {showModal && <InstructionModal />} {/* Show modal if `showModal` is true */}\n\n      <div className=\"gradient-bg\"></div>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n              onClick={() => handleTabClick(task.id)}\n            >\n              {task.title}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"content\">\n          <button\n            onClick={toggleLanguage}\n            onMouseDown={(e) => e.preventDefault()}\n            style={{\n              marginBottom: '10px',\n              padding: '8px 12px',\n              cursor: 'pointer',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n            }}\n          >\n            Switch to {language === 'hindi' ? 'English' : 'Hindi'}\n          </button>\n\n          <h1>{tasks[selectedTab].title}</h1>\n          <p style={{ textAlign: 'center', width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n            {tasks[selectedTab].paragraph[language]}\n          </p>\n\n          <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '15px', marginTop: '20px' }}>\n            <div className=\"audio-controls\">\n              {audioURL ? (\n                <>\n                  <audio src={audioURL} controls />\n                  <button onClick={handleReRecord}>Re-record</button>\n                </>\n              ) : (\n                <button onClick={handleAudioRecord}>\n                  {isRecording ? 'Stop Recording' : 'Record Voice'}\n                </button>\n              )}\n            </div>\n            \n            <button type=\"submit\" disabled={!audioURL}>Submit</button>\n          </form>\n        </div>\n      </div>\n\n      {/* Modal Styling */}\n      <style jsx>{`\n        .modal-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: rgba(0, 0, 0, 0.6);\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .modal-content {\n          background: white;\n          padding: 20px;\n          border-radius: 8px;\n          text-align: center;\n          max-width: 400px;\n          width: 80%;\n        }\n        .modal-content h2 {\n          margin-top: 0;\n        }\n        .modal-content button {\n          margin-top: 20px;\n          padding: 10px 20px;\n          background-color: #007bff;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        }\n        .modal-content button:hover {\n          background-color: #0056b3;\n        }\n      `}</style>\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}