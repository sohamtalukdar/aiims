{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/MultipleChoiceTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers\n}) => {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  useEffect(() => {\n    // Start recording when component mounts\n    const startRecording = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaChunksRef.current = [];\n        mediaRecorderRef.current.ondataavailable = event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        };\n        mediaRecorderRef.current.start();\n        console.log(\"Recording started\");\n      } catch (error) {\n        console.error('Error starting recording:', error);\n      }\n    };\n    startRecording();\n\n    // Cleanup function\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleAnswerSelect = choiceIndex => {\n    setAllSelectedAnswers(prevSelected => {\n      const updatedAnswers = {\n        ...prevSelected\n      };\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n      }\n      return updatedAnswers;\n    });\n  };\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  const handleSubmit = async () => {\n    try {\n      var _mediaRecorderRef$cur;\n      if (((_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : _mediaRecorderRef$cur.state) === 'recording') {\n        console.log(\"Stopping recording...\");\n\n        // Create a promise that resolves when the recording stops\n        const audioBlob = await new Promise((resolve, reject) => {\n          mediaRecorderRef.current.onstop = () => {\n            console.log(\"Recording stopped, creating blob...\");\n            const blob = new Blob(mediaChunksRef.current, {\n              type: 'audio/webm'\n            });\n            resolve(blob);\n          };\n          mediaRecorderRef.current.onerror = event => {\n            reject(new Error('Recording failed: ' + event.error));\n          };\n          try {\n            // Stop the recording\n            mediaRecorderRef.current.stop();\n            // Stop all tracks\n            mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n          } catch (error) {\n            reject(error);\n          }\n        });\n        const finalScore = Object.values(allSelectedAnswers).reduce((total, selections) => total + (selections ? selections.length : 0), 0);\n        console.log(\"Creating form data...\");\n        const formData = new FormData();\n        formData.append('name', state.name);\n        formData.append('age', state.age);\n        formData.append('patientId', state.patientId);\n        formData.append('score', finalScore.toString());\n        formData.append('audio', audioBlob, 'mmse_audio.webm');\n        console.log(\"Sending data to server...\");\n        const response = await fetch('http://localhost:5001/save', {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Failed to save MMSE score and audio');\n        }\n        console.log('MMSE score and audio saved successfully');\n        setTestCompleted(true);\n      } else {\n        console.warn('No active recording found');\n        alert('No recording found. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error in handleSubmit:', error);\n      alert('Failed to save test score and audio. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-choice-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '5px'\n      },\n      children: task.questions[currentQuestionIndex].question[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), currentQuestionIndex === 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + '/pentagon.png',\n        alt: \"Shape for copying\",\n        style: {\n          maxWidth: '45%',\n          height: 'auto'\n        },\n        onError: e => {\n          console.error(\"Image failed to load\");\n          console.log(\"Attempted path:\", e.target.src);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            margin: '5px 0',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: currentSelections.includes(index),\n            onChange: () => handleAnswerSelect(index),\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '30vh',\n        marginTop: '10px'\n      },\n      children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          textAlign: 'center',\n          margin: '5px 0',\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: currentSelections.includes(index),\n          onChange: () => handleAnswerSelect(index),\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), choice[language]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: currentQuestionIndex === 0,\n          style: {\n            marginRight: '10px'\n          },\n          children: language === 'hindi' ? 'पिछला' : 'Previous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: currentQuestionIndex === task.questions.length - 1,\n          children: language === 'hindi' ? 'अगला' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-counter\",\n        style: {\n          marginRight: '20px'\n        },\n        children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number-navigation\",\n      style: {\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n      },\n      children: task.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentQuestionIndex(index);\n        },\n        style: {\n          margin: '5px',\n          padding: '10px',\n          backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n          color: index === currentQuestionIndex ? '#fff' : '#000',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: language === 'hindi' ? 'जमा करें' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(MultipleChoiceTask, \"qTe06vBbhgSInb+9gQYNOMd7DCw=\", false, function () {\n  return [useLocation];\n});\n_c = MultipleChoiceTask;\nexport default MultipleChoiceTask;\nvar _c;\n$RefreshReg$(_c, \"MultipleChoiceTask\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","MultipleChoiceTask","task","language","setTestCompleted","currentQuestionIndex","setCurrentQuestionIndex","allSelectedAnswers","setAllSelectedAnswers","_s","state","mediaRecorderRef","mediaChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","data","size","push","start","console","log","error","stop","getTracks","forEach","track","handleNext","questions","length","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","totalSelectedCount","Object","values","reduce","total","selections","currentSelections","handleSubmit","_mediaRecorderRef$cur","audioBlob","Promise","resolve","reject","onstop","blob","Blob","type","onerror","Error","finalScore","formData","FormData","append","name","age","patientId","toString","response","fetch","method","body","ok","warn","alert","className","children","style","textAlign","marginBottom","question","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","src","process","env","PUBLIC_URL","alt","maxWidth","height","onError","e","target","display","flexDirection","alignItems","choices","map","choice","margin","width","checked","includes","onChange","marginRight","justifyContent","minHeight","onClick","disabled","flexWrap","q","padding","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/MultipleChoiceTask.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n}) => {\n  const { state } = useLocation();\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  useEffect(() => {\n    // Start recording when component mounts\n    const startRecording = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaChunksRef.current = [];\n        \n        mediaRecorderRef.current.ondataavailable = (event) => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        };\n\n        mediaRecorderRef.current.start();\n        console.log(\"Recording started\");\n      } catch (error) {\n        console.error('Error starting recording:', error);\n      }\n    };\n\n    startRecording();\n\n    // Cleanup function\n    return () => {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleAnswerSelect = (choiceIndex) => {\n    setAllSelectedAnswers((prevSelected) => {\n      const updatedAnswers = { ...prevSelected };\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n          (idx) => idx !== choiceIndex\n        );\n      }\n      return updatedAnswers;\n    });\n  };\n\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n    (total, selections) => total + selections.length,\n    0\n  );\n\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n\n  const handleSubmit = async () => {\n    try {\n      if (mediaRecorderRef.current?.state === 'recording') {\n        console.log(\"Stopping recording...\");\n        \n        // Create a promise that resolves when the recording stops\n        const audioBlob = await new Promise((resolve, reject) => {\n          mediaRecorderRef.current.onstop = () => {\n            console.log(\"Recording stopped, creating blob...\");\n            const blob = new Blob(mediaChunksRef.current, { type: 'audio/webm' });\n            resolve(blob);\n          };\n          \n          mediaRecorderRef.current.onerror = (event) => {\n            reject(new Error('Recording failed: ' + event.error));\n          };\n\n          try {\n            // Stop the recording\n            mediaRecorderRef.current.stop();\n            // Stop all tracks\n            mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n          } catch (error) {\n            reject(error);\n          }\n        });\n\n        const finalScore = Object.values(allSelectedAnswers).reduce(\n          (total, selections) => total + (selections ? selections.length : 0),\n          0\n        );\n\n        console.log(\"Creating form data...\");\n        const formData = new FormData();\n        formData.append('name', state.name);\n        formData.append('age', state.age);\n        formData.append('patientId', state.patientId);\n        formData.append('score', finalScore.toString());\n        formData.append('audio', audioBlob, 'mmse_audio.webm');\n\n        console.log(\"Sending data to server...\");\n        const response = await fetch('http://localhost:5001/save', {\n          method: 'POST',\n          body: formData,\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to save MMSE score and audio');\n        }\n\n        console.log('MMSE score and audio saved successfully');\n        setTestCompleted(true);\n      } else {\n        console.warn('No active recording found');\n        alert('No recording found. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error in handleSubmit:', error);\n      alert('Failed to save test score and audio. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"multiple-choice-task\">\n      <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n        {task.questions[currentQuestionIndex].question[language]}\n      </h3>\n\n      {currentQuestionIndex === 10 ? (\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          <img \n            src={process.env.PUBLIC_URL + '/pentagon.png'} \n            alt=\"Shape for copying\" \n            style={{ maxWidth: '45%', height: 'auto' }}\n            onError={(e) => {\n              console.error(\"Image failed to load\");\n              console.log(\"Attempted path:\", e.target.src);\n            }}\n          />\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n              <label\n                key={index}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  textAlign: 'center',\n                  margin: '5px 0',\n                  width: '200px',\n                }}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={currentSelections.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                  style={{ marginRight: '10px' }}\n                />\n                {choice[language]}\n              </label>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '30vh',\n          marginTop: '10px'\n        }}>\n          {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n            <label\n              key={index}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                textAlign: 'center',\n                margin: '5px 0',\n                width: '200px',\n              }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={currentSelections.includes(index)}\n                onChange={() => handleAnswerSelect(index)}\n                style={{ marginRight: '10px' }}\n              />\n              {choice[language]}\n            </label>\n          ))}\n        </div>\n      )}\n\n      <div className=\"navigation-container\" style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px'\n      }}>\n        <div className=\"navigation-buttons\">\n          <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n            {language === 'hindi' ? 'पिछला' : 'Previous'}\n          </button>\n          <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n            {language === 'hindi' ? 'अगला' : 'Next'}\n          </button>\n        </div>\n        <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n          {language === 'hindi'\n            ? `चयनित: ${totalSelectedCount}`\n            : `Score: ${totalSelectedCount}`}\n        </div>\n      </div>\n\n      <div\n        className=\"question-number-navigation\"\n        style={{\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n        }}\n      >\n        {task.questions.map((q, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              setCurrentQuestionIndex(index);\n            }}\n            style={{\n              margin: '5px',\n              padding: '10px',\n              backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n              color: index === currentQuestionIndex ? '#fff' : '#000',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <button\n          onClick={handleSubmit}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n          }}\n        >\n          {language === 'hindi' ? 'जमा करें' : 'Submit'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MultipleChoiceTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}