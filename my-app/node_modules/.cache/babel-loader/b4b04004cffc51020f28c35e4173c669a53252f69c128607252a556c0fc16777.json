{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/components/TaskContent.js\";\nimport React from 'react';\nimport MultipleChoiceTask from './MultipleChoiceTask';\nimport InitialInstructions from './InitialInstructions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  setShowImageModal,\n  showImageModal\n}) => {\n  if (task.id === 2) {\n    // If test is completed, show \"Test Complete\" message\n    if (testCompleted) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-complete-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'hindi' ? 'परीक्षण पूरा' : 'Test Complete'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === 'hindi' ? 'आपके समय के लिए धन्यवाद।' : 'Thank you for your time.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    }\n    // If initial instructions are to be shown\n    if (showInitialInstructions) {\n      return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n        language: language,\n        onAccept: () => setShowInitialInstructions(false),\n        onDeny: () => {\n          setShowInitialInstructions(false);\n          setTestCompleted(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Render the MultipleChoiceTask\n    return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n      task: task,\n      language: language,\n      setTestCompleted: setTestCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-content\",\n    children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: task.image,\n        alt: \"Task\",\n        style: {\n          cursor: 'pointer',\n          maxWidth: '100%',\n          maxHeight: '100%'\n        },\n        onClick: () => setShowImageModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Popup Task\",\n          style: {\n            maxWidth: '90%',\n            maxHeight: '90%',\n            objectFit: 'contain'\n          },\n          onClick: () => setShowImageModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: '60%',\n        margin: '0 auto',\n        lineHeight: '1.8',\n        fontSize: '1.1em'\n      },\n      children: task.paragraph[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskContent;\nexport default TaskContent;\nvar _c;\n$RefreshReg$(_c, \"TaskContent\");","map":{"version":3,"names":["React","MultipleChoiceTask","InitialInstructions","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskContent","task","language","testCompleted","showInitialInstructions","setShowInitialInstructions","setTestCompleted","setShowImageModal","showImageModal","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAccept","onDeny","image","src","alt","style","cursor","maxWidth","maxHeight","onClick","objectFit","width","margin","lineHeight","fontSize","paragraph","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/components/TaskContent.js"],"sourcesContent":["import React from 'react';\nimport MultipleChoiceTask from './MultipleChoiceTask';\nimport InitialInstructions from './InitialInstructions';\n\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  setShowImageModal,\n  showImageModal,\n}) => {\n  if (task.id === 2) {\n    // If test is completed, show \"Test Complete\" message\n    if (testCompleted) {\n      return (\n        <div className=\"test-complete-message\">\n          <h2>{language === 'hindi' ? 'परीक्षण पूरा' : 'Test Complete'}</h2>\n          <p>{language === 'hindi' ? 'आपके समय के लिए धन्यवाद।' : 'Thank you for your time.'}</p>\n        </div>\n      );\n    }\n    // If initial instructions are to be shown\n    if (showInitialInstructions) {\n      return (\n        <InitialInstructions\n          language={language}\n          onAccept={() => setShowInitialInstructions(false)}\n          onDeny={() => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          }}\n        />\n      );\n    }\n\n    // Render the MultipleChoiceTask\n    return <MultipleChoiceTask task={task} language={language} setTestCompleted={setTestCompleted} />;\n  }\n\n  return (\n    <div className=\"task-content\">\n      {task.image ? (\n        <>\n          <img\n            src={task.image}\n            alt=\"Task\"\n            style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n            onClick={() => setShowImageModal(true)}\n          />\n          {showImageModal && (\n            <div className=\"image-modal\">\n              <img\n                src={task.image}\n                alt=\"Popup Task\"\n                style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                onClick={() => setShowImageModal(false)}\n              />\n            </div>\n          )}\n        </>\n      ) : (\n        <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n          {task.paragraph[language]}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default TaskContent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}