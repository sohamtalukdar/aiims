{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [showImageModal, setShowImageModal] = useState(false); // State for image modal\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const tasks = [{\n    id: 0,\n    title: {\n      hindi: 'पहला कार्य',\n      english: '1st Task'\n    },\n    paragraph: {\n      hindi: 'एक बार की बात है, एक छोटे से गाँव में...',\n      english: 'Once upon a time, in a small village...'\n    }\n  }, {\n    id: 1,\n    title: {\n      hindi: 'दूसरा कार्य',\n      english: '2nd Task'\n    },\n    image: '/image.png'\n  }];\n  const handleTabClick = id => {\n    setSelectedTab(id);\n    setShowModal(true);\n  };\n  const toggleLanguage = e => {\n    e.preventDefault();\n    setLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');\n  };\n  const handleImageClick = () => {\n    setShowImageModal(true); // Show enlarged image modal\n  };\n  const closeImageModal = () => {\n    setShowImageModal(false); // Close enlarged image modal\n  };\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        mediaRecorder.addEventListener('dataavailable', event => {\n          mediaChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name);\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n    setShowTick(true);\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n  const InstructionModal = ({\n    onClose\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions / \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Instructions go here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-ok-button\",\n        onClick: onClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n  const TaskContent = ({\n    task\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-content\",\n    children: task.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: task.image,\n      alt: \"Task\",\n      style: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n        cursor: 'pointer'\n      },\n      onClick: handleImageClick // Open modal on click\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.paragraph[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-modal-overlay\",\n      onClick: closeImageModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: tasks[selectedTab].image,\n          alt: \"Enlarged Task\",\n          style: {\n            maxWidth: '90%',\n            maxHeight: '90%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gradient-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n          onClick: () => handleTabClick(task.id),\n          children: task.title[language]\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLanguage,\n          className: \"toggle-button\",\n          children: language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"task-title\",\n          children: tasks[selectedTab].title[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n          task: tasks[selectedTab]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"form-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-controls\",\n            children: mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 76\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleReRecord,\n                className: \"custom-button\",\n                children: \"Re-record\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleMediaRecord,\n              className: \"custom-button\",\n              children: isRecording ? 'Stop Recording' : 'Start Recording'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !mediaURL,\n            className: \"submit-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tick\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadForm, \"H05DTnSqOXSmv/v1APljOH6b5w4=\", false, function () {\n  return [useLocation];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s","state","showModal","setShowModal","showImageModal","setShowImageModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","tasks","id","title","hindi","english","paragraph","image","handleTabClick","toggleLanguage","e","preventDefault","prev","handleImageClick","closeImageModal","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","stream","mediaRecorder","MediaRecorder","current","start","addEventListener","event","push","data","mediaBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","stop","getTracks","forEach","track","handleReRecord","handleSubmit","response","fetch","blob","formData","FormData","append","name","age","uploadResponse","method","body","result","json","log","media_url","setTimeout","InstructionModal","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","TaskContent","task","src","alt","style","maxWidth","maxHeight","cursor","map","onSubmit","controls","disabled","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [showImageModal, setShowImageModal] = useState(false); // State for image modal\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  const tasks = [\n    {\n      id: 0,\n      title: { hindi: 'पहला कार्य', english: '1st Task' },\n      paragraph: {\n        hindi: 'एक बार की बात है, एक छोटे से गाँव में...',\n        english: 'Once upon a time, in a small village...'\n      }\n    },\n    {\n      id: 1,\n      title: { hindi: 'दूसरा कार्य', english: '2nd Task' },\n      image: '/image.png',\n    },\n  ];\n\n  const handleTabClick = (id) => {\n    setSelectedTab(id);\n    setShowModal(true);\n  };\n\n  const toggleLanguage = (e) => {\n    e.preventDefault();\n    setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  };\n\n  const handleImageClick = () => {\n    setShowImageModal(true); // Show enlarged image modal\n  };\n\n  const closeImageModal = () => {\n    setShowImageModal(false); // Close enlarged image modal\n  };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? { video: true } : { audio: true };\n\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          mediaChunksRef.current.push(event.data);\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, { type: selectedTab === 1 ? 'video/webm' : 'audio/webm' });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch((err) => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state?.name);\n    formData.append('age', state?.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n\n    setShowTick(true);\n\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n\n  const InstructionModal = ({ onClose }) => (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <h2>Instructions / निर्देश</h2>\n        <p>Instructions go here...</p>\n        <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n      </div>\n    </div>\n  );\n\n  const TaskContent = ({ task }) => (\n    <div className=\"task-content\">\n      {task.image ? (\n        <img\n          src={task.image}\n          alt=\"Task\"\n          style={{ maxWidth: '100%', maxHeight: '100%', cursor: 'pointer' }}\n          onClick={handleImageClick} // Open modal on click\n        />\n      ) : (\n        <p>{task.paragraph[language]}</p>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      {showModal && <InstructionModal onClose={() => setShowModal(false)} />}\n\n      {showImageModal && (\n        <div className=\"image-modal-overlay\" onClick={closeImageModal}>\n          <div className=\"image-modal-content\">\n            <img src={tasks[selectedTab].image} alt=\"Enlarged Task\" style={{ maxWidth: '90%', maxHeight: '90%' }} />\n          </div>\n        </div>\n      )}\n\n      <div className=\"gradient-bg\"></div>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n              onClick={() => handleTabClick(task.id)}\n            >\n              {task.title[language]}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"content\">\n          <button onClick={toggleLanguage} className=\"toggle-button\">\n            {language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'}\n          </button>\n\n          <h1 className=\"task-title\">{tasks[selectedTab].title[language]}</h1>\n          <TaskContent task={tasks[selectedTab]} />\n\n          <form onSubmit={handleSubmit} className=\"form-controls\">\n            <div className=\"media-controls\">\n              {mediaURL ? (\n                <>\n                  {selectedTab === 1 ? <video src={mediaURL} controls /> : <audio src={mediaURL} controls />}\n                  <button type=\"button\" onClick={handleReRecord} className=\"custom-button\">Re-record</button>\n                </>\n              ) : (\n                <button type=\"button\" onClick={handleMediaRecord} className=\"custom-button\">\n                  {isRecording ? 'Stop Recording' : 'Start Recording'}\n                </button>\n              )}\n            </div>\n\n            <button type=\"submit\" disabled={!mediaURL} className=\"submit-button\">Submit</button>\n            {showTick && <span className=\"tick\">✔</span>}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGP,WAAW,CAAC,CAAC;EAC/B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMwB,gBAAgB,GAAGvB,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMwB,cAAc,GAAGxB,MAAM,CAAC,EAAE,CAAC;EAEjC,MAAMyB,KAAK,GAAG,CACZ;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE;MAAEC,KAAK,EAAE,YAAY;MAAEC,OAAO,EAAE;IAAW,CAAC;IACnDC,SAAS,EAAE;MACTF,KAAK,EAAE,0CAA0C;MACjDC,OAAO,EAAE;IACX;EACF,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE;MAAEC,KAAK,EAAE,aAAa;MAAEC,OAAO,EAAE;IAAW,CAAC;IACpDE,KAAK,EAAE;EACT,CAAC,CACF;EAED,MAAMC,cAAc,GAAIN,EAAE,IAAK;IAC7BZ,cAAc,CAACY,EAAE,CAAC;IAClBhB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMuB,cAAc,GAAIC,CAAC,IAAK;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBnB,WAAW,CAAEoB,IAAI,IAAMA,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,OAAQ,CAAC;EACjE,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BzB,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAM0B,eAAe,GAAGA,CAAA,KAAM;IAC5B1B,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAM2B,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,SAAS,GAAG3B,WAAW,KAAK,CAAC,GAAG;MAAE4B,KAAK,EAAE;IAAK,CAAC,GAAG;MAAEC,KAAK,EAAE;IAAK,CAAC;IAEvE,IAAI,CAACzB,WAAW,EAAE;MAChB0B,SAAS,CAACC,YAAY,CAACC,YAAY,CAACL,SAAS,CAAC,CAACM,IAAI,CAAEC,MAAM,IAAK;QAC9D,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACF,MAAM,CAAC;QAC/CxB,gBAAgB,CAAC2B,OAAO,GAAGF,aAAa;QACxCxB,cAAc,CAAC0B,OAAO,GAAG,EAAE;QAC3BF,aAAa,CAACG,KAAK,CAAC,CAAC;QACrBjC,cAAc,CAAC,IAAI,CAAC;QAEpB8B,aAAa,CAACI,gBAAgB,CAAC,eAAe,EAAGC,KAAK,IAAK;UACzD7B,cAAc,CAAC0B,OAAO,CAACI,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;QACzC,CAAC,CAAC;QAEFP,aAAa,CAACI,gBAAgB,CAAC,MAAM,EAAE,MAAM;UAC3C,MAAMI,SAAS,GAAG,IAAIC,IAAI,CAACjC,cAAc,CAAC0B,OAAO,EAAE;YAAEQ,IAAI,EAAE7C,WAAW,KAAK,CAAC,GAAG,YAAY,GAAG;UAAa,CAAC,CAAC;UAC7GO,WAAW,CAACuC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC,CAAC;UAC3CtC,cAAc,CAAC,KAAK,CAAC;QACvB,CAAC,CAAC;MACJ,CAAC,CAAC,CAAC2C,KAAK,CAAEC,GAAG,IAAK;QAChBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;QAC5CG,KAAK,CAAC,yBAAyBpD,WAAW,KAAK,CAAC,GAAG,QAAQ,GAAG,YAAY,uCAAuC,CAAC;MACpH,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAIU,gBAAgB,CAAC2B,OAAO,EAAE;QAC5B3B,gBAAgB,CAAC2B,OAAO,CAACgB,IAAI,CAAC,CAAC;QAC/B3C,gBAAgB,CAAC2B,OAAO,CAACH,MAAM,CAACoB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;MAC5E;IACF;EACF,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BlD,WAAW,CAAC,EAAE,CAAC;IACfmB,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,MAAMgC,YAAY,GAAG,MAAOrC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAChB,QAAQ,EAAE;MACb8C,KAAK,CAAC,iBAAiBpD,WAAW,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO,qBAAqB,CAAC;MAClF;IACF;IAEA,MAAM2D,QAAQ,GAAG,MAAMC,KAAK,CAACtD,QAAQ,CAAC;IACtC,MAAMuD,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAErE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEsE,IAAI,CAAC;IACpCH,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAErE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEuE,GAAG,CAAC;IAClCJ,QAAQ,CAACE,MAAM,CAAChE,WAAW,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO,EAAE6D,IAAI,EAAE7D,WAAW,KAAK,CAAC,GAAG,gBAAgB,GAAG,YAAY,CAAC;IAEjH,MAAMmE,cAAc,GAAG,MAAMP,KAAK,CAAC,+BAA+B,EAAE;MAClEQ,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACR,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG,MAAMH,cAAc,CAACI,IAAI,CAAC,CAAC;IAC1CrB,OAAO,CAACsB,GAAG,CAACF,MAAM,CAAC;IACnBlB,KAAK,CAAC,0BAA0BpD,WAAW,KAAK,CAAC,GAAG,OAAO,GAAG,OAAO,SAASsE,MAAM,CAACG,SAAS,EAAE,CAAC;IAEjGhE,WAAW,CAAC,IAAI,CAAC;IAEjBiE,UAAU,CAAC,MAAM;MACfjE,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMkE,gBAAgB,GAAGA,CAAC;IAAEC;EAAQ,CAAC,kBACnCtF,OAAA;IAAKuF,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCxF,OAAA;MAAKuF,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCxF,OAAA;QAAAwF,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/B5F,OAAA;QAAAwF,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B5F,OAAA;QAAQuF,SAAS,EAAC,kBAAkB;QAACM,OAAO,EAAEP,OAAQ;QAAAE,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,MAAME,WAAW,GAAGA,CAAC;IAAEC;EAAK,CAAC,kBAC3B/F,OAAA;IAAKuF,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BO,IAAI,CAACnE,KAAK,gBACT5B,OAAA;MACEgG,GAAG,EAAED,IAAI,CAACnE,KAAM;MAChBqE,GAAG,EAAC,MAAM;MACVC,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,SAAS,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAU,CAAE;MAClER,OAAO,EAAE3D,gBAAiB,CAAC;IAAA;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,gBAEF5F,OAAA;MAAAwF,QAAA,EAAIO,IAAI,CAACpE,SAAS,CAACf,QAAQ;IAAC;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CACN;EAED,oBACE5F,OAAA;IAAKuF,SAAS,EAAC,KAAK;IAAAC,QAAA,GACjBlF,SAAS,iBAAIN,OAAA,CAACqF,gBAAgB;MAACC,OAAO,EAAEA,CAAA,KAAM/E,YAAY,CAAC,KAAK;IAAE;MAAAkF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAErEpF,cAAc,iBACbR,OAAA;MAAKuF,SAAS,EAAC,qBAAqB;MAACM,OAAO,EAAE1D,eAAgB;MAAAqD,QAAA,eAC5DxF,OAAA;QAAKuF,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCxF,OAAA;UAAKgG,GAAG,EAAE1E,KAAK,CAACZ,WAAW,CAAC,CAACkB,KAAM;UAACqE,GAAG,EAAC,eAAe;UAACC,KAAK,EAAE;YAAEC,QAAQ,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAM;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAED5F,OAAA;MAAKuF,SAAS,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnC5F,OAAA;MAAKuF,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBxF,OAAA;QAAKuF,SAAS,EAAC,MAAM;QAAAC,QAAA,EAClBlE,KAAK,CAACgF,GAAG,CAAEP,IAAI,iBACd/F,OAAA;UAEEuF,SAAS,EAAE,OAAO7E,WAAW,KAAKqF,IAAI,CAACxE,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC5DsE,OAAO,EAAEA,CAAA,KAAMhE,cAAc,CAACkE,IAAI,CAACxE,EAAE,CAAE;UAAAiE,QAAA,EAEtCO,IAAI,CAACvE,KAAK,CAACZ,QAAQ;QAAC,GAJhBmF,IAAI,CAACxE,EAAE;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKT,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN5F,OAAA;QAAKuF,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBxF,OAAA;UAAQ6F,OAAO,EAAE/D,cAAe;UAACyD,SAAS,EAAC,eAAe;UAAAC,QAAA,EACvD5E,QAAQ,KAAK,OAAO,GAAG,mBAAmB,GAAG;QAAqB;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC,eAET5F,OAAA;UAAIuF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAElE,KAAK,CAACZ,WAAW,CAAC,CAACc,KAAK,CAACZ,QAAQ;QAAC;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpE5F,OAAA,CAAC8F,WAAW;UAACC,IAAI,EAAEzE,KAAK,CAACZ,WAAW;QAAE;UAAA+E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEzC5F,OAAA;UAAMuG,QAAQ,EAAEnC,YAAa;UAACmB,SAAS,EAAC,eAAe;UAAAC,QAAA,gBACrDxF,OAAA;YAAKuF,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAC5BxE,QAAQ,gBACPhB,OAAA,CAAAE,SAAA;cAAAsF,QAAA,GACG9E,WAAW,KAAK,CAAC,gBAAGV,OAAA;gBAAOgG,GAAG,EAAEhF,QAAS;gBAACwF,QAAQ;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAG5F,OAAA;gBAAOgG,GAAG,EAAEhF,QAAS;gBAACwF,QAAQ;cAAA;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1F5F,OAAA;gBAAQuD,IAAI,EAAC,QAAQ;gBAACsC,OAAO,EAAE1B,cAAe;gBAACoB,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA,eAC3F,CAAC,gBAEH5F,OAAA;cAAQuD,IAAI,EAAC,QAAQ;cAACsC,OAAO,EAAEzD,iBAAkB;cAACmD,SAAS,EAAC,eAAe;cAAAC,QAAA,EACxE1E,WAAW,GAAG,gBAAgB,GAAG;YAAiB;cAAA2E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEN5F,OAAA;YAAQuD,IAAI,EAAC,QAAQ;YAACkD,QAAQ,EAAE,CAACzF,QAAS;YAACuE,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACnF1E,QAAQ,iBAAIlB,OAAA;YAAMuF,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxF,EAAA,CAlMQD,cAAc;EAAA,QACHL,WAAW;AAAA;AAAA4G,EAAA,GADtBvG,cAAc;AAoMvB,eAAeA,cAAc;AAAC,IAAAuG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}