{"ast":null,"code":"import React from'react';import{useLocation}from'react-router-dom';import config from'./config.json';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MultipleChoiceTask=_ref=>{let{task,language,setTestCompleted,currentQuestionIndex,setCurrentQuestionIndex,allSelectedAnswers,setAllSelectedAnswers}=_ref;const{state}=useLocation();const handleNext=()=>{if(currentQuestionIndex<task.questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}};const handlePrevious=()=>{if(currentQuestionIndex>0){setCurrentQuestionIndex(currentQuestionIndex-1);}};const handleAnswerSelect=choiceIndex=>{setAllSelectedAnswers(prevSelected=>{const updatedAnswers={...prevSelected};// Initialize array for current question if it doesn't exist\nif(!updatedAnswers[currentQuestionIndex]){updatedAnswers[currentQuestionIndex]=[];}const currentAnswers=updatedAnswers[currentQuestionIndex];// Toggle selection\nconst index=currentAnswers.indexOf(choiceIndex);if(index===-1){// Add the choice if not already selected\nupdatedAnswers[currentQuestionIndex]=[...currentAnswers,choiceIndex];}else{// Remove the choice if already selected\nupdatedAnswers[currentQuestionIndex]=currentAnswers.filter(idx=>idx!==choiceIndex);}return updatedAnswers;});};const totalSelectedCount=Object.values(allSelectedAnswers).reduce((total,selections)=>total+selections.length,0);const currentSelections=allSelectedAnswers[currentQuestionIndex]||[];return/*#__PURE__*/_jsxs(\"div\",{className:\"multiple-choice-task\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{textAlign:'center',marginBottom:'5px'},children:task.questions[currentQuestionIndex].question[language]}),currentQuestionIndex===10?/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'center',marginTop:'10px'},children:[/*#__PURE__*/_jsx(\"img\",{src:process.env.PUBLIC_URL+'/pentagon.png',alt:\"Shape for copying\",style:{maxWidth:'45%',height:'auto'},onError:e=>{console.error(\"Image failed to load\");console.log(\"Attempted path:\",e.target.src);}}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',marginTop:'10px'},children:task.questions[currentQuestionIndex].choices.map((choice,index)=>/*#__PURE__*/_jsxs(\"label\",{style:{display:'flex',alignItems:'center',textAlign:'center',margin:'5px 0',width:'200px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:currentSelections.includes(index),onChange:()=>handleAnswerSelect(index),style:{marginRight:'10px'}}),choice[language]]},index))})]}):/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',minHeight:'30vh',marginTop:'10px'},children:task.questions[currentQuestionIndex].choices.map((choice,index)=>/*#__PURE__*/_jsxs(\"label\",{style:{display:'flex',alignItems:'center',textAlign:'center',margin:'5px 0',width:'200px'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:currentSelections.includes(index),onChange:()=>handleAnswerSelect(index),style:{marginRight:'10px'}}),choice[language]]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-container\",style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginTop:'10px'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handlePrevious,disabled:currentQuestionIndex===0,style:{marginRight:'10px'},children:language==='hindi'?'पिछला':'Previous'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleNext,disabled:currentQuestionIndex===task.questions.length-1,children:language==='hindi'?'अगला':'Next'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"selected-counter\",style:{marginRight:'20px'},children:language==='hindi'?`चयनित: ${totalSelectedCount}`:`Score: ${totalSelectedCount}`})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-number-navigation\",style:{marginTop:'10px',display:'flex',justifyContent:'center',flexWrap:'wrap'},children:task.questions.map((q,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setCurrentQuestionIndex(index);},style:{margin:'5px',padding:'10px',backgroundColor:index===currentQuestionIndex?'#007bff':'#f0f0f0',color:index===currentQuestionIndex?'#fff':'#000',border:'1px solid #ccc',borderRadius:'4px',cursor:'pointer'},children:index+1},index))}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'20px',textAlign:'center'},children:/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{const finalScore=Object.values(allSelectedAnswers).reduce((total,selections)=>total+(selections?selections.length:0),0);console.log('Final MMSE score:',finalScore);const formData=new FormData();formData.append('name',state.name);formData.append('age',state.age);formData.append('patientId',state.patientId);formData.append('score',finalScore.toString());try{console.log('Sending MMSE score to server:',finalScore);const response=await fetch(`${config.base_url}/save`,{method:'POST',body:formData});if(!response.ok){throw new Error('Failed to save MMSE score');}console.log('MMSE score saved successfully');setTestCompleted(true);}catch(error){console.error('Error saving MMSE score:',error);alert('Failed to save test score. Please try again.');}},style:{padding:'10px 20px',backgroundColor:'#28a745',color:'#fff',border:'none',borderRadius:'4px',cursor:'pointer'},children:language==='hindi'?'जमा करें':'Submit'})})]});};export default MultipleChoiceTask;","map":{"version":3,"names":["React","useLocation","config","jsx","_jsx","jsxs","_jsxs","MultipleChoiceTask","_ref","task","language","setTestCompleted","currentQuestionIndex","setCurrentQuestionIndex","allSelectedAnswers","setAllSelectedAnswers","state","handleNext","questions","length","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","totalSelectedCount","Object","values","reduce","total","selections","currentSelections","className","children","style","textAlign","marginBottom","question","marginTop","src","process","env","PUBLIC_URL","alt","maxWidth","height","onError","e","console","error","log","target","display","flexDirection","alignItems","choices","map","choice","margin","width","type","checked","includes","onChange","marginRight","justifyContent","minHeight","onClick","disabled","flexWrap","q","padding","backgroundColor","color","border","borderRadius","cursor","finalScore","formData","FormData","append","name","age","patientId","toString","response","fetch","base_url","method","body","ok","Error","alert"],"sources":["/home/soham/aiims/my-app/src/MultipleChoiceTask.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport config from './config.json';\n\n\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n}) => {\n  const { state } = useLocation();\n  \n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleAnswerSelect = (choiceIndex) => {\n    setAllSelectedAnswers((prevSelected) => {\n      const updatedAnswers = { ...prevSelected };\n      \n      // Initialize array for current question if it doesn't exist\n      if (!updatedAnswers[currentQuestionIndex]) {\n        updatedAnswers[currentQuestionIndex] = [];\n      }\n      \n      const currentAnswers = updatedAnswers[currentQuestionIndex];\n      \n      // Toggle selection\n      const index = currentAnswers.indexOf(choiceIndex);\n      if (index === -1) {\n        // Add the choice if not already selected\n        updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n      } else {\n        // Remove the choice if already selected\n        updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n          (idx) => idx !== choiceIndex\n        );\n      }\n      \n      return updatedAnswers;\n    });\n  };\n\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n    (total, selections) => total + selections.length,\n    0\n  );\n\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  \n  return (\n    <div className=\"multiple-choice-task\">\n      <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n        {task.questions[currentQuestionIndex].question[language]}\n      </h3>\n\n      {currentQuestionIndex === 10 ? (\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          <img \n            src={process.env.PUBLIC_URL + '/pentagon.png'} \n            alt=\"Shape for copying\" \n            style={{ maxWidth: '45%', height: 'auto' }}\n            onError={(e) => {\n              console.error(\"Image failed to load\");\n              console.log(\"Attempted path:\", e.target.src);\n            }}\n          />\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n              <label\n                key={index}\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  textAlign: 'center',\n                  margin: '5px 0',\n                  width: '200px',\n                }}\n              >\n                <input\n                  type=\"checkbox\"\n                  checked={currentSelections.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                  style={{ marginRight: '10px' }}\n                />\n                {choice[language]}\n              </label>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '30vh',\n          marginTop: '10px'\n        }}>\n          {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n            <label\n              key={index}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                textAlign: 'center',\n                margin: '5px 0',\n                width: '200px',\n              }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={currentSelections.includes(index)}\n                onChange={() => handleAnswerSelect(index)}\n                style={{ marginRight: '10px' }}\n              />\n              {choice[language]}\n            </label>\n          ))}\n        </div>\n      )}\n\n      {/* Navigation Buttons and Counter */}\n      <div className=\"navigation-container\" style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px'\n      }}>\n        <div className=\"navigation-buttons\">\n          <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n            {language === 'hindi' ? 'पिछला' : 'Previous'}\n          </button>\n          <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n            {language === 'hindi' ? 'अगला' : 'Next'}\n          </button>\n        </div>\n        <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n          {language === 'hindi'\n            ? `चयनित: ${totalSelectedCount}`\n            : `Score: ${totalSelectedCount}`}\n        </div>\n      </div>\n\n      {/* Question Number Navigation */}\n      <div\n        className=\"question-number-navigation\"\n        style={{\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n        }}\n      >\n        {task.questions.map((q, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              setCurrentQuestionIndex(index);\n            }}\n            style={{\n              margin: '5px',\n              padding: '10px',\n              backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n              color: index === currentQuestionIndex ? '#fff' : '#000',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n\n      {/* Submit Button */}\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <button\n          onClick={async () => {\n            const finalScore = Object.values(allSelectedAnswers).reduce(\n              (total, selections) => total + (selections ? selections.length : 0),\n              0\n            );\n            \n            console.log('Final MMSE score:', finalScore);\n            const formData = new FormData();\n            formData.append('name', state.name);\n            formData.append('age', state.age);\n            formData.append('patientId', state.patientId);\n            formData.append('score', finalScore.toString());\n\n            try {\n              console.log('Sending MMSE score to server:', finalScore);\n              const response = await fetch(`${config.base_url}/save`, {\n                method: 'POST',\n                body: formData,\n              });\n\n              if (!response.ok) {\n                throw new Error('Failed to save MMSE score');\n              }\n\n              console.log('MMSE score saved successfully');\n              setTestCompleted(true);\n            } catch (error) {\n              console.error('Error saving MMSE score:', error);\n              alert('Failed to save test score. Please try again.');\n            }\n          }}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n          }}\n        >\n          {language === 'hindi' ? 'जमा करें' : 'Submit'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MultipleChoiceTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}