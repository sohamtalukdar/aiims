{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$();\n// File: src/FileUploadForm.js\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\n// Import components\nimport InstructionModal from './components/InstructionModal';\nimport InitialPopup from './components/InitialPopup';\nimport TaskContent from './components/TaskContent';\n\n// Import custom hook\nimport useMediaRecorder from './hooks/useMediaRecorder';\n\n// Import tasks data\nimport tasks from './data/tasks';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s();\n  const {\n    state\n  } = useLocation();\n\n  // State variables\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [showTick, setShowTick] = useState(false);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n\n  // Custom hook for media recording\n  const {\n    isRecording,\n    mediaURL,\n    audioBlob,\n    videoBlob,\n    handleMediaRecord,\n    handleReRecord\n  } = useMediaRecorder(selectedTab);\n\n  // Function to handle tab clicks\n  const handleTabClick = id => {\n    // If test is completed and the user is trying to click on task id 2, return early\n    if (id === 2 && testCompleted) {\n      return;\n    }\n    setSelectedTab(id);\n\n    // Show modal only for tasks other than the third one\n    setShowModal(id !== 2);\n\n    // Show initial instructions only for the third task\n    if (id === 2) {\n      setShowInitialInstructions(true);\n    } else {\n      setShowInitialInstructions(false);\n      // Do not reset testCompleted when switching tasks\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (selectedTab === 1 && !videoBlob) {\n      alert('Please record video before submitting.');\n      return;\n    }\n    if (selectedTab === 0 && !audioBlob) {\n      alert('Please record audio before submitting.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name);\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    if (audioBlob) {\n      formData.append('audio', audioBlob, 'audio.webm');\n    }\n    if (videoBlob) {\n      formData.append('video', videoBlob, 'video.webm');\n    }\n\n    // Log FormData contents\n    console.log('FormData contents:');\n    for (let [key, value] of formData.entries()) {\n      if (value instanceof Blob) {\n        console.log(`${key}: [Blob object]`);\n      } else {\n        console.log(`${key}: ${value}`);\n      }\n    }\n    try {\n      const uploadResponse = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!uploadResponse.ok) {\n        throw new Error(`Server error: ${uploadResponse.status}`);\n      }\n      const result = await uploadResponse.json();\n      console.log(result);\n      alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'}`);\n    } catch (error) {\n      console.error('Failed to upload:', error);\n      alert('Upload failed. Please try again.');\n    }\n\n    // Show the tick animation\n    setShowTick(true);\n\n    // Hide the tick after 2 seconds\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: language,\n      setLanguage: setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        selectedTab: selectedTab,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            children: task.title[language]\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"task-title\",\n            children: tasks[selectedTab].title[language]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n            task: tasks[selectedTab],\n            language: language,\n            testCompleted: testCompleted,\n            showInitialInstructions: showInitialInstructions,\n            setShowInitialInstructions: setShowInitialInstructions,\n            setTestCompleted: setTestCompleted,\n            setShowImageModal: setShowImageModal,\n            showImageModal: showImageModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: '15px',\n              marginTop: '20px',\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-controls\",\n              children: mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: mediaURL,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                  src: mediaURL,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleReRecord,\n                  className: \"custom-button\",\n                  children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleMediaRecord,\n                style: {\n                  marginBottom: '10px',\n                  padding: '8px 12px',\n                  cursor: 'pointer',\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px'\n                },\n                children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !mediaURL,\n              className: \"custom-button\",\n              children: language === 'hindi' ? 'जमा करें' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tick\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadForm, \"riK/xAsrSeR9Bj/59D1bBar0+DE=\", false, function () {\n  return [useLocation, useMediaRecorder];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useLocation","InstructionModal","InitialPopup","TaskContent","useMediaRecorder","tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s","state","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","showTick","setShowTick","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","isRecording","mediaURL","audioBlob","videoBlob","handleMediaRecord","handleReRecord","handleTabClick","id","handleSubmit","e","preventDefault","alert","formData","FormData","append","name","age","console","log","key","value","entries","Blob","uploadResponse","fetch","method","body","ok","Error","status","result","json","error","setTimeout","className","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","filter","task","map","onClick","title","onSubmit","style","display","flexDirection","alignItems","gap","marginTop","position","src","controls","type","marginBottom","padding","cursor","backgroundColor","color","border","borderRadius","disabled","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["// File: src/FileUploadForm.js\n\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\n// Import components\nimport InstructionModal from './components/InstructionModal';\nimport InitialPopup from './components/InitialPopup';\nimport TaskContent from './components/TaskContent';\n\n// Import custom hook\nimport useMediaRecorder from './hooks/useMediaRecorder';\n\n// Import tasks data\nimport tasks from './data/tasks';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n\n  // State variables\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [showTick, setShowTick] = useState(false);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n\n  // Custom hook for media recording\n  const {\n    isRecording,\n    mediaURL,\n    audioBlob,\n    videoBlob,\n    handleMediaRecord,\n    handleReRecord,\n  } = useMediaRecorder(selectedTab);\n\n  // Function to handle tab clicks\n  const handleTabClick = (id) => {\n    // If test is completed and the user is trying to click on task id 2, return early\n    if (id === 2 && testCompleted) {\n      return;\n    }\n\n    setSelectedTab(id);\n\n    // Show modal only for tasks other than the third one\n    setShowModal(id !== 2);\n\n    // Show initial instructions only for the third task\n    if (id === 2) {\n      setShowInitialInstructions(true);\n    } else {\n      setShowInitialInstructions(false);\n      // Do not reset testCompleted when switching tasks\n    }\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (selectedTab === 1 && !videoBlob) {\n      alert('Please record video before submitting.');\n      return;\n    }\n\n    if (selectedTab === 0 && !audioBlob) {\n      alert('Please record audio before submitting.');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('name', state?.name);\n    formData.append('age', state?.age);\n\n    if (audioBlob) {\n      formData.append('audio', audioBlob, 'audio.webm');\n    }\n\n    if (videoBlob) {\n      formData.append('video', videoBlob, 'video.webm');\n    }\n\n    // Log FormData contents\n    console.log('FormData contents:');\n    for (let [key, value] of formData.entries()) {\n      if (value instanceof Blob) {\n        console.log(`${key}: [Blob object]`);\n      } else {\n        console.log(`${key}: ${value}`);\n      }\n    }\n\n    try {\n      const uploadResponse = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData,\n      });\n      if (!uploadResponse.ok) {\n        throw new Error(`Server error: ${uploadResponse.status}`);\n      }\n      const result = await uploadResponse.json();\n      console.log(result);\n      alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'}`);\n    } catch (error) {\n      console.error('Failed to upload:', error);\n      alert('Upload failed. Please try again.');\n    }\n\n    // Show the tick animation\n    setShowTick(true);\n\n    // Hide the tick after 2 seconds\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n\n  return (\n    <div className=\"app\">\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {showModal && (\n            <InstructionModal\n              onClose={() => setShowModal(false)}\n              selectedTab={selectedTab}\n              language={language}\n            />\n          )}\n\n          <div className=\"gradient-bg\"></div>\n          <div className=\"container\">\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                  >\n                    {task.title[language]}\n                  </div>\n                ))}\n            </div>\n            <div className=\"content\">\n              <h1 className=\"task-title\">{tasks[selectedTab].title[language]}</h1>\n              <TaskContent\n                task={tasks[selectedTab]}\n                language={language}\n                testCompleted={testCompleted}\n                showInitialInstructions={showInitialInstructions}\n                setShowInitialInstructions={setShowInitialInstructions}\n                setTestCompleted={setTestCompleted}\n                setShowImageModal={setShowImageModal}\n                showImageModal={showImageModal}\n              />\n\n              {/* Only show the form for tasks other than the third one */}\n              {selectedTab !== 2 && (\n                <form\n                  onSubmit={handleSubmit}\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px',\n                    marginTop: '20px',\n                    position: 'relative',\n                  }}\n                >\n                  <div className=\"media-controls\">\n                    {mediaURL ? (\n                      <>\n                        {selectedTab === 1 ? (\n                          <video src={mediaURL} controls />\n                        ) : (\n                          <audio src={mediaURL} controls />\n                        )}\n                        <button\n                          type=\"button\"\n                          onClick={handleReRecord}\n                          className=\"custom-button\"\n                        >\n                          {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        onClick={handleMediaRecord}\n                        style={{\n                          marginBottom: '10px',\n                          padding: '8px 12px',\n                          cursor: 'pointer',\n                          backgroundColor: '#007bff',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                        }}\n                      >\n                        {isRecording\n                          ? language === 'hindi'\n                            ? 'रिकॉर्डिंग रोकें'\n                            : 'Stop Recording'\n                          : language === 'hindi'\n                          ? selectedTab === 1\n                            ? 'वीडियो रिकॉर्ड करें'\n                            : 'आवाज़ रिकॉर्ड करें'\n                          : selectedTab === 1\n                          ? 'Record Video'\n                          : 'Record Voice'}\n                      </button>\n                    )}\n                  </div>\n\n                  <button\n                    type=\"submit\"\n                    disabled={!mediaURL}\n                    className=\"custom-button\"\n                  >\n                    {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {showTick && <span className=\"tick\">✔</span>}\n                </form>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}