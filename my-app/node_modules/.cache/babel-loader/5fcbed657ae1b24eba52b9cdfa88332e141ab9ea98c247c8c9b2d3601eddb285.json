{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './tasks';\nimport './App.css';\nimport TaskCompletion from './TaskCompletion';\nimport InstructionModal from './InstructionModal';\nimport handleMediaRecord, { handleReRecord } from './handleMediaRecord';\nimport useRefreshHandler from './useRefreshHandler';\nimport InitialInstructions from './InitialInstructions';\nimport InitialPopup from './InitialPopup';\nimport handleSubmit from './handleSubmit';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isSubmitting] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [completedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n  const {\n    handleRefreshConfirm,\n    handleRefreshCancel\n  } = useRefreshHandler({\n    showInitialPopup,\n    setShowRefreshWarning\n  });\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n  const handleTabClick = id => {\n    // Prevent navigation to completed tasks\n    if (completedTasks.has(id)) {\n      return;\n    }\n\n    // Prevent going back to previous tasks\n    const currentTaskIndex = selectedTab;\n    if (id < currentTaskIndex) {\n      return;\n    }\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    if (id === 2) {\n      setShowInitialInstructions(true);\n    } else {\n      setShowInitialInstructions(false);\n    }\n  };\n  const MultipleChoiceTask = ({\n    task,\n    language,\n    setTestCompleted,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    allSelectedAnswers,\n    setAllSelectedAnswers\n  }) => {\n    _s();\n    const {\n      state\n    } = useLocation();\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    };\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n      }\n    };\n    const handleAnswerSelect = choiceIndex => {\n      setAllSelectedAnswers(prevSelected => {\n        const updatedAnswers = {\n          ...prevSelected\n        };\n\n        // Initialize array for current question if it doesn't exist\n        if (!updatedAnswers[currentQuestionIndex]) {\n          updatedAnswers[currentQuestionIndex] = [];\n        }\n        const currentAnswers = updatedAnswers[currentQuestionIndex];\n\n        // Toggle selection\n        const index = currentAnswers.indexOf(choiceIndex);\n        if (index === -1) {\n          // Add the choice if not already selected\n          updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n        } else {\n          // Remove the choice if already selected\n          updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n        }\n        return updatedAnswers;\n      });\n    };\n    const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n    const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-choice-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '5px'\n        },\n        children: task.questions[currentQuestionIndex].question[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), currentQuestionIndex === 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/pentagon.png',\n          alt: \"Shape for copying\",\n          style: {\n            maxWidth: '45%',\n            height: 'auto'\n          },\n          onError: e => {\n            console.error(\"Image failed to load\");\n            console.log(\"Attempted path:\", e.target.src);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: '10px'\n          },\n          children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              textAlign: 'center',\n              margin: '5px 0',\n              width: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: currentSelections.includes(index),\n              onChange: () => handleAnswerSelect(index),\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), choice[language]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      // Default rendering for other questions\n      _jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '30vh',\n          marginTop: '10px'\n        },\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            margin: '5px 0',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: currentSelections.includes(index),\n            onChange: () => handleAnswerSelect(index),\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-container\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            style: {\n              marginRight: '10px'\n            },\n            children: language === 'hindi' ? 'पिछला' : 'Previous'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === task.questions.length - 1,\n            children: language === 'hindi' ? 'अगला' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-counter\",\n          style: {\n            marginRight: '20px'\n          },\n          children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-number-navigation\",\n        style: {\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap'\n        },\n        children: task.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCurrentQuestionIndex(index);\n          },\n          style: {\n            margin: '5px',\n            padding: '10px',\n            backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n            color: index === currentQuestionIndex ? '#fff' : '#000',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const finalScore = Object.values(allSelectedAnswers).reduce((total, selections) => total + (selections ? selections.length : 0), 0);\n            console.log('Final MMSE score:', finalScore);\n            const formData = new FormData();\n            formData.append('name', state.name);\n            formData.append('age', state.age);\n            formData.append('patientId', state.patientId);\n            formData.append('score', finalScore.toString());\n            try {\n              console.log('Sending MMSE score to server:', finalScore);\n              const response = await fetch('http://localhost:5001/save', {\n                method: 'POST',\n                body: formData\n              });\n              if (!response.ok) {\n                throw new Error('Failed to save MMSE score');\n              }\n              console.log('MMSE score saved successfully');\n              setTestCompleted(true);\n            } catch (error) {\n              console.error('Error saving MMSE score:', error);\n              alert('Failed to save test score. Please try again.');\n            }\n          },\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: language === 'hindi' ? 'जमा करें' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this);\n  };\n  _s(MultipleChoiceTask, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n    return [useLocation];\n  });\n  const TaskContent = ({\n    task,\n    language,\n    testCompleted,\n    showInitialInstructions,\n    setShowInitialInstructions,\n    setTestCompleted,\n    allSelectedAnswers,\n    setAllSelectedAnswers,\n    setIsPatient,\n    currentQuestionIndex,\n    setCurrentQuestionIndex\n  }) => {\n    if (task.id === 2) {\n      if (testCompleted) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center items-center\",\n          children: /*#__PURE__*/_jsxDEV(TaskCompletion, {\n            language: language,\n            allSelectedAnswers: allSelectedAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this);\n      }\n      // If initial instructions are to be shown\n      if (showInitialInstructions) {\n        return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n          onAccept: () => setShowInitialInstructions(false),\n          onDeny: () => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          },\n          setIsPatient: setIsPatient // Pass it here\n          ,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this);\n      }\n\n      // Render the MultipleChoiceTask\n      return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n        task: task,\n        language: language,\n        setTestCompleted: setTestCompleted,\n        allSelectedAnswers: allSelectedAnswers,\n        setAllSelectedAnswers: setAllSelectedAnswers,\n        currentQuestionIndex: currentQuestionIndex,\n        setCurrentQuestionIndex: setCurrentQuestionIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left',\n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          },\n          children: [language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Task\",\n          style: {\n            cursor: 'pointer',\n            maxWidth: '100%',\n            maxHeight: '100%'\n          },\n          onClick: () => setShowImageModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.image,\n            alt: \"Popup Task\",\n            style: {\n              maxWidth: '90%',\n              maxHeight: '90%',\n              objectFit: 'contain'\n            },\n            onClick: () => setShowImageModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: '60%',\n          margin: '0 auto',\n          lineHeight: '1.8',\n          fontSize: '1.1em'\n        },\n        children: task.paragraph[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        backgroundColor: 'white',\n        padding: '8px 12px',\n        borderRadius: '4px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        zIndex: 1000,\n        fontFamily: 'monospace',\n        fontSize: '14px',\n        border: '1px solid #ddd'\n      },\n      children: [\"Patient ID: \", state.patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }, this), showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: language,\n      setLanguage: setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        selectedTab: selectedTab,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            style: {\n              cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n              opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n              backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n            },\n            children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '5px',\n                color: 'green'\n              },\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 23\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(TaskContent, {\n            task: tasks[selectedTab],\n            language: language,\n            testCompleted: testCompleted,\n            showInitialInstructions: showInitialInstructions,\n            setShowInitialInstructions: setShowInitialInstructions,\n            setTestCompleted: setTestCompleted,\n            allSelectedAnswers: allSelectedAnswers,\n            setAllSelectedAnswers: setAllSelectedAnswers,\n            currentQuestionIndex: currentQuestionIndex,\n            setCurrentQuestionIndex: setCurrentQuestionIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"media-form\",\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: '15px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-controls\",\n              children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-playback\",\n                children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: mediaURL,\n                  controls: true,\n                  style: {\n                    maxWidth: '350px',\n                    // Set maximum width\n                    width: '100%',\n                    // Responsive width\n                    height: 'auto',\n                    // Maintain aspect ratio\n                    marginBottom: '10px' // Add some spacing\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                  src: mediaURL,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleReRecord({\n                    setMediaURL,\n                    setVideoBlob,\n                    setAudioBlob,\n                    mediaChunksRef,\n                    mediaRecorderRef,\n                    selectedTab,\n                    handleMediaRecord: () => handleMediaRecord({\n                      selectedTab,\n                      isRecording,\n                      setIsRecording,\n                      setMediaURL,\n                      setCountdown,\n                      setVideoBlob,\n                      setAudioBlob,\n                      mediaRecorderRef,\n                      mediaChunksRef\n                    })\n                  }),\n                  className: \"custom-button\",\n                  children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recording-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    marginTop: '10px'\n                  },\n                  children: isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Time remaining: \", countdown, \"s\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 552,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => handleMediaRecord({\n                    selectedTab,\n                    isRecording,\n                    setIsRecording,\n                    setMediaURL,\n                    setCountdown,\n                    setVideoBlob,\n                    setAudioBlob,\n                    mediaRecorderRef,\n                    mediaChunksRef\n                  }),\n                  className: \"custom-button\",\n                  style: {\n                    marginBottom: '10px',\n                    padding: '8px 12px',\n                    backgroundColor: '#007bff',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  },\n                  children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !mediaURL || isSubmitting,\n              className: \"custom-button\",\n              style: {\n                opacity: !mediaURL || isSubmitting ? 0.6 : 1\n              },\n              children: language === 'hindi' ? 'जमा करें' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 19\n            }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tick\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: language === 'hindi' ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?' : 'Refreshing the page will remove all current entries. Do you want to continue?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefreshCancel,\n              className: \"cancel-button\",\n              children: language === 'hindi' ? 'रद्द करें' : 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefreshConfirm,\n              className: \"confirm-button\",\n              children: language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadForm, \"I82TEqK/kws6jYLhdL+Cc36CGlI=\", false, function () {\n  return [useLocation, useNavigate, useRefreshHandler];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","TaskCompletion","InstructionModal","handleMediaRecord","handleReRecord","useRefreshHandler","InitialInstructions","InitialPopup","handleSubmit","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s2","_s","$RefreshSig$","isSubmitting","state","navigate","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","countdown","setCountdown","completedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","setAudioBlob","videoBlob","setVideoBlob","showRefreshWarning","setShowRefreshWarning","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","handleRefreshConfirm","handleRefreshCancel","patientId","name","age","setItem","stringify","handleTabClick","id","has","currentTaskIndex","current","stop","stream","getTracks","forEach","track","MultipleChoiceTask","task","handleNext","questions","length","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","totalSelectedCount","Object","values","reduce","total","selections","currentSelections","className","children","style","textAlign","marginBottom","question","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","src","process","env","PUBLIC_URL","alt","maxWidth","height","onError","e","console","error","log","target","display","flexDirection","alignItems","choices","map","choice","margin","width","type","checked","includes","onChange","marginRight","justifyContent","minHeight","onClick","disabled","flexWrap","q","padding","backgroundColor","color","border","borderRadius","cursor","finalScore","formData","FormData","append","toString","response","fetch","method","body","ok","Error","alert","TaskContent","setIsPatient","onAccept","onDeny","image","fontSize","maxHeight","objectFit","lineHeight","paragraph","position","top","right","boxShadow","zIndex","fontFamily","onClose","opacity","undefined","title","marginLeft","onSubmit","gap","controls","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["  import React, { useState, useRef, useEffect} from 'react';\n  import { useLocation, useNavigate } from 'react-router-dom'; \n  import tasks from './tasks';\n  import './App.css';\n  import TaskCompletion from './TaskCompletion';\n  import InstructionModal from './InstructionModal';\n  import handleMediaRecord, { handleReRecord } from './handleMediaRecord';\n  import useRefreshHandler from './useRefreshHandler';\n  import InitialInstructions from './InitialInstructions';\n  import InitialPopup from './InitialPopup';\n  import handleSubmit from './handleSubmit';\n\n\n  function FileUploadForm() {\n    const [isSubmitting] = useState(false);\n    const { state } = useLocation();\n    const navigate = useNavigate();\n    const [showModal, setShowModal] = useState(true);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [language, setLanguage] = useState('english');\n    const [isRecording, setIsRecording] = useState(false);\n    const [mediaURL, setMediaURL] = useState(\"\");\n    const [showTick] = useState(false);\n    const mediaRecorderRef = useRef(null);\n    const mediaChunksRef = useRef([]);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [showInitialPopup, setShowInitialPopup] = useState(true);\n    const [countdown, setCountdown] = useState(60);\n    const [completedTasks] = useState(new Set());\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n    const [testCompleted, setTestCompleted] = useState(false);\n    const [ setAudioBlob] = useState(null);\n    const [videoBlob, setVideoBlob] = useState(null);\n    const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n    const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n    });\n    const { handleRefreshConfirm, handleRefreshCancel } = useRefreshHandler({\n    showInitialPopup,\n    setShowRefreshWarning,\n    });\n\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  useEffect(() => {\n      sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n  \n    const handleTabClick = (id) => {\n      // Prevent navigation to completed tasks\n      if (completedTasks.has(id)) {\n        return;\n      }\n\n      // Prevent going back to previous tasks\n      const currentTaskIndex = selectedTab;\n      if (id < currentTaskIndex) {\n        return;\n      }\n\n      setCountdown(60);\n      setMediaURL(\"\");\n      mediaChunksRef.current = [];\n    \n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    \n      setSelectedTab(id);\n      setShowModal(id !== 2);\n    \n      if (id === 2) {\n        setShowInitialInstructions(true);\n      } else {\n        setShowInitialInstructions(false);\n      }\n    };   \n\n    const MultipleChoiceTask = ({\n      task,\n      language,\n      setTestCompleted,\n      currentQuestionIndex,\n      setCurrentQuestionIndex,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n    }) => {\n      const { state } = useLocation();\n      const handleNext = () => {\n        if (currentQuestionIndex < task.questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n        }\n      };\n    \n      const handlePrevious = () => {\n        if (currentQuestionIndex > 0) {\n          setCurrentQuestionIndex(currentQuestionIndex - 1);\n        }\n      };\n    \n      const handleAnswerSelect = (choiceIndex) => {\n        setAllSelectedAnswers((prevSelected) => {\n          const updatedAnswers = { ...prevSelected };\n          \n          // Initialize array for current question if it doesn't exist\n          if (!updatedAnswers[currentQuestionIndex]) {\n            updatedAnswers[currentQuestionIndex] = [];\n          }\n          \n          const currentAnswers = updatedAnswers[currentQuestionIndex];\n          \n          // Toggle selection\n          const index = currentAnswers.indexOf(choiceIndex);\n          if (index === -1) {\n            // Add the choice if not already selected\n            updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n          } else {\n            // Remove the choice if already selected\n            updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n              (idx) => idx !== choiceIndex\n            );\n          }\n          \n          return updatedAnswers;\n        });\n      };\n    \n      const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n        (total, selections) => total + selections.length,\n        0\n      );\n    \n      const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n      \n      return (\n        <div className=\"multiple-choice-task\">\n          <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n            {task.questions[currentQuestionIndex].question[language]}\n          </h3>\n\n          {currentQuestionIndex === 10 ? (\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\n              <img \n                src={process.env.PUBLIC_URL + '/pentagon.png'} \n                alt=\"Shape for copying\" \n                style={{ maxWidth: '45%', height: 'auto' }}\n                onError={(e) => {\n                  console.error(\"Image failed to load\");\n                  console.log(\"Attempted path:\", e.target.src);\n                }}\n              />\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n                {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                  <label\n                    key={index}\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      textAlign: 'center',\n                      margin: '5px 0',\n                      width: '200px',\n                    }}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={currentSelections.includes(index)}\n                      onChange={() => handleAnswerSelect(index)}\n                      style={{ marginRight: '10px' }}\n                    />\n                    {choice[language]}\n                  </label>\n                ))}\n              </div>\n            </div>\n          ) : (\n            // Default rendering for other questions\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              minHeight: '30vh',\n              marginTop: '10px'\n            }}>\n              {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                <label\n                  key={index}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                    margin: '5px 0',\n                    width: '200px',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={currentSelections.includes(index)}\n                    onChange={() => handleAnswerSelect(index)}\n                    style={{ marginRight: '10px' }}\n                  />\n                  {choice[language]}\n                </label>\n              ))}\n            </div>\n          )}\n\n          {/* Navigation Buttons and Counter */}\n          <div className=\"navigation-container\" style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px'\n          }}>\n            <div className=\"navigation-buttons\">\n              <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n                {language === 'hindi' ? 'पिछला' : 'Previous'}\n              </button>\n              <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n                {language === 'hindi' ? 'अगला' : 'Next'}\n              </button>\n            </div>\n            <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n              {language === 'hindi'\n                ? `चयनित: ${totalSelectedCount}`\n                : `Score: ${totalSelectedCount}`}\n            </div>\n          </div>\n\n          {/* Question Number Navigation */}\n          <div\n            className=\"question-number-navigation\"\n            style={{\n              marginTop: '10px',\n              display: 'flex',\n              justifyContent: 'center',\n              flexWrap: 'wrap',\n            }}\n          >\n            {task.questions.map((q, index) => (\n              <button\n                key={index}\n                onClick={() => {\n                  setCurrentQuestionIndex(index);\n                }}\n                style={{\n                  margin: '5px',\n                  padding: '10px',\n                  backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n                  color: index === currentQuestionIndex ? '#fff' : '#000',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                }}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n{/* Submit Button */}\n<div style={{ marginTop: '20px', textAlign: 'center' }}>\n            <button\n              onClick={async () => {\n                const finalScore = Object.values(allSelectedAnswers).reduce(\n                  (total, selections) => total + (selections ? selections.length : 0),\n                  0\n                );\n                \n                console.log('Final MMSE score:', finalScore);\n                const formData = new FormData();\n                formData.append('name', state.name);\n                formData.append('age', state.age);\n                formData.append('patientId', state.patientId);\n                formData.append('score', finalScore.toString());\n\n                try {\n                  console.log('Sending MMSE score to server:', finalScore);\n                  const response = await fetch('http://localhost:5001/save', {\n                    method: 'POST',\n                    body: formData,\n                  });\n\n                  if (!response.ok) {\n                    throw new Error('Failed to save MMSE score');\n                  }\n\n                  console.log('MMSE score saved successfully');\n                  setTestCompleted(true);\n                } catch (error) {\n                  console.error('Error saving MMSE score:', error);\n                  alert('Failed to save test score. Please try again.');\n                }\n              }}\n              style={{\n                padding: '10px 20px',\n                backgroundColor: '#28a745',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              {language === 'hindi' ? 'जमा करें' : 'Submit'}\n            </button>\n          </div>\n\n        </div>\n      );\n    };\n\n    const TaskContent = ({\n      task,\n      language,\n      testCompleted,\n      showInitialInstructions,\n      setShowInitialInstructions,\n      setTestCompleted,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n      setIsPatient,\n      currentQuestionIndex,\n      setCurrentQuestionIndex\n    }) => {\n      if (task.id === 2) {\n        if (testCompleted) {\n          return (\n            <div className=\"w-full flex justify-center items-center\">\n              <TaskCompletion \n                language={language}\n                allSelectedAnswers={allSelectedAnswers} \n              />\n            </div>\n          );\n        }\n        // If initial instructions are to be shown\n        if (showInitialInstructions) {\n          return (\n            <InitialInstructions\n              onAccept={() => setShowInitialInstructions(false)}\n              onDeny={() => {\n                setShowInitialInstructions(false);\n                setTestCompleted(true);\n              }}\n              setIsPatient={setIsPatient}  // Pass it here\n              language={language}\n            />\n          );\n        }\n\n        // Render the MultipleChoiceTask\n        return (\n          <MultipleChoiceTask\n            task={task}\n            language={language}\n            setTestCompleted={setTestCompleted}\n            allSelectedAnswers={allSelectedAnswers}\n            setAllSelectedAnswers={setAllSelectedAnswers}\n            currentQuestionIndex={currentQuestionIndex}\n            setCurrentQuestionIndex={setCurrentQuestionIndex}\n          />\n        );      \n      }\n\n      return (\n        <div className=\"task-content\">\n          {task.image ? (\n            <>\n            {/* Added click to enlarge text */}\n          <div style={{ \n            textAlign: 'left', \n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          }}>\n            {language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out'} 🔍\n          </div>\n              <img\n                src={task.image}\n                alt=\"Task\"\n                style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n                onClick={() => setShowImageModal(true)}\n              />\n              {showImageModal && (\n                <div className=\"image-modal\">\n                  <img\n                    src={task.image}\n                    alt=\"Popup Task\"\n                    style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                    onClick={() => setShowImageModal(false)}\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n              {task.paragraph[language]}\n            </p>\n          )}\n        </div>\n      );\n    };\n  \n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          backgroundColor: 'white',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          zIndex: 1000,\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          border: '1px solid #ddd'\n        }}>\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {/* Initial Test Setup Modal */}\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {/* Instructions Modal */}\n          {showModal && <InstructionModal \n            onClose={() => setShowModal(false)} \n            selectedTab={selectedTab} \n            language={language} \n          />}\n\n          {/* Main Content */}\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                    style={{\n                      cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n                      opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n                      backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n                    }}\n                  >\n                    {task.title[language]}\n                    {completedTasks.has(task.id) && (\n                      <span style={{ marginLeft: '5px', color: 'green' }}>✓</span>\n                    )}\n                  </div>\n                ))}\n            </div>\n\n            {/* Task Content Area */}\n            <div className=\"content\">\n              <TaskContent\n                task={tasks[selectedTab]}\n                language={language}\n                testCompleted={testCompleted}\n                showInitialInstructions={showInitialInstructions}\n                setShowInitialInstructions={setShowInitialInstructions}\n                setTestCompleted={setTestCompleted}\n                allSelectedAnswers={allSelectedAnswers}\n                setAllSelectedAnswers={setAllSelectedAnswers}\n                currentQuestionIndex={currentQuestionIndex}\n                setCurrentQuestionIndex={setCurrentQuestionIndex}\n              />\n\n              {/* Media Recording Form */}\n              {selectedTab !== 2 && (\n                <form\n                  onSubmit={handleSubmit}\n                  className=\"media-form\"\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px',\n                    marginTop: '20px'\n                  }}\n                >\n                  <div className=\"media-controls\">\n                  {mediaURL ? (\n                      <div className=\"media-playback\">\n                        {selectedTab === 1 ? (\n                          <video \n                            src={mediaURL} \n                            controls\n                            style={{\n                              maxWidth: '350px',  // Set maximum width\n                              width: '100%',      // Responsive width\n                              height: 'auto',     // Maintain aspect ratio\n                              marginBottom: '10px' // Add some spacing\n                            }} \n                          />\n                        ) : (\n                          <audio src={mediaURL} controls />\n                        )}\n                        <button\n                              type=\"button\"\n                              onClick={() =>\n                                handleReRecord({\n                                  setMediaURL,\n                                  setVideoBlob,\n                                  setAudioBlob,\n                                  mediaChunksRef,\n                                  mediaRecorderRef,\n                                  selectedTab,\n                                  handleMediaRecord: () =>\n                                    handleMediaRecord({\n                                      selectedTab,\n                                      isRecording,\n                                      setIsRecording,\n                                      setMediaURL,\n                                      setCountdown,\n                                      setVideoBlob,\n                                      setAudioBlob,\n                                      mediaRecorderRef,\n                                      mediaChunksRef,\n                                    }),\n                                })\n                              }                              \n                              className=\"custom-button\"\n                            >\n                          {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"recording-controls\">\n                        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                          {isRecording && <p>Time remaining: {countdown}s</p>}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleMediaRecord({\n                              selectedTab,\n                              isRecording,\n                              setIsRecording,\n                              setMediaURL,\n                              setCountdown,\n                              setVideoBlob,\n                              setAudioBlob,\n                              mediaRecorderRef,\n                              mediaChunksRef,\n                            })\n                          }                          \n                          className=\"custom-button\"\n                          style={{\n                            marginBottom: '10px',\n                            padding: '8px 12px',\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer'\n                          }}\n                        >\n                          {isRecording\n                            ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n                            : language === 'hindi'\n                            ? selectedTab === 1\n                              ? 'वीडियो रिकॉर्ड करें'\n                              : 'आवाज़ रिकॉर्ड करें'\n                            : selectedTab === 1\n                            ? 'Record Video'\n                            : 'Record Voice'}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  <button \n                    type=\"submit\" \n                    disabled={!mediaURL || isSubmitting} \n                    className=\"custom-button\"\n                    style={{\n                      opacity: (!mediaURL || isSubmitting) ? 0.6 : 1\n                    }}\n                  >\n                    {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {showTick && <span className=\"tick\">✔</span>}\n                </form>\n              )}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <h2>{language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}</h2>\n                <p>\n                  {language === 'hindi' \n                    ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                    : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n                </p>\n                <div className=\"button-container\">\n                  <button onClick={handleRefreshCancel} className=\"cancel-button\">\n                    {language === 'hindi' ? 'रद्द करें' : 'Cancel'}\n                  </button>\n                  <button onClick={handleRefreshConfirm} className=\"confirm-button\">\n                    {language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n  }\n  export default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}