{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './components/tasks';\nimport './App.css';\n\n// Import separated components\nimport { InstructionModal, MediaRecordingForm, TaskContent as MediaTaskContent, startMediaRecording, stopMediaRecording } from './components/task0&1';\nimport { InitialInstructions, MultipleChoiceTask, TaskCompletion } from './components/task2';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s2();\n  var _s = $RefreshSig$();\n  // State Management\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n\n  // Effects\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n      sessionStorage.clear();\n    };\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n    return () => window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n  }, []);\n\n  // Event Handlers\n  const handleTabClick = id => {\n    var _mediaRecorderRef$cur;\n    if (completedTasks.has(id) || id < selectedTab) return;\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    if (((_mediaRecorderRef$cur = mediaRecorderRef.current) === null || _mediaRecorderRef$cur === void 0 ? void 0 : _mediaRecorderRef$cur.state) === 'recording') {\n      stopMediaRecording(mediaRecorderRef, setCountdown);\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  };\n  const handleMediaRecord = () => {\n    if (!isRecording) {\n      setMediaURL(\"\");\n      setCountdown(60);\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n      startMediaRecording({\n        selectedTab,\n        setIsRecording,\n        setCountdown,\n        mediaRecorderRef,\n        mediaChunksRef,\n        setMediaURL,\n        setVideoBlob,\n        setAudioBlob\n      });\n    } else {\n      stopMediaRecording(mediaRecorderRef, setCountdown);\n    }\n  };\n  const handleReRecord = () => {\n    var _mediaRecorderRef$cur2;\n    setMediaURL(\"\");\n    selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    mediaChunksRef.current = [];\n    if ((_mediaRecorderRef$cur2 = mediaRecorderRef.current) !== null && _mediaRecorderRef$cur2 !== void 0 && _mediaRecorderRef$cur2.stream) {\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    handleMediaRecord();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n        alert('Patient information is missing. Please start over.');\n        navigate('/');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      const scoreToSend = selectedTab === 2 ? calculateScore().toString() : '0';\n      formData.append('score', scoreToSend);\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n        setIsSubmitting(false);\n        return;\n      }\n      if (selectedTab === 1) {\n        formData.append('video', currentBlob, 'video.webm');\n      } else if (selectedTab === 0) {\n        formData.append('audio', currentBlob, 'audio.webm');\n      }\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error((await response.json()).error || 'Upload failed');\n      }\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n        const nextTab = selectedTab + 1;\n        if (nextTab < tasks.length) {\n          handleTabClick(nextTab);\n        }\n      }, 1000);\n      setMediaURL('');\n      selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const calculateScore = () => {\n    return Object.values(allSelectedAnswers).reduce((total, selections) => total + ((selections === null || selections === void 0 ? void 0 : selections.length) || 0), 0);\n  };\n\n  // Initial Popup Component\n  const InitialPopup = ({\n    language,\n    setLanguage,\n    onClose\n  }) => {\n    _s();\n    const audioRef = useRef(null);\n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, [language]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-popup-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: language === 'english' ? '/audio/q1_en.mp3' : '/audio/q1_hi.mp3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-popup-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'english' ? 'Welcome to the Dementia Test!' : 'डिमेंशिया टेस्ट में आपका स्वागत है!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setLanguage('english'),\n            className: `language-button ${language === 'english' ? 'active' : ''}`,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setLanguage('hindi'),\n            className: `language-button ${language === 'hindi' ? 'active' : ''}`,\n            children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"begin-test-button\",\n          children: language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Main Content Renderer\n  _s(InitialPopup, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n  const renderMainContent = () => {\n    if (selectedTab === 2) {\n      if (testCompleted) {\n        return /*#__PURE__*/_jsxDEV(TaskCompletion, {\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 16\n        }, this);\n      }\n      if (showInitialInstructions) {\n        return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n          onAccept: () => setShowInitialInstructions(false),\n          onDeny: () => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          },\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n        task: tasks[2],\n        language: language,\n        setTestCompleted: setTestCompleted,\n        currentQuestionIndex: currentQuestionIndex,\n        setCurrentQuestionIndex: setCurrentQuestionIndex,\n        allSelectedAnswers: allSelectedAnswers,\n        setAllSelectedAnswers: setAllSelectedAnswers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MediaTaskContent, {\n        task: tasks[selectedTab],\n        language: language,\n        showImageModal: showImageModal,\n        setShowImageModal: setShowImageModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MediaRecordingForm, {\n        selectedTab: selectedTab,\n        language: language,\n        mediaURL: mediaURL,\n        setMediaURL: setMediaURL,\n        isRecording: isRecording,\n        setIsRecording: setIsRecording,\n        countdown: countdown,\n        setCountdown: setCountdown,\n        isSubmitting: isSubmitting,\n        showTick: showTick,\n        handleSubmit: handleSubmit,\n        handleMediaRecord: handleMediaRecord,\n        handleReRecord: handleReRecord,\n        mediaRecorderRef: mediaRecorderRef,\n        mediaChunksRef: mediaChunksRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patient-id-display\",\n      children: [\"Patient ID: \", state.patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: language,\n      setLanguage: setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        selectedTab: selectedTab,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            style: {\n              cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n              opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n              backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n            },\n            children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '5px',\n                color: 'green'\n              },\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 23\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: renderMainContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: language === 'hindi' ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?' : 'Refreshing the page will remove all current entries. Do you want to continue?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowRefreshWarning(false),\n              className: \"cancel-button\",\n              children: language === 'hindi' ? 'रद्द करें' : 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowRefreshWarning(false);\n                window.location.reload();\n              },\n              className: \"confirm-button\",\n              children: language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadForm, \"w47Vs2dUnQy3ZrW/2up9kD4658A=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","InstructionModal","MediaRecordingForm","TaskContent","MediaTaskContent","startMediaRecording","stopMediaRecording","InitialInstructions","MultipleChoiceTask","TaskCompletion","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s2","_s","$RefreshSig$","isSubmitting","setIsSubmitting","state","navigate","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","countdown","setCountdown","completedTasks","setCompletedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","audioBlob","setAudioBlob","videoBlob","setVideoBlob","showRefreshWarning","setShowRefreshWarning","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","patientId","name","age","setItem","stringify","clearDataOnRefresh","clear","window","addEventListener","removeEventListener","handleTabClick","id","_mediaRecorderRef$cur","has","current","handleMediaRecord","handleReRecord","_mediaRecorderRef$cur2","stream","getTracks","forEach","track","stop","handleSubmit","e","preventDefault","alert","formData","FormData","append","scoreToSend","calculateScore","toString","currentBlob","response","fetch","method","body","ok","Error","json","error","setTimeout","prev","nextTab","length","console","message","Object","values","reduce","total","selections","InitialPopup","onClose","audioRef","play","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderMainContent","onAccept","onDeny","task","filter","map","style","cursor","opacity","backgroundColor","undefined","title","marginLeft","color","location","reload","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './components/tasks';\nimport './App.css';\n\n// Import separated components\nimport { \n  InstructionModal,\n  MediaRecordingForm,\n  TaskContent as MediaTaskContent,\n  startMediaRecording,\n  stopMediaRecording\n} from './components/task0&1';\n\nimport { \n  InitialInstructions,\n  MultipleChoiceTask,\n  TaskCompletion \n} from './components/task2';\n\nfunction FileUploadForm() {\n  // State Management\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n\n  // Effects\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n      sessionStorage.clear();\n    };\n    \n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n    return () => window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n  }, []);\n\n  // Event Handlers\n  const handleTabClick = (id) => {\n    if (completedTasks.has(id) || id < selectedTab) return;\n\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n  \n    if (mediaRecorderRef.current?.state === 'recording') {\n      stopMediaRecording(mediaRecorderRef, setCountdown);\n    }\n  \n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  };\n\n  const handleMediaRecord = () => {\n    if (!isRecording) {\n      setMediaURL(\"\");\n      setCountdown(60);\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n\n      startMediaRecording({\n        selectedTab,\n        setIsRecording,\n        setCountdown,\n        mediaRecorderRef,\n        mediaChunksRef,\n        setMediaURL,\n        setVideoBlob,\n        setAudioBlob\n      });\n    } else {\n      stopMediaRecording(mediaRecorderRef, setCountdown);\n    }\n  };\n\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    mediaChunksRef.current = [];\n    \n    if (mediaRecorderRef.current?.stream) {\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    \n    handleMediaRecord();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    \n    setIsSubmitting(true);\n    \n    try {\n      if (!state?.patientId || !state?.name || !state?.age) {\n        alert('Patient information is missing. Please start over.');\n        navigate('/');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n      \n      const scoreToSend = selectedTab === 2 ? \n        calculateScore().toString() : '0';\n      formData.append('score', scoreToSend);\n\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n        setIsSubmitting(false);\n        return;\n      }\n\n      if (selectedTab === 1) {\n        formData.append('video', currentBlob, 'video.webm');\n      } else if (selectedTab === 0) {\n        formData.append('audio', currentBlob, 'audio.webm');\n      }\n\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error((await response.json()).error || 'Upload failed');\n      }\n\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n        const nextTab = selectedTab + 1;\n        if (nextTab < tasks.length) {\n          handleTabClick(nextTab);\n        }\n      }, 1000);\n\n      setMediaURL('');\n      selectedTab === 1 ? setVideoBlob(null) : setAudioBlob(null);\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const calculateScore = () => {\n    return Object.values(allSelectedAnswers).reduce(\n      (total, selections) => total + (selections?.length || 0),\n      0\n    );\n  };\n\n  // Initial Popup Component\n  const InitialPopup = ({ language, setLanguage, onClose }) => {\n    const audioRef = useRef(null);\n    \n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, [language]);\n    \n    return (\n      <div className=\"initial-popup-overlay\">\n        <audio\n          ref={audioRef}\n          src={language === 'english' ? '/audio/q1_en.mp3' : '/audio/q1_hi.mp3'}\n        />\n        <div className=\"initial-popup-content\">\n          <h2>\n            {language === 'english' \n              ? 'Welcome to the Dementia Test!' \n              : 'डिमेंशिया टेस्ट में आपका स्वागत है!'}\n          </h2>\n          {/* Rest of the popup content */}\n          <div className=\"language-selection\">\n            <button\n              onClick={() => setLanguage('english')}\n              className={`language-button ${language === 'english' ? 'active' : ''}`}>\n              English\n            </button>\n            <button\n              onClick={() => setLanguage('hindi')}\n              className={`language-button ${language === 'hindi' ? 'active' : ''}`}>\n              हिंदी\n            </button>\n          </div>\n          <button onClick={onClose} className=\"begin-test-button\">\n            {language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'}\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  // Main Content Renderer\n  const renderMainContent = () => {\n    if (selectedTab === 2) {\n      if (testCompleted) {\n        return <TaskCompletion language={language} />;\n      }\n      if (showInitialInstructions) {\n        return (\n          <InitialInstructions\n            onAccept={() => setShowInitialInstructions(false)}\n            onDeny={() => {\n              setShowInitialInstructions(false);\n              setTestCompleted(true);\n            }}\n            language={language}\n          />\n        );\n      }\n      return (\n        <MultipleChoiceTask\n          task={tasks[2]}\n          language={language}\n          setTestCompleted={setTestCompleted}\n          currentQuestionIndex={currentQuestionIndex}\n          setCurrentQuestionIndex={setCurrentQuestionIndex}\n          allSelectedAnswers={allSelectedAnswers}\n          setAllSelectedAnswers={setAllSelectedAnswers}\n        />\n      );\n    }\n\n    return (\n      <>\n        <MediaTaskContent\n          task={tasks[selectedTab]}\n          language={language}\n          showImageModal={showImageModal}\n          setShowImageModal={setShowImageModal}\n        />\n        <MediaRecordingForm\n          selectedTab={selectedTab}\n          language={language}\n          mediaURL={mediaURL}\n          setMediaURL={setMediaURL}\n          isRecording={isRecording}\n          setIsRecording={setIsRecording}\n          countdown={countdown}\n          setCountdown={setCountdown}\n          isSubmitting={isSubmitting}\n          showTick={showTick}\n          handleSubmit={handleSubmit}\n          handleMediaRecord={handleMediaRecord}\n          handleReRecord={handleReRecord}\n          mediaRecorderRef={mediaRecorderRef}\n          mediaChunksRef={mediaChunksRef}\n        />\n      </>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div className=\"patient-id-display\">\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {showModal && (\n            <InstructionModal \n              onClose={() => setShowModal(false)}\n              selectedTab={selectedTab}\n              language={language}\n            />\n          )}\n\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                    style={{\n                      cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n                      opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n                      backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n                    }}\n                  >\n                    {task.title[language]}\n                    {completedTasks.has(task.id) && (\n                      <span style={{ marginLeft: '5px', color: 'green' }}>✓</span>\n                    )}\n                  </div>\n                ))}\n            </div>\n\n            {/* Content Area */}\n            <div className=\"content\">\n              {renderMainContent()}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <h2>{language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}</h2>\n                <p>\n                  {language === 'hindi' \n                    ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                    : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n                </p>\n                <div className=\"button-container\">\n                  <button onClick={() => setShowRefreshWarning(false)} className=\"cancel-button\">\n                    {language === 'hindi' ? 'रद्द करें' : 'Cancel'}\n                  </button>\n                  <button onClick={() => {\n                    setShowRefreshWarning(false);\n                    window.location.reload();\n                  }} className=\"confirm-button\">\n                    {language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}