{"ast":null,"code":"const handleTabClick=_ref=>{let{id,completedTasks,selectedTab,setCountdown,setMediaURL,mediaChunksRef,mediaRecorderRef,setSelectedTab,setShowModal,setShowInitialInstructions}=_ref;try{// Validate inputs\nif(id==null||!completedTasks||!mediaChunksRef||!mediaRecorderRef){console.error('Required parameters missing in handleTabClick');return;}// Prevent navigation to completed tasks\nif(completedTasks.has(id)){return;}// Prevent going back to previous tasks\nif(id<selectedTab){return;}setCountdown(60);setMediaURL(\"\");mediaChunksRef.current=[];if(mediaRecorderRef.current&&mediaRecorderRef.current.state==='recording'){mediaRecorderRef.current.stop();mediaRecorderRef.current.stream.getTracks().forEach(track=>track.stop());}setSelectedTab(id);setShowModal(id!==2);setShowInitialInstructions(id===2);}catch(error){console.error('Error in handleTabClick:',error);// You might want to handle this error more gracefully in the UI\n}};export default handleTabClick;","map":{"version":3,"names":["handleTabClick","_ref","id","completedTasks","selectedTab","setCountdown","setMediaURL","mediaChunksRef","mediaRecorderRef","setSelectedTab","setShowModal","setShowInitialInstructions","console","error","has","current","state","stop","stream","getTracks","forEach","track"],"sources":["/home/soham/aiims/my-app/src/handleTabClick.js"],"sourcesContent":["const handleTabClick = ({\n    id,\n    completedTasks,\n    selectedTab,\n    setCountdown,\n    setMediaURL,\n    mediaChunksRef,\n    mediaRecorderRef,\n    setSelectedTab,\n    setShowModal,\n    setShowInitialInstructions\n  }) => {\n    try {\n        // Validate inputs\n        if (id == null || !completedTasks || !mediaChunksRef || !mediaRecorderRef) {\n          console.error('Required parameters missing in handleTabClick');\n          return;\n        }\n    \n        // Prevent navigation to completed tasks\n        if (completedTasks.has(id)) {\n          return;\n        }\n    \n        // Prevent going back to previous tasks\n        if (id < selectedTab) {\n          return;\n        }\n\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n  \n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  \n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  \n} catch (error) {\n    console.error('Error in handleTabClick:', error);\n    // You might want to handle this error more gracefully in the UI\n  }\n};\n  export default handleTabClick;"],"mappings":"AAAA,KAAM,CAAAA,cAAc,CAAGC,IAAA,EAWf,IAXgB,CACpBC,EAAE,CACFC,cAAc,CACdC,WAAW,CACXC,YAAY,CACZC,WAAW,CACXC,cAAc,CACdC,gBAAgB,CAChBC,cAAc,CACdC,YAAY,CACZC,0BACF,CAAC,CAAAV,IAAA,CACC,GAAI,CACA;AACA,GAAIC,EAAE,EAAI,IAAI,EAAI,CAACC,cAAc,EAAI,CAACI,cAAc,EAAI,CAACC,gBAAgB,CAAE,CACzEI,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC,CAC9D,OACF,CAEA;AACA,GAAIV,cAAc,CAACW,GAAG,CAACZ,EAAE,CAAC,CAAE,CAC1B,OACF,CAEA;AACA,GAAIA,EAAE,CAAGE,WAAW,CAAE,CACpB,OACF,CAEJC,YAAY,CAAC,EAAE,CAAC,CAChBC,WAAW,CAAC,EAAE,CAAC,CACfC,cAAc,CAACQ,OAAO,CAAG,EAAE,CAE3B,GAAIP,gBAAgB,CAACO,OAAO,EAAIP,gBAAgB,CAACO,OAAO,CAACC,KAAK,GAAK,WAAW,CAAE,CAC9ER,gBAAgB,CAACO,OAAO,CAACE,IAAI,CAAC,CAAC,CAC/BT,gBAAgB,CAACO,OAAO,CAACG,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,EAAIA,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC,CAC5E,CAEAR,cAAc,CAACP,EAAE,CAAC,CAClBQ,YAAY,CAACR,EAAE,GAAK,CAAC,CAAC,CACtBS,0BAA0B,CAACT,EAAE,GAAK,CAAC,CAAC,CAExC,CAAE,MAAOW,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD;AACF,CACF,CAAC,CACC,cAAe,CAAAb,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}