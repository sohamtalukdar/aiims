{"ast":null,"code":"import React from'react';import TaskCompletion from'./TaskCompletion';import InitialInstructions from'./InitialInstructions';import MultipleChoiceTask from'./MultipleChoiceTask';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TaskContent=_ref=>{let{task,language,testCompleted,showInitialInstructions,setShowInitialInstructions,setTestCompleted,allSelectedAnswers,setAllSelectedAnswers,setIsPatient,currentQuestionIndex,setCurrentQuestionIndex,setShowImageModal,showImageModal}=_ref;if(task.id===2){if(testCompleted){return/*#__PURE__*/_jsx(\"div\",{className:\"w-full flex justify-center items-center\",children:/*#__PURE__*/_jsx(TaskCompletion,{language:language,allSelectedAnswers:allSelectedAnswers})});}// If initial instructions are to be shown\nif(showInitialInstructions){return/*#__PURE__*/_jsx(InitialInstructions,{onAccept:()=>setShowInitialInstructions(false),onDeny:()=>{setShowInitialInstructions(false);setTestCompleted(true);},setIsPatient:setIsPatient,language:language});}// Render the MultipleChoiceTask\nreturn/*#__PURE__*/_jsx(MultipleChoiceTask,{task:task,language:language,setTestCompleted:setTestCompleted,allSelectedAnswers:allSelectedAnswers,setAllSelectedAnswers:setAllSelectedAnswers,currentQuestionIndex:currentQuestionIndex,setCurrentQuestionIndex:setCurrentQuestionIndex});}return/*#__PURE__*/_jsx(\"div\",{className:\"task-content\",children:task.image?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:'left',marginBottom:'5px',fontSize:'14px',color:'#666',cursor:'pointer'},children:[language==='hindi'?'‡§ú‡§º‡•Ç‡§Æ ‡§á‡§®/‡§ú‡§º‡•Ç‡§Æ ‡§Ü‡§â‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç':'Click on the image to zoom in / zoom out',\" \\uD83D\\uDD0D\"]}),/*#__PURE__*/_jsx(\"img\",{src:task.image,alt:\"Task\",style:{cursor:'pointer',maxWidth:'100%',maxHeight:'100%'},onClick:()=>setShowImageModal(true)}),showImageModal&&/*#__PURE__*/_jsx(\"div\",{className:\"image-modal\",children:/*#__PURE__*/_jsx(\"img\",{src:task.image,alt:\"Popup Task\",style:{maxWidth:'90%',maxHeight:'90%',objectFit:'contain'},onClick:()=>setShowImageModal(false)})})]}):/*#__PURE__*/_jsx(\"p\",{style:{width:'60%',margin:'0 auto',lineHeight:'1.8',fontSize:'1.1em'},children:task.paragraph[language]})});};export default TaskContent;","map":{"version":3,"names":["React","TaskCompletion","InitialInstructions","MultipleChoiceTask","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TaskContent","_ref","task","language","testCompleted","showInitialInstructions","setShowInitialInstructions","setTestCompleted","allSelectedAnswers","setAllSelectedAnswers","setIsPatient","currentQuestionIndex","setCurrentQuestionIndex","setShowImageModal","showImageModal","id","className","children","onAccept","onDeny","image","style","textAlign","marginBottom","fontSize","color","cursor","src","alt","maxWidth","maxHeight","onClick","objectFit","width","margin","lineHeight","paragraph"],"sources":["/home/soham/aiims/my-app/src/TaskContent.js"],"sourcesContent":["import React from 'react';\nimport TaskCompletion from './TaskCompletion';\nimport InitialInstructions from './InitialInstructions';\nimport MultipleChoiceTask from './MultipleChoiceTask';\n\n\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n  setIsPatient,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  setShowImageModal,\n  showImageModal\n}) => {\n  if (task.id === 2) {\n    if (testCompleted) {\n      return (\n        <div className=\"w-full flex justify-center items-center\">\n          <TaskCompletion \n            language={language}\n            allSelectedAnswers={allSelectedAnswers} \n          />\n        </div>\n      );\n    }\n    \n    // If initial instructions are to be shown\n    if (showInitialInstructions) {\n      return (\n        <InitialInstructions\n          onAccept={() => setShowInitialInstructions(false)}\n          onDeny={() => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          }}\n          setIsPatient={setIsPatient}\n          language={language}\n        />\n      );\n    }\n\n    // Render the MultipleChoiceTask\n    return (\n      <MultipleChoiceTask\n        task={task}\n        language={language}\n        setTestCompleted={setTestCompleted}\n        allSelectedAnswers={allSelectedAnswers}\n        setAllSelectedAnswers={setAllSelectedAnswers}\n        currentQuestionIndex={currentQuestionIndex}\n        setCurrentQuestionIndex={setCurrentQuestionIndex}\n      />\n    );      \n  }\n\n  return (\n    <div className=\"task-content\">\n      {task.image ? (\n        <>\n          {/* Added click to enlarge text */}\n          <div style={{ \n            textAlign: 'left', \n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          }}>\n            {language === 'hindi' ? '‡§ú‡§º‡•Ç‡§Æ ‡§á‡§®/‡§ú‡§º‡•Ç‡§Æ ‡§Ü‡§â‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç' : 'Click on the image to zoom in / zoom out'} üîç\n          </div>\n          <img\n            src={task.image}\n            alt=\"Task\"\n            style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n            onClick={() => setShowImageModal(true)}\n          />\n          {showImageModal && (\n            <div className=\"image-modal\">\n              <img\n                src={task.image}\n                alt=\"Popup Task\"\n                style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                onClick={() => setShowImageModal(false)}\n              />\n            </div>\n          )}\n        </>\n      ) : (\n        <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n          {task.paragraph[language]}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default TaskContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}