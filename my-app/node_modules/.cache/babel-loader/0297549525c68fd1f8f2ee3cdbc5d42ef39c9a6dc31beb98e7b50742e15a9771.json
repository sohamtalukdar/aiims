{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import tasks from'./tasks';import'./App.css';// import TaskCompletion from './TaskCompletion';\nimport InstructionModal from'./InstructionModal';import handleMediaRecord,{handleReRecord}from'./handleMediaRecord';import useRefreshHandler from'./useRefreshHandler';// import InitialInstructions from './InitialInstructions';\nimport InitialPopup from'./InitialPopup';import handleSubmit from'./handleSubmit';import handleTabClick from'./handleTabClick';// import MultipleChoiceTask from './MultipleChoiceTask';\nimport TaskContent from'./TaskContent';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";function FileUploadForm(){const[isSubmitting,setIsSubmitting]=useState(false);const{state}=useLocation();const navigate=useNavigate();const[showModal,setShowModal]=useState(true);const[selectedTab,setSelectedTab]=useState(0);const[setIsPatient]=useState(true);// Add this line with other useState declarations\nconst[language,setLanguage]=useState('english');const[isRecording,setIsRecording]=useState(false);const[mediaURL,setMediaURL]=useState(\"\");const[showTick,setShowTick]=useState(false);const mediaRecorderRef=useRef(null);const mediaChunksRef=useRef([]);const[showImageModal,setShowImageModal]=useState(false);const[showInitialPopup,setShowInitialPopup]=useState(true);const[countdown,setCountdown]=useState(60);const[completedTasks,setCompletedTasks]=useState(new Set());const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[showInitialInstructions,setShowInitialInstructions]=useState(false);const[testCompleted,setTestCompleted]=useState(false);const[audioBlob,setAudioBlob]=useState(null);const[videoBlob,setVideoBlob]=useState(null);const[showRefreshWarning,setShowRefreshWarning]=useState(false);const[allSelectedAnswers,setAllSelectedAnswers]=useState(()=>{const savedData=sessionStorage.getItem(\"allSelectedAnswers\");return savedData?JSON.parse(savedData):{};});const{handleRefreshConfirm,handleRefreshCancel}=useRefreshHandler({showInitialPopup,setShowRefreshWarning});useEffect(()=>{if(!(state!==null&&state!==void 0&&state.patientId)||!(state!==null&&state!==void 0&&state.name)||!(state!==null&&state!==void 0&&state.age)){navigate('/');}},[state,navigate]);useEffect(()=>{sessionStorage.setItem(\"allSelectedAnswers\",JSON.stringify(allSelectedAnswers));},[allSelectedAnswers]);const handleFormSubmit=async e=>{const handleTabClickWrapper=id=>handleTabClick({id,completedTasks,selectedTab,setCountdown,setMediaURL,mediaChunksRef,mediaRecorderRef,setSelectedTab,setShowModal,setShowInitialInstructions});await handleSubmit({e,isSubmitting,setIsSubmitting,state,navigate,selectedTab,allSelectedAnswers,videoBlob,audioBlob,setShowTick,setCompletedTasks,tasks,handleTabClick:handleTabClickWrapper,setMediaURL,setVideoBlob,setAudioBlob});};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[(state===null||state===void 0?void 0:state.patientId)&&/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'20px',right:'20px',backgroundColor:'white',padding:'8px 12px',borderRadius:'4px',boxShadow:'0 2px 4px rgba(0, 0, 0, 0.1)',zIndex:1000,fontFamily:'monospace',fontSize:'14px',border:'1px solid #ddd'},children:[\"Patient ID: \",state.patientId]}),showInitialPopup?/*#__PURE__*/_jsx(InitialPopup,{language:language,setLanguage:setLanguage,onClose:()=>setShowInitialPopup(false)}):/*#__PURE__*/_jsxs(_Fragment,{children:[showModal&&/*#__PURE__*/_jsx(InstructionModal,{onClose:()=>setShowModal(false),selectedTab:selectedTab,language:language}),/*#__PURE__*/_jsx(\"div\",{className:\"gradient-bg\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tabs\",children:tasks.filter(task=>!(task.id===2&&testCompleted)).map(task=>/*#__PURE__*/_jsxs(\"div\",{className:`tab ${selectedTab===task.id?'active':''} \n                              ${completedTasks.has(task.id)?'completed':''}\n                              ${task.id<selectedTab?'disabled':''}`,onClick:()=>handleTabClick({id:task.id,completedTasks,selectedTab,setCountdown,setMediaURL,mediaChunksRef,mediaRecorderRef,setSelectedTab,setShowModal,setShowInitialInstructions}),style:{cursor:completedTasks.has(task.id)||task.id<selectedTab?'not-allowed':'pointer',opacity:completedTasks.has(task.id)||task.id<selectedTab?0.6:1,backgroundColor:completedTasks.has(task.id)?'#e0e0e0':undefined},children:[task.title[language],completedTasks.has(task.id)&&/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'5px',color:'green'},children:\"\\u2713\"})]},task.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(TaskContent,{task:tasks[selectedTab],language:language,testCompleted:testCompleted,showInitialInstructions:showInitialInstructions,setShowInitialInstructions:setShowInitialInstructions,setTestCompleted:setTestCompleted,allSelectedAnswers:allSelectedAnswers,setAllSelectedAnswers:setAllSelectedAnswers,setIsPatient:setIsPatient,currentQuestionIndex:currentQuestionIndex,setCurrentQuestionIndex:setCurrentQuestionIndex,showImageModal:showImageModal,setShowImageModal:setShowImageModal}),selectedTab!==2&&/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,className:\"media-form\",style:{display:'flex',flexDirection:'column',alignItems:'center',gap:'15px',marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"media-controls\",children:mediaURL?/*#__PURE__*/_jsxs(\"div\",{className:\"media-playback\",children:[selectedTab===1?/*#__PURE__*/_jsx(\"video\",{src:mediaURL,controls:true,style:{maxWidth:'350px',// Set maximum width\nwidth:'100%',// Responsive width\nheight:'auto',// Maintain aspect ratio\nmarginBottom:'10px'// Add some spacing\n}}):/*#__PURE__*/_jsx(\"audio\",{src:mediaURL,controls:true}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleReRecord({setMediaURL,setVideoBlob,setAudioBlob,mediaChunksRef,mediaRecorderRef,selectedTab,handleMediaRecord:()=>handleMediaRecord({selectedTab,isRecording,setIsRecording,setMediaURL,setCountdown,setVideoBlob,setAudioBlob,mediaRecorderRef,mediaChunksRef})}),className:\"custom-button\",children:language==='hindi'?'पुनः रिकॉर्ड करें':'Re-record'})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"recording-controls\",children:[/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',marginTop:'10px'},children:isRecording&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Time remaining: \",countdown,\"s\"]})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>handleMediaRecord({selectedTab,isRecording,setIsRecording,setMediaURL,setCountdown,setVideoBlob,setAudioBlob,mediaRecorderRef,mediaChunksRef}),className:\"custom-button\",style:{marginBottom:'10px',padding:'8px 12px',backgroundColor:'#007bff',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:isRecording?language==='hindi'?'रिकॉर्डिंग रोकें':'Stop Recording':language==='hindi'?selectedTab===1?'वीडियो रिकॉर्ड करें':'आवाज़ रिकॉर्ड करें':selectedTab===1?'Record Video':'Record Voice'})]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!mediaURL||isSubmitting,className:\"custom-button\",style:{opacity:!mediaURL||isSubmitting?0.6:1},children:language==='hindi'?'जमा करें':'Submit'}),showTick&&/*#__PURE__*/_jsx(\"span\",{className:\"tick\",children:\"\\u2714\"})]})]})]}),showRefreshWarning&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{children:language==='hindi'?'पृष्ठ रीफ्रेश की पुष्टि करें':'Confirm Page Refresh'}),/*#__PURE__*/_jsx(\"p\",{children:language==='hindi'?'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?':'Refreshing the page will remove all current entries. Do you want to continue?'}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRefreshCancel,className:\"cancel-button\",children:language==='hindi'?'रद्द करें':'Cancel'}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRefreshConfirm,className:\"confirm-button\",children:language==='hindi'?'रीफ्रेश करें':'Refresh'})]})]})})]})]});}export default FileUploadForm;","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","InstructionModal","handleMediaRecord","handleReRecord","useRefreshHandler","InitialPopup","handleSubmit","handleTabClick","TaskContent","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","FileUploadForm","isSubmitting","setIsSubmitting","state","navigate","showModal","setShowModal","selectedTab","setSelectedTab","setIsPatient","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","countdown","setCountdown","completedTasks","setCompletedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","audioBlob","setAudioBlob","videoBlob","setVideoBlob","showRefreshWarning","setShowRefreshWarning","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","handleRefreshConfirm","handleRefreshCancel","patientId","name","age","setItem","stringify","handleFormSubmit","e","handleTabClickWrapper","id","className","children","style","position","top","right","backgroundColor","padding","borderRadius","boxShadow","zIndex","fontFamily","fontSize","border","onClose","filter","task","map","has","onClick","cursor","opacity","undefined","title","marginLeft","color","onSubmit","display","flexDirection","alignItems","gap","marginTop","src","controls","maxWidth","width","height","marginBottom","type","textAlign","disabled"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["  import React, { useState, useRef, useEffect} from 'react';\n  import { useLocation, useNavigate } from 'react-router-dom'; \n  import tasks from './tasks';\n  import './App.css';\n  // import TaskCompletion from './TaskCompletion';\n  import InstructionModal from './InstructionModal';\n  import handleMediaRecord, { handleReRecord } from './handleMediaRecord';\n  import useRefreshHandler from './useRefreshHandler';\n  // import InitialInstructions from './InitialInstructions';\n  import InitialPopup from './InitialPopup';\n  import handleSubmit from './handleSubmit';\n  import handleTabClick from './handleTabClick';\n  // import MultipleChoiceTask from './MultipleChoiceTask';\n  import TaskContent from './TaskContent';\n\n\n  function FileUploadForm() {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const { state } = useLocation();\n    const navigate = useNavigate();\n    const [showModal, setShowModal] = useState(true);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [setIsPatient] = useState(true); // Add this line with other useState declarations\n    const [language, setLanguage] = useState('english');\n    const [isRecording, setIsRecording] = useState(false);\n    const [mediaURL, setMediaURL] = useState(\"\");\n    const [showTick, setShowTick] = useState(false);\n    const mediaRecorderRef = useRef(null);\n    const mediaChunksRef = useRef([]);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [showInitialPopup, setShowInitialPopup] = useState(true);\n    const [countdown, setCountdown] = useState(60);\n    const [completedTasks, setCompletedTasks] = useState(new Set());\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n    const [testCompleted, setTestCompleted] = useState(false);\n    const [audioBlob, setAudioBlob] = useState(null);\n    const [videoBlob, setVideoBlob] = useState(null);\n    const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n    const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n    });\n    const { handleRefreshConfirm, handleRefreshCancel } = useRefreshHandler({\n    showInitialPopup,\n    setShowRefreshWarning,\n    });\n\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  useEffect(() => {\n      sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n     \n  const handleFormSubmit = async (e) => {\n    const handleTabClickWrapper = (id) => handleTabClick({\n      id,\n      completedTasks,\n      selectedTab,\n      setCountdown,\n      setMediaURL,\n      mediaChunksRef,\n      mediaRecorderRef,\n      setSelectedTab,\n      setShowModal,\n      setShowInitialInstructions\n    });\n\n    await handleSubmit({\n      e,\n      isSubmitting,\n      setIsSubmitting,\n      state,\n      navigate,\n      selectedTab,\n      allSelectedAnswers,\n      videoBlob,\n      audioBlob,\n      setShowTick,\n      setCompletedTasks,\n      tasks,\n      handleTabClick: handleTabClickWrapper,\n      setMediaURL,\n      setVideoBlob,\n      setAudioBlob\n    });\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          backgroundColor: 'white',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          zIndex: 1000,\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          border: '1px solid #ddd'\n        }}>\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {/* Initial Test Setup Modal */}\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {/* Instructions Modal */}\n          {showModal && <InstructionModal \n            onClose={() => setShowModal(false)} \n            selectedTab={selectedTab} \n            language={language} \n          />}\n\n          {/* Main Content */}\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`}\n                              onClick={() => handleTabClick({\n                                id: task.id,\n                                completedTasks,\n                                selectedTab,\n                                setCountdown,\n                                setMediaURL,\n                                mediaChunksRef,\n                                mediaRecorderRef,\n                                setSelectedTab,\n                                setShowModal,\n                                setShowInitialInstructions\n                              })}\n                    style={{\n                      cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n                      opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n                      backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n                    }}\n                  >\n                    {task.title[language]}\n                    {completedTasks.has(task.id) && (\n                      <span style={{ marginLeft: '5px', color: 'green' }}>✓</span>\n                    )}\n                  </div>\n                ))}\n            </div>\n\n            {/* Task Content Area */}\n            <div className=\"content\">\n            <TaskContent\n              task={tasks[selectedTab]}\n              language={language}\n              testCompleted={testCompleted}\n              showInitialInstructions={showInitialInstructions}\n              setShowInitialInstructions={setShowInitialInstructions}\n              setTestCompleted={setTestCompleted}\n              allSelectedAnswers={allSelectedAnswers}\n              setAllSelectedAnswers={setAllSelectedAnswers}\n              setIsPatient={setIsPatient}\n              currentQuestionIndex={currentQuestionIndex}\n              setCurrentQuestionIndex={setCurrentQuestionIndex}\n              showImageModal={showImageModal}\n              setShowImageModal={setShowImageModal}\n            />\n              {/* Media Recording Form */}\n              {selectedTab !== 2 && (\n                <form\n                  onSubmit={handleFormSubmit}\n                  className=\"media-form\"\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px',\n                    marginTop: '20px'\n                  }}\n                >\n                  <div className=\"media-controls\">\n                  {mediaURL ? (\n                      <div className=\"media-playback\">\n                        {selectedTab === 1 ? (\n                          <video \n                            src={mediaURL} \n                            controls\n                            style={{\n                              maxWidth: '350px',  // Set maximum width\n                              width: '100%',      // Responsive width\n                              height: 'auto',     // Maintain aspect ratio\n                              marginBottom: '10px' // Add some spacing\n                            }} \n                          />\n                        ) : (\n                          <audio src={mediaURL} controls />\n                        )}\n                        <button\n                              type=\"button\"\n                              onClick={() =>\n                                handleReRecord({\n                                  setMediaURL,\n                                  setVideoBlob,\n                                  setAudioBlob,\n                                  mediaChunksRef,\n                                  mediaRecorderRef,\n                                  selectedTab,\n                                  handleMediaRecord: () =>\n                                    handleMediaRecord({\n                                      selectedTab,\n                                      isRecording,\n                                      setIsRecording,\n                                      setMediaURL,\n                                      setCountdown,\n                                      setVideoBlob,\n                                      setAudioBlob,\n                                      mediaRecorderRef,\n                                      mediaChunksRef,\n                                    }),\n                                })\n                              }                              \n                              className=\"custom-button\"\n                            >\n                          {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"recording-controls\">\n                        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                          {isRecording && <p>Time remaining: {countdown}s</p>}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleMediaRecord({\n                              selectedTab,\n                              isRecording,\n                              setIsRecording,\n                              setMediaURL,\n                              setCountdown,\n                              setVideoBlob,\n                              setAudioBlob,\n                              mediaRecorderRef,\n                              mediaChunksRef,\n                            })\n                          }                          \n                          className=\"custom-button\"\n                          style={{\n                            marginBottom: '10px',\n                            padding: '8px 12px',\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer'\n                          }}\n                        >\n                          {isRecording\n                            ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n                            : language === 'hindi'\n                            ? selectedTab === 1\n                              ? 'वीडियो रिकॉर्ड करें'\n                              : 'आवाज़ रिकॉर्ड करें'\n                            : selectedTab === 1\n                            ? 'Record Video'\n                            : 'Record Voice'}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  <button \n                    type=\"submit\" \n                    disabled={!mediaURL || isSubmitting} \n                    className=\"custom-button\"\n                    style={{\n                      opacity: (!mediaURL || isSubmitting) ? 0.6 : 1\n                    }}\n                  >\n                    {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {showTick && <span className=\"tick\">✔</span>}\n                </form>\n              )}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <h2>{language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}</h2>\n                <p>\n                  {language === 'hindi' \n                    ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                    : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n                </p>\n                <div className=\"button-container\">\n                  <button onClick={handleRefreshCancel} className=\"cancel-button\">\n                    {language === 'hindi' ? 'रद्द करें' : 'Cancel'}\n                  </button>\n                  <button onClick={handleRefreshConfirm} className=\"confirm-button\">\n                    {language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n  }\n  export default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}