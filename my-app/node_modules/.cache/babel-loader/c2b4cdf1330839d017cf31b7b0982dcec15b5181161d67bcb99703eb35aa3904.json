{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s6 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'; // Add useNavigate here\nimport tasks from './data/tasks';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s6();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n      sessionStorage.clear();\n    };\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n    return () => {\n      window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n    };\n  }, []);\n  useEffect(() => {\n    const blockRefresh = e => {\n      if (!showInitialPopup) {\n        // If test has started\n        e.preventDefault();\n        e.stopPropagation();\n\n        // For older browsers\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n        e.returnValue = '';\n        // Can also show a message if needed\n        return \"Test is in progress. Refresh is disabled.\";\n      }\n    };\n    const blockKeyboardRefresh = e => {\n      if (!showInitialPopup) {\n        // If test has started\n        if (e.metaKey && e.key === 'r' ||\n        // Cmd + R (macOS)\n        e.ctrlKey && e.key === 'r' ||\n        // Ctrl + R (Windows/Linux)\n        e.key === 'F5' // F5 (all platforms)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        }\n      }\n    };\n\n    // Block context menu to prevent refresh\n    const blockContextMenu = e => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n      }\n    };\n\n    // Add all event listeners\n    window.addEventListener('beforeunload', blockRefresh);\n    window.addEventListener('keydown', blockKeyboardRefresh);\n    window.addEventListener('contextmenu', blockContextMenu);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('beforeunload', blockRefresh);\n      window.removeEventListener('keydown', blockKeyboardRefresh);\n      window.removeEventListener('contextmenu', blockContextMenu);\n    };\n  }, [showInitialPopup]);\n  const handleRefreshConfirm = () => {\n    setShowRefreshWarning(false);\n    window.location.reload(); // Perform manual refresh\n  };\n  const handleRefreshCancel = () => {\n    setShowRefreshWarning(false);\n  };\n  const TaskCompletion = ({\n    language\n  }) => {\n    _s();\n    const audioRef = useRef(null);\n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, []);\n    const calculateScore = () => {\n      let totalScore = 0;\n      console.log('Calculating score. allSelectedAnswers:', allSelectedAnswers);\n      if (Object.keys(allSelectedAnswers).length === 0) {\n        console.log('No answers selected, returning 0');\n        return 0;\n      }\n      Object.entries(allSelectedAnswers).forEach(([questionIndex, selections]) => {\n        if (selections && selections.length > 0) {\n          console.log(`Question ${questionIndex}: adding ${selections.length} points`);\n          totalScore += selections.length;\n        }\n      });\n      console.log('Final calculated score:', totalScore);\n      return totalScore;\n    };\n    const score = calculateScore();\n    const maxScore = 30;\n    const handleExit = () => {\n      sessionStorage.clear();\n      window.location.href = '/';\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen p-8 bg-white max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: language === 'english' ? '/audio/thankyou_en.mp3' : '/audio/thankyou_hi.mp3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold mb-8 text-gray-800\",\n          children: language === 'hindi' ? 'धन्यवाद!' : 'Thank You!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-6 rounded-lg shadow-sm mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: language === 'hindi' ? 'आपका स्कोर' : 'Your Score'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-4xl font-bold text-blue-600\",\n            children: [score, \" / \", maxScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg\",\n            children: language === 'hindi' ? 'आपका परीक्षण पूरा हो गया है। परिणाम आपके स्वास्थ्य देखभाल प्रदाता द्वारा साझा किए जाएंगे।' : 'Your test has been completed. The results will be shared by your healthcare provider.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base text-gray-600\",\n            children: language === 'hindi' ? 'कृपया अपने स्वास्थ्य देखभाल प्रदाता से संपर्क करें।' : 'Please contact your healthcare provider for follow-up.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExit,\n            style: {\n              marginTop: '2rem',\n              padding: '10px 20px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '1rem',\n              transition: 'background-color 0.2s'\n            },\n            onMouseOver: e => e.target.style.backgroundColor = '#0056b3',\n            onMouseOut: e => e.target.style.backgroundColor = '#007bff',\n            children: language === 'hindi' ? 'बाहर निकलें' : 'Exit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this);\n  };\n  _s(TaskCompletion, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n  const handleTabClick = id => {\n    // Prevent navigation to completed tasks\n    if (completedTasks.has(id)) {\n      return;\n    }\n\n    // Prevent going back to previous tasks\n    const currentTaskIndex = selectedTab;\n    if (id < currentTaskIndex) {\n      return;\n    }\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    if (id === 2) {\n      setShowInitialInstructions(true);\n    } else {\n      setShowInitialInstructions(false);\n    }\n  };\n\n  // const toggleLanguage = (e) => {\n  //   e.preventDefault();\n  //   setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  // };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true,\n      audio: true\n    } // Video with audio\n    : {\n      audio: true\n    }; // Audio only\n\n    if (!isRecording) {\n      // Clear previous recording data when starting new recording\n      setMediaURL(\"\");\n      setCountdown(60); // Reset the countdown\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n      console.log('Starting media recording for:', selectedTab === 1 ? 'video' : 'audio');\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        console.log('MediaRecorder started');\n        const countdownInterval = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownInterval);\n              // Automatically stop recording when countdown reaches 0\n              if (mediaRecorder.state === \"recording\") {\n                console.log('Stopping recording due to countdown');\n                mediaRecorder.stop();\n                stream.getTracks().forEach(track => track.stop());\n                setIsRecording(false);\n              }\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        mediaRecorder.countdownInterval = countdownInterval;\n        mediaRecorder.addEventListener('dataavailable', event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n            console.log('Data chunk received:', event.data.size, 'bytes');\n          }\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          console.log('Created media blob:', {\n            type: mediaBlob.type,\n            size: mediaBlob.size\n          });\n          const url = URL.createObjectURL(mediaBlob);\n          setMediaURL(url);\n          if (selectedTab === 1) {\n            setVideoBlob(mediaBlob);\n            console.log('Video blob set:', mediaBlob);\n          } else {\n            setAudioBlob(mediaBlob);\n            console.log('Audio blob set:', mediaBlob);\n          }\n          setIsRecording(false);\n          mediaChunksRef.current = [];\n          clearInterval(mediaRecorder.countdownInterval);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        setIsRecording(false);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n        console.log('Recording stopped manually');\n      }\n    }\n  };\n  const handleReRecord = () => {\n    // Clear the current recording\n    setMediaURL(\"\");\n    if (selectedTab === 1) {\n      setVideoBlob(null);\n    } else {\n      setAudioBlob(null);\n    }\n\n    // Clear media chunks\n    mediaChunksRef.current = [];\n\n    // Stop any existing streams\n    if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n\n    // Start new recording\n    handleMediaRecord();\n  };\n\n  // Inside the handleSubmit function in FileUploadForm.js, update it as follows:\n\n  const calculateScore = () => {\n    let totalScore = 0;\n    // Iterate through all questions\n    Object.values(allSelectedAnswers).forEach(selections => {\n      // Each correct selection adds 1 point\n      if (selections && selections.length > 0) {\n        totalScore += selections.length;\n      }\n    });\n    return totalScore;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) {\n      console.log('Already submitting, returning');\n      return;\n    }\n    console.log('Starting submission for tab:', selectedTab);\n    setIsSubmitting(true);\n    try {\n      if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n        alert('Patient information is missing. Please start over.');\n        navigate('/');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n\n      // Initialize score as 0\n      let scoreToSend = '0';\n\n      // Only calculate score for MMSE test (tab 2)\n      if (selectedTab === 2) {\n        const calculatedScore = calculateScore();\n        console.log('Tab 2: Calculated score:', calculatedScore);\n        scoreToSend = calculatedScore.toString();\n      } else {\n        console.log(`Tab ${selectedTab}: Using default score: 0`);\n      }\n      console.log('Setting score in formData:', scoreToSend);\n      formData.append('score', scoreToSend);\n\n      // Log all form data being sent\n      console.log('Form data contents:');\n      for (let pair of formData.entries()) {\n        console.log(`${pair[0]}: ${pair[1]}`);\n      }\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n        setIsSubmitting(false);\n        return;\n      }\n      if (selectedTab === 1) {\n        formData.append('video', currentBlob, 'video.webm');\n      } else if (selectedTab === 0) {\n        formData.append('audio', currentBlob, 'audio.webm');\n      }\n      console.log('Sending request to server...');\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n      const result = await response.json();\n      console.log('Server response:', result);\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n        const nextTab = selectedTab + 1;\n        if (nextTab < tasks.length) {\n          handleTabClick(nextTab);\n        }\n      }, 1000);\n      setMediaURL('');\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Instruction Modal Component\n  const InstructionModal = ({\n    onClose\n  }) => {\n    _s2();\n    const audioRef = useRef(null);\n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, [language]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: selectedTab === 0 ? language === 'english' ? '/audio/task1_en.mp3' : '/audio/task1_hi.mp3' : language === 'english' ? '/audio/task2_en.mp3' : '/audio/task2_hi.mp3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'hindi' ? 'निर्देश' : 'Instructions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '1.2em',\n            color: '#555'\n          },\n          children: selectedTab === 0 ? language === 'hindi' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0915\\u0943\\u092A\\u092F\\u093E \\\"\\u0906\\u0935\\u093E\\u091C\\u093C \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921 \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902 \\u0914\\u0930 \\u091C\\u094B\\u0930 \\u0938\\u0947 \\u092A\\u0922\\u093C\\u0947\\u0902\\u0964 \\u0906\\u092A\\u0915\\u0947 \\u092A\\u093E\\u0938 1 \\u092E\\u093F\\u0928\\u091F \\u0939\\u0948\\u0964 \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0938\\u094D\\u0935\\u091A\\u093E\\u0932\\u093F\\u0924 \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0930\\u0941\\u0915 \\u091C\\u093E\\u090F\\u0917\\u0940\\u0964 \\\"\\u091C\\u092E\\u093E \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please click \\\"Record Voice\\\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \\\"Submit\\\" to save.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this) : language === 'hindi' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u0915\\u0943\\u092A\\u092F\\u093E \\\"\\u0935\\u0940\\u0921\\u093F\\u092F\\u094B \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921 \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902 \\u0914\\u0930 \\u091A\\u093F\\u0924\\u094D\\u0930 \\u0915\\u093E \\u0935\\u0930\\u094D\\u0923\\u0928 \\u0915\\u0930\\u0947\\u0902\\u0964 \\u0906\\u092A\\u0915\\u0947 \\u092A\\u093E\\u0938 1 \\u092E\\u093F\\u0928\\u091F \\u0939\\u0948\\u0964 \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0938\\u094D\\u0935\\u091A\\u093E\\u0932\\u093F\\u0924 \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0930\\u0941\\u0915 \\u091C\\u093E\\u090F\\u0917\\u0940\\u0964 \\\"\\u091C\\u092E\\u093E \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964 \\u091C\\u093C\\u0942\\u092E \\u0907\\u0928 \\u0915\\u0947 \\u0932\\u093F\\u090F, \\u0915\\u0943\\u092A\\u092F\\u093E \\u091A\\u093F\\u0924\\u094D\\u0930 \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please click \\\"Record Video\\\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \\\"Submit\\\" to save. To zoom in, please click on the picture.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"custom-ok-button\",\n          onClick: onClose,\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 5\n    }, this);\n  };\n\n  // Initial Instructions Component for the third task\n  _s2(InstructionModal, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n  const InitialInstructions = ({\n    onAccept,\n    onDeny,\n    setIsPatient,\n    language\n  }) => {\n    _s5();\n    var _s3 = $RefreshSig$(),\n      _s4 = $RefreshSig$();\n    const audioRef = useRef(null);\n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, [language]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-instructions-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-instructions-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: language === 'english' ? '/audio/mmse_en.mp3' : '/audio/mmse_hi.mp3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'hindi' ? 'ऑनलाइन MMSE परीक्षण में आपका स्वागत है' : 'Welcome to the Online MMSE Test'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === 'hindi' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0911\\u0928\\u0932\\u093E\\u0907\\u0928 MMSE \\u091F\\u0947\\u0938\\u094D\\u091F: \\u0924\\u0948\\u092F\\u093E\\u0930\\u0940 \\u0914\\u0930 \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), \"\\u0938\\u094D\\u0935\\u093E\\u0917\\u0924 \\u0939\\u0948! \\u091F\\u0947\\u0938\\u094D\\u091F \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0938\\u0947 \\u092A\\u0939\\u0932\\u0947 \\u0915\\u0943\\u092A\\u092F\\u093E \\u0928\\u093F\\u092E\\u094D\\u0928\\u0932\\u093F\\u0916\\u093F\\u0924 \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u090F\\u0915 \\u0926\\u0947\\u0916\\u092D\\u093E\\u0932\\u0915\\u0930\\u094D\\u0924\\u093E (Caregiver) \\u0915\\u0940 \\u0909\\u092A\\u0938\\u094D\\u0925\\u093F\\u0924\\u093F \\u0906\\u0935\\u0936\\u094D\\u092F\\u0915 \\u0939\\u0948, \\u091C\\u094B \\u091F\\u0947\\u0938\\u094D\\u091F \\u0932\\u0947 \\u0938\\u0915\\u0947\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u090F\\u0915 \\u0916\\u093E\\u0932\\u0940 \\u0915\\u093E\\u0917\\u091C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u090F\\u0915 \\u092A\\u0947\\u0928 \\u092F\\u093E \\u092A\\u0947\\u0902\\u0938\\u093F\\u0932\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0906\\u0935\\u0936\\u094D\\u092F\\u0915 \\u0938\\u0939\\u093E\\u092F\\u0915 \\u0909\\u092A\\u0915\\u0930\\u0923 (\\u091C\\u0948\\u0938\\u0947, \\u0936\\u094D\\u0930\\u0935\\u0923 \\u092F\\u0902\\u0924\\u094D\\u0930, \\u091A\\u0936\\u094D\\u092E\\u093E, \\u0918\\u0921\\u093C\\u0940)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0926\\u0947\\u0916\\u092D\\u093E\\u0932\\u0915\\u0930\\u094D\\u0924\\u093E \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u094B \\u092C\\u0948\\u0920\\u093E\\u090F\\u0901: \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u094B \\u0905\\u092A\\u0928\\u0947 \\u0938\\u093E\\u092E\\u0928\\u0947 \\u0910\\u0938\\u0940 \\u091C\\u0917\\u0939 \\u092A\\u0930 \\u092C\\u0948\\u0920\\u093E\\u090F\\u0901 \\u091C\\u0939\\u093E\\u0901 \\u0935\\u0947 \\u0906\\u092A\\u0915\\u094B \\u0938\\u094D\\u092A\\u0937\\u094D\\u091F \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0926\\u0947\\u0916 \\u0914\\u0930 \\u0938\\u0941\\u0928 \\u0938\\u0915\\u0947\\u0902\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u092A\\u0922\\u093C\\u0947\\u0902: \\u092A\\u094D\\u0930\\u0924\\u094D\\u092F\\u0947\\u0915 \\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u0915\\u094B \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u0947 \\u0932\\u093F\\u090F \\u091C\\u093C\\u094B\\u0930 \\u0938\\u0947 \\u092A\\u0922\\u093C\\u0947\\u0902\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0909\\u0924\\u094D\\u0924\\u0930 \\u091A\\u093F\\u0939\\u094D\\u0928\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902: \\u092F\\u0926\\u093F \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0938\\u0939\\u0940 \\u0909\\u0924\\u094D\\u0924\\u0930 \\u0926\\u0947\\u0924\\u093E \\u0939\\u0948 \\u0924\\u094B \\u091A\\u0947\\u0915\\u092C\\u0949\\u0915\\u094D\\u0938 \\u092A\\u0930 \\u0928\\u093F\\u0936\\u093E\\u0928 \\u0932\\u0917\\u093E\\u090F\\u0901\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0905\\u0917\\u0932\\u0947 \\u092A\\u0930 \\u091C\\u093E\\u090F\\u0902: \\u0939\\u0930 \\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u0915\\u0947 \\u092C\\u093E\\u0926 \\\"\\u0905\\u0917\\u0932\\u093E\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), \"\\u0915\\u094D\\u092F\\u093E \\u0906\\u092A \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0924\\u0948\\u092F\\u093E\\u0930 \\u0939\\u0948\\u0902?\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Online MMSE Test: Preparation & Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), \"Welcome! Before starting the test, please ensure the following:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A caregiver is present to administer the test.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A blank paper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A pen or pencil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Any necessary aids (e.g., hearing aids, glasses, clock)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Instructions for the Caregiver:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 65\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Seat the Patient: Position the patient across from you, where they can see and hear you clearly.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Read Aloud: Read each question out loud to the patient.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Mark Responses: Check the box if the patient answers correctly.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Progress: Click \\\"Next\\\" after each question.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), \"Are you ready to begin?\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === 'hindi' ? 'यदि आप \"स्वीकार करें\" पर क्लिक करते हैं, तो आप परीक्षण में भाग लेने के लिए सहमत हैं।' : 'By clicking \"Accept,\" you agree to participate in the test.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accept-button\",\n            onClick: onAccept,\n            children: language === 'hindi' ? 'स्वीकार करें' : 'Accept'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deny-button\",\n            onClick: onDeny,\n            style: {\n              marginLeft: '10px'\n            },\n            children: language === 'hindi' ? 'अस्वीकार करें' : 'Deny'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 9\n    }, this);\n    const MultipleChoiceTask = ({\n      task,\n      language,\n      setTestCompleted,\n      currentQuestionIndex,\n      setCurrentQuestionIndex,\n      allSelectedAnswers,\n      setAllSelectedAnswers\n    }) => {\n      _s3();\n      const {\n        state\n      } = useLocation();\n      const handleNext = () => {\n        if (currentQuestionIndex < task.questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n        }\n      };\n      const handlePrevious = () => {\n        if (currentQuestionIndex > 0) {\n          setCurrentQuestionIndex(currentQuestionIndex - 1);\n        }\n      };\n      const handleAnswerSelect = choiceIndex => {\n        setAllSelectedAnswers(prevSelected => {\n          const updatedAnswers = {\n            ...prevSelected\n          };\n\n          // Initialize array for current question if it doesn't exist\n          if (!updatedAnswers[currentQuestionIndex]) {\n            updatedAnswers[currentQuestionIndex] = [];\n          }\n          const currentAnswers = updatedAnswers[currentQuestionIndex];\n\n          // Toggle selection\n          const index = currentAnswers.indexOf(choiceIndex);\n          if (index === -1) {\n            // Add the choice if not already selected\n            updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n          } else {\n            // Remove the choice if already selected\n            updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n          }\n          return updatedAnswers;\n        });\n      };\n      const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n      const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"multiple-choice-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: 'center',\n            marginBottom: '5px'\n          },\n          children: task.questions[currentQuestionIndex].question[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), currentQuestionIndex === 11 ?\n        /*#__PURE__*/\n        // Special rendering for question at index 11 (if needed)\n        _jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/pentagon.png\",\n            alt: \"Shape for copying\",\n            style: {\n              maxWidth: '45%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              marginTop: '10px'\n            },\n            children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                textAlign: 'center',\n                margin: '5px 0',\n                width: '200px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: currentSelections.includes(index),\n                onChange: () => handleAnswerSelect(index),\n                style: {\n                  marginRight: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 19\n              }, this), choice[language]]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // Default rendering for other questions\n        _jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '30vh',\n            marginTop: '10px'\n          },\n          children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              textAlign: 'center',\n              margin: '5px 0',\n              width: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: currentSelections.includes(index),\n              onChange: () => handleAnswerSelect(index),\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 19\n            }, this), choice[language]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-container\",\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navigation-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrevious,\n              disabled: currentQuestionIndex === 0,\n              style: {\n                marginRight: '10px'\n              },\n              children: language === 'hindi' ? 'पिछला' : 'Previous'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNext,\n              disabled: currentQuestionIndex === task.questions.length - 1,\n              children: language === 'hindi' ? 'अगला' : 'Next'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selected-counter\",\n            style: {\n              marginRight: '20px'\n            },\n            children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-number-navigation\",\n          style: {\n            marginTop: '10px',\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap'\n          },\n          children: task.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCurrentQuestionIndex(index);\n            },\n            style: {\n              margin: '5px',\n              padding: '10px',\n              backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n              color: index === currentQuestionIndex ? '#fff' : '#000',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: async () => {\n              const finalScore = Object.values(allSelectedAnswers).reduce((total, selections) => total + (selections ? selections.length : 0), 0);\n              console.log('Final MMSE score:', finalScore);\n              const formData = new FormData();\n              formData.append('name', state.name);\n              formData.append('age', state.age);\n              formData.append('patientId', state.patientId);\n              formData.append('score', finalScore.toString());\n              try {\n                console.log('Sending MMSE score to server:', finalScore);\n                const response = await fetch('http://localhost:5001/save', {\n                  method: 'POST',\n                  body: formData\n                });\n                if (!response.ok) {\n                  throw new Error('Failed to save MMSE score');\n                }\n                console.log('MMSE score saved successfully');\n                setTestCompleted(true);\n              } catch (error) {\n                console.error('Error saving MMSE score:', error);\n                alert('Failed to save test score. Please try again.');\n              }\n            },\n            style: {\n              padding: '10px 20px',\n              backgroundColor: '#28a745',\n              color: '#fff',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: language === 'hindi' ? 'जमा करें' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this);\n    };\n    _s3(MultipleChoiceTask, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n      return [useLocation];\n    });\n    const TaskContent = ({\n      task,\n      language,\n      testCompleted,\n      showInitialInstructions,\n      setShowInitialInstructions,\n      setTestCompleted,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n      setIsPatient,\n      currentQuestionIndex,\n      setCurrentQuestionIndex\n    }) => {\n      if (task.id === 2) {\n        if (testCompleted) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full flex justify-center items-center\",\n            children: /*#__PURE__*/_jsxDEV(TaskCompletion, {\n              language: language,\n              allSelectedAnswers: allSelectedAnswers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this);\n        }\n        // If initial instructions are to be shown\n        if (showInitialInstructions) {\n          return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n            onAccept: () => setShowInitialInstructions(false),\n            onDeny: () => {\n              setShowInitialInstructions(false);\n              setTestCompleted(true);\n            },\n            setIsPatient: setIsPatient // Pass it here\n            ,\n            language: language\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this);\n        }\n\n        // Render the MultipleChoiceTask\n        return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n          task: task,\n          language: language,\n          setTestCompleted: setTestCompleted,\n          allSelectedAnswers: allSelectedAnswers,\n          setAllSelectedAnswers: setAllSelectedAnswers,\n          currentQuestionIndex: currentQuestionIndex,\n          setCurrentQuestionIndex: setCurrentQuestionIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-content\",\n        children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'left',\n              marginBottom: '5px',\n              fontSize: '14px',\n              color: '#666',\n              cursor: 'pointer'\n            },\n            children: [language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.image,\n            alt: \"Task\",\n            style: {\n              cursor: 'pointer',\n              maxWidth: '100%',\n              maxHeight: '100%'\n            },\n            onClick: () => setShowImageModal(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 15\n          }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-modal\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: task.image,\n              alt: \"Popup Task\",\n              style: {\n                maxWidth: '90%',\n                maxHeight: '90%',\n                objectFit: 'contain'\n              },\n              onClick: () => setShowImageModal(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            width: '60%',\n            margin: '0 auto',\n            lineHeight: '1.8',\n            fontSize: '1.1em'\n          },\n          children: task.paragraph[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 9\n      }, this);\n    };\n    const InitialPopup = ({\n      language,\n      setLanguage,\n      onClose\n    }) => {\n      _s4();\n      const audioRef = useRef(null);\n      useEffect(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n        }\n      }, [language]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-popup-overlay\",\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'white',\n          zIndex: 1000,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: language === 'english' ? '/audio/question_14_hi_merged.mp3' : '/audio/question_14_hi_merged.mp3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"initial-popup-content\",\n          style: {\n            maxWidth: '600px',\n            width: '90%',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: language === 'english' ? 'Welcome to the Dementia Test!' : 'डिमेंशिया टेस्ट में आपका स्वागत है!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 943,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '10px',\n              fontSize: '1.2em',\n              color: '#555'\n            },\n            children: language === 'english' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"This test includes three parts:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Paragraph Reading\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }, this), \" (1 min)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 61\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Picture Interpretation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this), \" (1 min)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 66\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"MMSE online test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 19\n              }, this), \" (~15 min, requires a caregiver if available)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 956,\n                columnNumber: 25\n              }, this), \"Please ensure you're in a quiet space with audio and video recording permissions enabled.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 25\n              }, this), \"Please Choose the language for the test\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"\\u092F\\u0939 \\u091F\\u0947\\u0938\\u094D\\u091F \\u0924\\u0940\\u0928 \\u092D\\u093E\\u0917\\u094B\\u0902 \\u092E\\u0947\\u0902 \\u0939\\u0948:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u092A\\u0948\\u0930\\u093E\\u0917\\u094D\\u0930\\u093E\\u092B \\u092A\\u0922\\u093C\\u0928\\u093E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 19\n              }, this), \" (1 \\u092E\\u093F\\u0928\\u091F)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\u091A\\u093F\\u0924\\u094D\\u0930 \\u0935\\u094D\\u092F\\u093E\\u0916\\u094D\\u092F\\u093E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 19\n              }, this), \" (1 \\u092E\\u093F\\u0928\\u091F)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"MMSE \\u0911\\u0928\\u0932\\u093E\\u0907\\u0928 \\u091F\\u0947\\u0938\\u094D\\u091F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 967,\n                columnNumber: 19\n              }, this), \" (~15 \\u092E\\u093F\\u0928\\u091F, \\u0915\\u0947\\u092F\\u0930\\u0917\\u093F\\u0935\\u0930 \\u0909\\u092A\\u0932\\u092C\\u094D\\u0927 \\u0939\\u094B \\u0924\\u094B)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 25\n              }, this), \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902 \\u0915\\u093F \\u0906\\u092A \\u0936\\u093E\\u0902\\u0924 \\u0938\\u094D\\u0925\\u093E\\u0928 \\u092E\\u0947\\u0902 \\u0939\\u0948\\u0902 \\u0914\\u0930 \\u0911\\u0921\\u093F\\u092F\\u094B-\\u0935\\u0940\\u0921\\u093F\\u092F\\u094B \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0905\\u0928\\u0941\\u092E\\u0924\\u093F \\u0938\\u0915\\u094D\\u0937\\u092E \\u0939\\u0948\\u0964\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 25\n              }, this), \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u092A\\u0930\\u0940\\u0915\\u094D\\u0937\\u0923 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u092D\\u093E\\u0937\\u093E \\u091A\\u0941\\u0928\\u0947\\u0902\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"language-selection\",\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setLanguage('english'),\n              className: `language-button ${language === 'english' ? 'active' : ''}`,\n              style: {\n                marginRight: '10px',\n                padding: '10px 20px'\n              },\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setLanguage('hindi'),\n              className: `language-button ${language === 'hindi' ? 'active' : ''}`,\n              style: {\n                padding: '10px 20px'\n              },\n              children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 982,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClose,\n            className: \"begin-test-button\",\n            style: {\n              marginTop: '20px',\n              padding: '10px 20px'\n            },\n            children: language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 9\n      }, this);\n    };\n    _s4(InitialPopup, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          backgroundColor: 'white',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          zIndex: 1000,\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          border: '1px solid #ddd'\n        },\n        children: [\"Patient ID: \", state.patientId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 9\n      }, this), showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n        language: language,\n        setLanguage: setLanguage,\n        onClose: () => setShowInitialPopup(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n          onClose: () => setShowModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tabs\",\n            children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`,\n              onClick: () => handleTabClick(task.id),\n              style: {\n                cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n                opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n                backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n              },\n              children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '5px',\n                  color: 'green'\n                },\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 23\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            children: [/*#__PURE__*/_jsxDEV(TaskContent, {\n              task: tasks[selectedTab],\n              language: language,\n              testCompleted: testCompleted,\n              showInitialInstructions: showInitialInstructions,\n              setShowInitialInstructions: setShowInitialInstructions,\n              setTestCompleted: setTestCompleted,\n              allSelectedAnswers: allSelectedAnswers,\n              setAllSelectedAnswers: setAllSelectedAnswers,\n              currentQuestionIndex: currentQuestionIndex,\n              setCurrentQuestionIndex: setCurrentQuestionIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1063,\n              columnNumber: 15\n            }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              className: \"media-form\",\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                gap: '15px',\n                marginTop: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-controls\",\n                children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"media-playback\",\n                  children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                    src: mediaURL,\n                    controls: true,\n                    style: {\n                      maxWidth: '350px',\n                      // Set maximum width\n                      width: '100%',\n                      // Responsive width\n                      height: 'auto',\n                      // Maintain aspect ratio\n                      marginBottom: '10px' // Add some spacing\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1093,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                    src: mediaURL,\n                    controls: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1104,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: handleReRecord,\n                    className: \"custom-button\",\n                    children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1106,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1091,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recording-controls\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      textAlign: 'center',\n                      marginTop: '10px'\n                    },\n                    children: isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Time remaining: \", countdown, \"s\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1117,\n                      columnNumber: 43\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1116,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: handleMediaRecord,\n                    className: \"custom-button\",\n                    style: {\n                      marginBottom: '10px',\n                      padding: '8px 12px',\n                      backgroundColor: '#007bff',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer'\n                    },\n                    children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1119,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1115,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1089,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: !mediaURL || isSubmitting,\n                className: \"custom-button\",\n                style: {\n                  opacity: !mediaURL || isSubmitting ? 0.6 : 1\n                },\n                children: language === 'hindi' ? 'जमा करें' : 'Submit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1147,\n                columnNumber: 19\n              }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tick\",\n                children: \"\\u2714\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1158,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1078,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: language === 'hindi' ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?' : 'Refreshing the page will remove all current entries. Do you want to continue?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRefreshCancel,\n                className: \"cancel-button\",\n                children: language === 'hindi' ? 'रद्द करें' : 'Cancel'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1175,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRefreshConfirm,\n                className: \"confirm-button\",\n                children: language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1174,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 5\n    }, this);\n  };\n  _s5(InitialInstructions, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n}\n_s6(FileUploadForm, \"lO1lCLbP6nI4snqbpLjen/+YkzM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s6","_s","$RefreshSig$","_s2","_s5","isSubmitting","setIsSubmitting","state","navigate","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","countdown","setCountdown","completedTasks","setCompletedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","audioBlob","setAudioBlob","videoBlob","setVideoBlob","showRefreshWarning","setShowRefreshWarning","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","patientId","name","age","setItem","stringify","clearDataOnRefresh","clear","window","addEventListener","removeEventListener","blockRefresh","e","preventDefault","stopPropagation","returnValue","blockKeyboardRefresh","metaKey","key","ctrlKey","blockContextMenu","handleRefreshConfirm","location","reload","handleRefreshCancel","TaskCompletion","audioRef","current","play","calculateScore","totalScore","console","log","Object","keys","length","entries","forEach","questionIndex","selections","score","maxScore","handleExit","href","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginTop","padding","backgroundColor","color","border","borderRadius","cursor","fontSize","transition","onMouseOver","target","onMouseOut","handleTabClick","id","has","currentTaskIndex","stop","stream","getTracks","track","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","mediaRecorder","MediaRecorder","start","countdownInterval","setInterval","prev","clearInterval","event","data","size","push","mediaBlob","Blob","type","url","URL","createObjectURL","catch","err","error","alert","handleReRecord","values","handleSubmit","formData","FormData","append","scoreToSend","calculatedScore","toString","pair","currentBlob","response","fetch","method","body","ok","errorData","json","Error","result","setTimeout","nextTab","message","InstructionModal","onClose","InitialInstructions","onAccept","onDeny","setIsPatient","_s3","_s4","marginLeft","MultipleChoiceTask","task","handleNext","questions","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","totalSelectedCount","reduce","total","currentSelections","textAlign","marginBottom","question","alt","maxWidth","height","display","flexDirection","alignItems","choices","map","choice","margin","width","checked","includes","onChange","marginRight","justifyContent","minHeight","disabled","flexWrap","q","finalScore","TaskContent","image","maxHeight","objectFit","lineHeight","paragraph","InitialPopup","position","top","left","zIndex","right","boxShadow","fontFamily","opacity","undefined","title","onSubmit","gap","controls","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["  import React, { useState, useRef, useEffect} from 'react';\n  import { useLocation, useNavigate } from 'react-router-dom'; // Add useNavigate here\n  import tasks from './data/tasks';\n  import './App.css';\n\n  function FileUploadForm() {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const { state } = useLocation();\n    const navigate = useNavigate();\n    const [showModal, setShowModal] = useState(true);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [language, setLanguage] = useState('english');\n    const [isRecording, setIsRecording] = useState(false);\n    const [mediaURL, setMediaURL] = useState(\"\");\n    const [showTick, setShowTick] = useState(false);\n    const mediaRecorderRef = useRef(null);\n    const mediaChunksRef = useRef([]);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [showInitialPopup, setShowInitialPopup] = useState(true);\n    const [countdown, setCountdown] = useState(60);\n    const [completedTasks, setCompletedTasks] = useState(new Set());\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n    const [testCompleted, setTestCompleted] = useState(false);\n    const [audioBlob, setAudioBlob] = useState(null);\n    const [videoBlob, setVideoBlob] = useState(null);\n    const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n    const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n      const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n      return savedData ? JSON.parse(savedData) : {};\n    });\n\n\n\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  useEffect(() => {\n      sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n        sessionStorage.clear();\n    };\n\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n\n    return () => {\n        window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n    };\n  }, []);\n\n  useEffect(() => {\n    const blockRefresh = (e) => {\n      if (!showInitialPopup) { // If test has started\n        e.preventDefault();\n        e.stopPropagation();\n        \n        // For older browsers\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n        e.returnValue = '';\n        // Can also show a message if needed\n        return \"Test is in progress. Refresh is disabled.\";\n      }\n    };\n\n    const blockKeyboardRefresh = (e) => {\n      if (!showInitialPopup) { // If test has started\n        if (\n          (e.metaKey && e.key === 'r') || // Cmd + R (macOS)\n          (e.ctrlKey && e.key === 'r') || // Ctrl + R (Windows/Linux)\n          e.key === 'F5'                  // F5 (all platforms)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        }\n      }\n    };\n\n    // Block context menu to prevent refresh\n    const blockContextMenu = (e) => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n      }\n    };\n\n    // Add all event listeners\n    window.addEventListener('beforeunload', blockRefresh);\n    window.addEventListener('keydown', blockKeyboardRefresh);\n    window.addEventListener('contextmenu', blockContextMenu);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('beforeunload', blockRefresh);\n      window.removeEventListener('keydown', blockKeyboardRefresh);\n      window.removeEventListener('contextmenu', blockContextMenu);\n    };\n  }, [showInitialPopup]);\n\n    const handleRefreshConfirm = () => {\n      setShowRefreshWarning(false);\n      window.location.reload(); // Perform manual refresh\n    };\n    \n    const handleRefreshCancel = () => {\n      setShowRefreshWarning(false);\n    };\n    \n\n    const TaskCompletion = ({ language }) => {\n      const audioRef = useRef(null);\n      \n      useEffect(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n        }\n      }, []);\n    \n      const calculateScore = () => {\n        let totalScore = 0;\n        console.log('Calculating score. allSelectedAnswers:', allSelectedAnswers);\n        \n        if (Object.keys(allSelectedAnswers).length === 0) {\n          console.log('No answers selected, returning 0');\n          return 0;\n        }\n      \n        Object.entries(allSelectedAnswers).forEach(([questionIndex, selections]) => {\n          if (selections && selections.length > 0) {\n            console.log(`Question ${questionIndex}: adding ${selections.length} points`);\n            totalScore += selections.length;\n          }\n        });\n        \n        console.log('Final calculated score:', totalScore);\n        return totalScore;\n      };\n    \n      const score = calculateScore();\n      const maxScore = 30;\n      \n      const handleExit = () => {\n        sessionStorage.clear()\n        window.location.href = '/';\n      };\n    \n      return (\n        <div className=\"flex flex-col items-center justify-center min-h-screen p-8 bg-white max-w-2xl mx-auto\">\n          <audio\n            ref={audioRef}\n            src={language === 'english' ? '/audio/thankyou_en.mp3' : '/audio/thankyou_hi.mp3'}\n          />\n          <div className=\"text-center w-full\">\n            <h2 className=\"text-3xl font-bold mb-8 text-gray-800\">\n              {language === 'hindi' ? 'धन्यवाद!' : 'Thank You!'}\n            </h2>\n          {/* Score Display */}\n              <div className=\"bg-blue-50 p-6 rounded-lg shadow-sm mb-8\">\n                <h3 className=\"text-xl font-semibold mb-2\">\n                  {language === 'hindi' ? 'आपका स्कोर' : 'Your Score'}\n                </h3>\n                <div className=\"text-4xl font-bold text-blue-600\">\n                  {score} / {maxScore}\n                </div>\n              </div>\n                <div className=\"space-y-4\">\n                  <p className=\"text-lg\">\n                    {language === 'hindi' \n                      ? 'आपका परीक्षण पूरा हो गया है। परिणाम आपके स्वास्थ्य देखभाल प्रदाता द्वारा साझा किए जाएंगे।'\n                      : 'Your test has been completed. The results will be shared by your healthcare provider.'}\n                  </p>\n                  <p className=\"text-base text-gray-600\">\n                    {language === 'hindi'\n                      ? 'कृपया अपने स्वास्थ्य देखभाल प्रदाता से संपर्क करें।'\n                      : 'Please contact your healthcare provider for follow-up.'}\n                  </p>\n                  \n                  {/* Add Exit Button */}\n                  <button\n                    onClick={handleExit}\n                    style={{\n                      marginTop: '2rem',\n                      padding: '10px 20px',\n                      backgroundColor: '#007bff',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '1rem',\n                      transition: 'background-color 0.2s'\n                    }}\n                    onMouseOver={(e) => e.target.style.backgroundColor = '#0056b3'}\n                    onMouseOut={(e) => e.target.style.backgroundColor = '#007bff'}\n                  >\n                    {language === 'hindi' ? 'बाहर निकलें' : 'Exit'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          );\n        };\n\n    const handleTabClick = (id) => {\n      // Prevent navigation to completed tasks\n      if (completedTasks.has(id)) {\n        return;\n      }\n\n      // Prevent going back to previous tasks\n      const currentTaskIndex = selectedTab;\n      if (id < currentTaskIndex) {\n        return;\n      }\n\n      setCountdown(60);\n      setMediaURL(\"\");\n      mediaChunksRef.current = [];\n    \n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    \n      setSelectedTab(id);\n      setShowModal(id !== 2);\n    \n      if (id === 2) {\n        setShowInitialInstructions(true);\n      } else {\n        setShowInitialInstructions(false);\n      }\n    };   \n    \n\n\n    // const toggleLanguage = (e) => {\n    //   e.preventDefault();\n    //   setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n    // };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 \n      ? { video: true, audio: true }  // Video with audio\n      : { audio: true };              // Audio only\n\n    if (!isRecording) {\n      // Clear previous recording data when starting new recording\n      setMediaURL(\"\");\n      setCountdown(60); // Reset the countdown\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n\n      console.log('Starting media recording for:', selectedTab === 1 ? 'video' : 'audio');\n\n      navigator.mediaDevices.getUserMedia(mediaType)\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaChunksRef.current = [];\n\n          mediaRecorder.start();\n          setIsRecording(true);\n          console.log('MediaRecorder started');\n\n          const countdownInterval = setInterval(() => {\n            setCountdown((prev) => {\n              if (prev <= 1) {\n                clearInterval(countdownInterval);\n                // Automatically stop recording when countdown reaches 0\n                if (mediaRecorder.state === \"recording\") {\n                  console.log('Stopping recording due to countdown');\n                  mediaRecorder.stop();\n                  stream.getTracks().forEach(track => track.stop());\n                  setIsRecording(false);\n                }\n                return 0;\n              }\n              return prev - 1;\n            });\n          }, 1000);\n\n          mediaRecorder.countdownInterval = countdownInterval;\n\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            if (event.data.size > 0) {\n              mediaChunksRef.current.push(event.data);\n              console.log('Data chunk received:', event.data.size, 'bytes');\n            }\n          });\n\n          mediaRecorder.addEventListener('stop', () => {\n            const mediaBlob = new Blob(mediaChunksRef.current, {\n              type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n            });\n            console.log('Created media blob:', {\n              type: mediaBlob.type,\n              size: mediaBlob.size\n            });\n\n            const url = URL.createObjectURL(mediaBlob);\n            setMediaURL(url);\n\n            if (selectedTab === 1) {\n              setVideoBlob(mediaBlob);\n              console.log('Video blob set:', mediaBlob);\n            } else {\n              setAudioBlob(mediaBlob);\n              console.log('Audio blob set:', mediaBlob);\n            }\n\n            setIsRecording(false);\n            mediaChunksRef.current = [];\n            clearInterval(mediaRecorder.countdownInterval);\n          });\n        })\n        .catch((err) => {\n          console.error('Error accessing media:', err);\n          setIsRecording(false);\n          alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n        });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n        console.log('Recording stopped manually');\n      }\n    }\n  }; \n\n    const handleReRecord = () => {\n      // Clear the current recording\n      setMediaURL(\"\");\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n      \n      // Clear media chunks\n      mediaChunksRef.current = [];\n      \n      // Stop any existing streams\n      if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n      \n      // Start new recording\n      handleMediaRecord();\n    };\n    \n\n    // Inside the handleSubmit function in FileUploadForm.js, update it as follows:\n\n    const calculateScore = () => {\n      let totalScore = 0;\n      // Iterate through all questions\n      Object.values(allSelectedAnswers).forEach((selections) => {\n          // Each correct selection adds 1 point\n          if (selections && selections.length > 0) {\n              totalScore += selections.length;\n          }\n      });\n      return totalScore;\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) {\n        console.log('Already submitting, returning');\n        return;\n    }\n    \n    console.log('Starting submission for tab:', selectedTab);\n    setIsSubmitting(true);\n    \n    try {\n        if (!state?.patientId || !state?.name || !state?.age) {\n            alert('Patient information is missing. Please start over.');\n            navigate('/');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('name', state.name);\n        formData.append('age', state.age);\n        formData.append('patientId', state.patientId);\n        \n        // Initialize score as 0\n        let scoreToSend = '0';\n        \n        // Only calculate score for MMSE test (tab 2)\n        if (selectedTab === 2) {\n            const calculatedScore = calculateScore();\n            console.log('Tab 2: Calculated score:', calculatedScore);\n            scoreToSend = calculatedScore.toString();\n        } else {\n            console.log(`Tab ${selectedTab}: Using default score: 0`);\n        }\n        \n        console.log('Setting score in formData:', scoreToSend);\n        formData.append('score', scoreToSend);\n\n        // Log all form data being sent\n        console.log('Form data contents:');\n        for (let pair of formData.entries()) {\n            console.log(`${pair[0]}: ${pair[1]}`);\n        }\n\n        const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n        if (!currentBlob) {\n            alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n            setIsSubmitting(false);\n            return;\n        }\n\n        if (selectedTab === 1) {\n            formData.append('video', currentBlob, 'video.webm');\n        } else if (selectedTab === 0) {\n            formData.append('audio', currentBlob, 'audio.webm');\n        }\n\n        console.log('Sending request to server...');\n        const response = await fetch('http://localhost:5001/save', {\n            method: 'POST',\n            body: formData,\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error || 'Upload failed');\n        }\n\n        const result = await response.json();\n        console.log('Server response:', result);\n\n        setShowTick(true);\n        setTimeout(() => {\n            setShowTick(false);\n            setCompletedTasks((prev) => new Set([...prev, selectedTab]));\n            const nextTab = selectedTab + 1;\n            if (nextTab < tasks.length) {\n                handleTabClick(nextTab);\n            }\n        }, 1000);\n\n        setMediaURL('');\n        if (selectedTab === 1) {\n            setVideoBlob(null);\n        } else {\n            setAudioBlob(null);\n        }\n    } catch (error) {\n        console.error('Submission error:', error);\n        alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n        setIsSubmitting(false);\n    }\n};\n\n    // Instruction Modal Component\n    const InstructionModal = ({ onClose }) => {\n  const audioRef = useRef(null);\n  \n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [language]);\n\n  return (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <audio\n          ref={audioRef}\n          src={selectedTab === 0 \n            ? (language === 'english' ? '/audio/task1_en.mp3' : '/audio/task1_hi.mp3')\n            : (language === 'english' ? '/audio/task2_en.mp3' : '/audio/task2_hi.mp3')\n          }\n        />\n        <h2>{language === 'hindi' ? 'निर्देश' : 'Instructions'}</h2>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 ? (\n            language === 'hindi' ? (\n              <p>कृपया \"आवाज़ रिकॉर्ड करें\" पर क्लिक करें और जोर से पढ़ें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें।</p>\n            ) : (\n              <p>Please click \"Record Voice\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save.</p>\n            )\n          ) : (\n            language === 'hindi' ? (\n              <p>कृपया \"वीडियो रिकॉर्ड करें\" पर क्लिक करें और चित्र का वर्णन करें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें। ज़ूम इन के लिए, कृपया चित्र पर क्लिक करें।</p>\n            ) : (\n              <p>Please click \"Record Video\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save. To zoom in, please click on the picture.</p>\n            )\n          )}\n        </p>\n        <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n      </div>\n    </div>\n  );\n};\n\n    // Initial Instructions Component for the third task\n    const InitialInstructions = ({ onAccept, onDeny, setIsPatient, language }) => {\n      const audioRef = useRef(null);\n      \n      useEffect(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n        }\n      }, [language]);\n    \n      return (\n        <div className=\"initial-instructions-overlay\">\n          <div className=\"initial-instructions-content\">\n            <audio\n              ref={audioRef}\n              src={language === 'english' ? '/audio/mmse_en.mp3' : '/audio/mmse_hi.mp3'}\n            />\n            <h2>{language === 'hindi' ? 'ऑनलाइन MMSE परीक्षण में आपका स्वागत है' : 'Welcome to the Online MMSE Test'}</h2>\n          <p>\n            {language === 'hindi' ? (\n              <>\n                <strong>ऑनलाइन MMSE टेस्ट: तैयारी और निर्देश</strong><br/>\n                <br/>\n                स्वागत है! टेस्ट शुरू करने से पहले कृपया निम्नलिखित सुनिश्चित करें:\n                <ul>\n                  <li>एक देखभालकर्ता (Caregiver) की उपस्थिति आवश्यक है, जो टेस्ट ले सके।</li>\n                  <li>एक खाली कागज</li>\n                  <li>एक पेन या पेंसिल</li>\n                  <li>आवश्यक सहायक उपकरण (जैसे, श्रवण यंत्र, चश्मा, घड़ी)</li>\n                </ul>\n                <br/>\n                <strong>देखभालकर्ता के लिए निर्देश:</strong><br/>\n                <ul>\n                  <li>व्यक्ति को बैठाएँ: व्यक्ति को अपने सामने ऐसी जगह पर बैठाएँ जहाँ वे आपको स्पष्ट रूप से देख और सुन सकें।</li>\n                  <li>प्रश्न पढ़ें: प्रत्येक प्रश्न को व्यक्ति के लिए ज़ोर से पढ़ें।</li>\n                  <li>उत्तर चिह्नित करें: यदि व्यक्ति सही उत्तर देता है तो चेकबॉक्स पर निशान लगाएँ।</li>\n                  <li>अगले पर जाएं: हर प्रश्न के बाद \"अगला\" पर क्लिक करें।</li>\n                </ul>\n                <br/>\n                क्या आप शुरू करने के लिए तैयार हैं?\n              </>\n            ) : (\n              <>\n                <strong>Online MMSE Test: Preparation & Instructions</strong><br/>\n                <br/>\n                Welcome! Before starting the test, please ensure the following:\n                <ul>\n                  <li>A caregiver is present to administer the test.</li>\n                  <li>A blank paper</li>\n                  <li>A pen or pencil</li>\n                  <li>Any necessary aids (e.g., hearing aids, glasses, clock)</li>\n                </ul>\n                <br/>\n                <strong>Instructions for the Caregiver:</strong><br/>\n                <ul>\n                  <li>Seat the Patient: Position the patient across from you, where they can see and hear you clearly.</li>\n                  <li>Read Aloud: Read each question out loud to the patient.</li>\n                  <li>Mark Responses: Check the box if the patient answers correctly.</li>\n                  <li>Progress: Click \"Next\" after each question.</li>\n                </ul>\n                <br/>\n                Are you ready to begin?\n              </>\n            )}\n          </p>\n    \n          <p>{language === 'hindi' ? 'यदि आप \"स्वीकार करें\" पर क्लिक करते हैं, तो आप परीक्षण में भाग लेने के लिए सहमत हैं।' : 'By clicking \"Accept,\" you agree to participate in the test.'}</p>\n          <div style={{ marginTop: '20px' }}>\n            <button className=\"accept-button\" onClick={onAccept}>\n              {language === 'hindi' ? 'स्वीकार करें' : 'Accept'}\n            </button>\n            <button className=\"deny-button\" onClick={onDeny} style={{ marginLeft: '10px' }}>\n              {language === 'hindi' ? 'अस्वीकार करें' : 'Deny'}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n\n    const MultipleChoiceTask = ({\n      task,\n      language,\n      setTestCompleted,\n      currentQuestionIndex,\n      setCurrentQuestionIndex,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n    }) => {\n      const { state } = useLocation();\n      const handleNext = () => {\n        if (currentQuestionIndex < task.questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n        }\n      };\n    \n      const handlePrevious = () => {\n        if (currentQuestionIndex > 0) {\n          setCurrentQuestionIndex(currentQuestionIndex - 1);\n        }\n      };\n    \n      const handleAnswerSelect = (choiceIndex) => {\n        setAllSelectedAnswers((prevSelected) => {\n          const updatedAnswers = { ...prevSelected };\n          \n          // Initialize array for current question if it doesn't exist\n          if (!updatedAnswers[currentQuestionIndex]) {\n            updatedAnswers[currentQuestionIndex] = [];\n          }\n          \n          const currentAnswers = updatedAnswers[currentQuestionIndex];\n          \n          // Toggle selection\n          const index = currentAnswers.indexOf(choiceIndex);\n          if (index === -1) {\n            // Add the choice if not already selected\n            updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n          } else {\n            // Remove the choice if already selected\n            updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n              (idx) => idx !== choiceIndex\n            );\n          }\n          \n          return updatedAnswers;\n        });\n      };\n    \n      const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n        (total, selections) => total + selections.length,\n        0\n      );\n    \n      const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n      \n      return (\n        <div className=\"multiple-choice-task\">\n          <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n            {task.questions[currentQuestionIndex].question[language]}\n          </h3>\n\n          {/* Render the current question and choices */}\n          {currentQuestionIndex === 11 ? (\n            // Special rendering for question at index 11 (if needed)\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\n              <img src=\"/pentagon.png\" alt=\"Shape for copying\" style={{ maxWidth: '45%', height: 'auto' }} />\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n              {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                <label\n                  key={index}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                    margin: '5px 0',\n                    width: '200px',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={currentSelections.includes(index)}\n                    onChange={() => handleAnswerSelect(index)}\n                    style={{ marginRight: '10px' }}\n                  />\n                  {choice[language]}\n                </label>\n              ))}\n\n              </div>\n            </div>\n          ) : (\n            // Default rendering for other questions\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              minHeight: '30vh',\n              marginTop: '10px'\n            }}>\n              {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                <label\n                  key={index}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                    margin: '5px 0',\n                    width: '200px',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={currentSelections.includes(index)}\n                    onChange={() => handleAnswerSelect(index)}\n                    style={{ marginRight: '10px' }}\n                  />\n                  {choice[language]}\n                </label>\n              ))}\n            </div>\n          )}\n\n          {/* Navigation Buttons and Counter */}\n          <div className=\"navigation-container\" style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px'\n          }}>\n            <div className=\"navigation-buttons\">\n              <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n                {language === 'hindi' ? 'पिछला' : 'Previous'}\n              </button>\n              <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n                {language === 'hindi' ? 'अगला' : 'Next'}\n              </button>\n            </div>\n            <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n              {language === 'hindi'\n                ? `चयनित: ${totalSelectedCount}`\n                : `Score: ${totalSelectedCount}`}\n            </div>\n          </div>\n\n          {/* Question Number Navigation */}\n          <div\n            className=\"question-number-navigation\"\n            style={{\n              marginTop: '10px',\n              display: 'flex',\n              justifyContent: 'center',\n              flexWrap: 'wrap',\n            }}\n          >\n            {task.questions.map((q, index) => (\n              <button\n                key={index}\n                onClick={() => {\n                  setCurrentQuestionIndex(index);\n                }}\n                style={{\n                  margin: '5px',\n                  padding: '10px',\n                  backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n                  color: index === currentQuestionIndex ? '#fff' : '#000',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                }}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n{/* Submit Button */}\n<div style={{ marginTop: '20px', textAlign: 'center' }}>\n            <button\n              onClick={async () => {\n                const finalScore = Object.values(allSelectedAnswers).reduce(\n                  (total, selections) => total + (selections ? selections.length : 0),\n                  0\n                );\n                \n                console.log('Final MMSE score:', finalScore);\n                const formData = new FormData();\n                formData.append('name', state.name);\n                formData.append('age', state.age);\n                formData.append('patientId', state.patientId);\n                formData.append('score', finalScore.toString());\n\n                try {\n                  console.log('Sending MMSE score to server:', finalScore);\n                  const response = await fetch('http://localhost:5001/save', {\n                    method: 'POST',\n                    body: formData,\n                  });\n\n                  if (!response.ok) {\n                    throw new Error('Failed to save MMSE score');\n                  }\n\n                  console.log('MMSE score saved successfully');\n                  setTestCompleted(true);\n                } catch (error) {\n                  console.error('Error saving MMSE score:', error);\n                  alert('Failed to save test score. Please try again.');\n                }\n              }}\n              style={{\n                padding: '10px 20px',\n                backgroundColor: '#28a745',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              {language === 'hindi' ? 'जमा करें' : 'Submit'}\n            </button>\n          </div>\n\n        </div>\n      );\n    };\n\n    const TaskContent = ({\n      task,\n      language,\n      testCompleted,\n      showInitialInstructions,\n      setShowInitialInstructions,\n      setTestCompleted,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n      setIsPatient,\n      currentQuestionIndex,\n      setCurrentQuestionIndex\n    }) => {\n      if (task.id === 2) {\n        if (testCompleted) {\n          return (\n            <div className=\"w-full flex justify-center items-center\">\n              <TaskCompletion \n                language={language}\n                allSelectedAnswers={allSelectedAnswers} \n              />\n            </div>\n          );\n        }\n        // If initial instructions are to be shown\n        if (showInitialInstructions) {\n          return (\n            <InitialInstructions\n              onAccept={() => setShowInitialInstructions(false)}\n              onDeny={() => {\n                setShowInitialInstructions(false);\n                setTestCompleted(true);\n              }}\n              setIsPatient={setIsPatient}  // Pass it here\n              language={language}\n            />\n          );\n        }\n\n        // Render the MultipleChoiceTask\n        return (\n          <MultipleChoiceTask\n            task={task}\n            language={language}\n            setTestCompleted={setTestCompleted}\n            allSelectedAnswers={allSelectedAnswers}\n            setAllSelectedAnswers={setAllSelectedAnswers}\n            currentQuestionIndex={currentQuestionIndex}\n            setCurrentQuestionIndex={setCurrentQuestionIndex}\n          />\n        );      \n      }\n\n      return (\n        <div className=\"task-content\">\n          {task.image ? (\n            <>\n            {/* Added click to enlarge text */}\n          <div style={{ \n            textAlign: 'left', \n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          }}>\n            {language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out'} 🔍\n          </div>\n              <img\n                src={task.image}\n                alt=\"Task\"\n                style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n                onClick={() => setShowImageModal(true)}\n              />\n              {showImageModal && (\n                <div className=\"image-modal\">\n                  <img\n                    src={task.image}\n                    alt=\"Popup Task\"\n                    style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                    onClick={() => setShowImageModal(false)}\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n              {task.paragraph[language]}\n            </p>\n          )}\n        </div>\n      );\n    };\n  \n    const InitialPopup = ({ language, setLanguage, onClose }) => {\n      const audioRef = useRef(null);\n     \n      useEffect(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n        }\n      }, [language]);\n     \n      return (\n        <div className=\"initial-popup-overlay\" \n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n            zIndex: 1000,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <audio\n            ref={audioRef}\n            src={language === 'english' ? '/audio/question_14_hi_merged.mp3' : '/audio/question_14_hi_merged.mp3'}\n          />\n          <div className=\"initial-popup-content\"\n            style={{ maxWidth: '600px', width: '90%', textAlign: 'center' }}>\n            <h2>\n              {language === 'english' \n                ? 'Welcome to the Dementia Test!' \n                : 'डिमेंशिया टेस्ट में आपका स्वागत है!'}\n            </h2>\n            <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n              {language === 'english' ? (\n                <>\n                  This test includes three parts:\n                  <br /><br />\n                  <strong>Paragraph Reading</strong> (1 min)<br />\n                  <strong>Picture Interpretation</strong> (1 min)<br />\n                  <strong>MMSE online test</strong> (~15 min, requires a caregiver if available)\n                  <br /><br />\n                  Please ensure you're in a quiet space with audio and video recording permissions enabled.\n                  <br /><br />\n                  Please Choose the language for the test\n                </>\n              ) : (\n                <>\n                  यह टेस्ट तीन भागों में है:\n                  <br /><br />\n                  <strong>पैराग्राफ पढ़ना</strong> (1 मिनट)<br />\n                  <strong>चित्र व्याख्या</strong> (1 मिनट)<br />\n                  <strong>MMSE ऑनलाइन टेस्ट</strong> (~15 मिनट, केयरगिवर उपलब्ध हो तो)\n                  <br /><br />\n                  कृपया सुनिश्चित करें कि आप शांत स्थान में हैं और ऑडियो-वीडियो रिकॉर्डिंग अनुमति सक्षम है।\n                  <br /><br />\n                  कृपया परीक्षण के लिए भाषा चुनें\n                </>\n              )}\n            </p>\n            <div className=\"language-selection\" style={{ marginTop: '20px' }}>\n              <button\n                onClick={() => setLanguage('english')}\n                className={`language-button ${language === 'english' ? 'active' : ''}`}\n                style={{ marginRight: '10px', padding: '10px 20px' }}>\n                English\n              </button>\n              <button\n                onClick={() => setLanguage('hindi')}\n                className={`language-button ${language === 'hindi' ? 'active' : ''}`}\n                style={{ padding: '10px 20px' }}>\n                हिंदी\n              </button>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"begin-test-button\"\n              style={{ marginTop: '20px', padding: '10px 20px' }}>\n              {language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'}\n            </button>\n          </div>\n        </div>\n      );\n     };\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          backgroundColor: 'white',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          zIndex: 1000,\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          border: '1px solid #ddd'\n        }}>\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {/* Initial Test Setup Modal */}\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {/* Instructions Modal */}\n          {showModal && <InstructionModal onClose={() => setShowModal(false)} />}\n\n          {/* Main Content */}\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                    style={{\n                      cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n                      opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n                      backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n                    }}\n                  >\n                    {task.title[language]}\n                    {completedTasks.has(task.id) && (\n                      <span style={{ marginLeft: '5px', color: 'green' }}>✓</span>\n                    )}\n                  </div>\n                ))}\n            </div>\n\n            {/* Task Content Area */}\n            <div className=\"content\">\n              <TaskContent\n                task={tasks[selectedTab]}\n                language={language}\n                testCompleted={testCompleted}\n                showInitialInstructions={showInitialInstructions}\n                setShowInitialInstructions={setShowInitialInstructions}\n                setTestCompleted={setTestCompleted}\n                allSelectedAnswers={allSelectedAnswers}\n                setAllSelectedAnswers={setAllSelectedAnswers}\n                currentQuestionIndex={currentQuestionIndex}\n                setCurrentQuestionIndex={setCurrentQuestionIndex}\n              />\n\n              {/* Media Recording Form */}\n              {selectedTab !== 2 && (\n                <form\n                  onSubmit={handleSubmit}\n                  className=\"media-form\"\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px',\n                    marginTop: '20px'\n                  }}\n                >\n                  <div className=\"media-controls\">\n                  {mediaURL ? (\n                      <div className=\"media-playback\">\n                        {selectedTab === 1 ? (\n                          <video \n                            src={mediaURL} \n                            controls\n                            style={{\n                              maxWidth: '350px',  // Set maximum width\n                              width: '100%',      // Responsive width\n                              height: 'auto',     // Maintain aspect ratio\n                              marginBottom: '10px' // Add some spacing\n                            }} \n                          />\n                        ) : (\n                          <audio src={mediaURL} controls />\n                        )}\n                        <button \n                          type=\"button\" \n                          onClick={handleReRecord} \n                          className=\"custom-button\"\n                        >\n                          {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"recording-controls\">\n                        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                          {isRecording && <p>Time remaining: {countdown}s</p>}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={handleMediaRecord}\n                          className=\"custom-button\"\n                          style={{\n                            marginBottom: '10px',\n                            padding: '8px 12px',\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer'\n                          }}\n                        >\n                          {isRecording\n                            ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n                            : language === 'hindi'\n                            ? selectedTab === 1\n                              ? 'वीडियो रिकॉर्ड करें'\n                              : 'आवाज़ रिकॉर्ड करें'\n                            : selectedTab === 1\n                            ? 'Record Video'\n                            : 'Record Voice'}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  <button \n                    type=\"submit\" \n                    disabled={!mediaURL || isSubmitting} \n                    className=\"custom-button\"\n                    style={{\n                      opacity: (!mediaURL || isSubmitting) ? 0.6 : 1\n                    }}\n                  >\n                    {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {showTick && <span className=\"tick\">✔</span>}\n                </form>\n              )}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <h2>{language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}</h2>\n                <p>\n                  {language === 'hindi' \n                    ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                    : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n                </p>\n                <div className=\"button-container\">\n                  <button onClick={handleRefreshCancel} className=\"cancel-button\">\n                    {language === 'hindi' ? 'रद्द करें' : 'Cancel'}\n                  </button>\n                  <button onClick={handleRefreshConfirm} className=\"confirm-button\">\n                    {language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n    }\n  }\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}