{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport InstructionModal from './components/InstructionModal';\nimport InitialPopup from './components/InitialPopup';\nimport TaskContent from './components/TaskContent';\nimport tasks from './data/tasks';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGUAGES = {\n  ENGLISH: 'english',\n  HINDI: 'hindi'\n};\nfunction FileUploadForm() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [appState, setAppState] = useState({\n    isPatient: true,\n    language: LANGUAGES.ENGLISH,\n    selectedTab: 0,\n    showModal: true,\n    showInitialPopup: true,\n    testCompleted: false,\n    showRefreshWarning: false\n  });\n  const [recordingState, setRecordingState] = useState({\n    isRecording: false,\n    mediaURL: \"\",\n    countdown: 60,\n    audioBlob: null,\n    videoBlob: null\n  });\n  const [taskState, setTaskState] = useState({\n    completedTasks: new Set(),\n    allSelectedAnswers: JSON.parse(sessionStorage.getItem(\"allSelectedAnswers\")) || {}\n  });\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(taskState.allSelectedAnswers));\n  }, [taskState.allSelectedAnswers]);\n  useEffect(() => {\n    const clearDataOnRefresh = () => sessionStorage.clear();\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n    return () => window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n  }, []);\n  const handleTabClick = id => {\n    if (taskState.completedTasks.has(id) || id < appState.selectedTab) return;\n    setRecordingState(prev => ({\n      ...prev,\n      mediaURL: \"\",\n      countdown: 60,\n      audioBlob: null,\n      videoBlob: null\n    }));\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current) stopRecording();\n    setAppState(prev => ({\n      ...prev,\n      selectedTab: id,\n      showModal: id !== 2\n    }));\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n  const handleMediaRecord = () => {\n    const isVideo = appState.selectedTab === 1;\n    const mediaType = isVideo ? {\n      video: true,\n      audio: true\n    } : {\n      audio: true\n    };\n    if (!recordingState.isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setRecordingState(prev => ({\n          ...prev,\n          isRecording: true\n        }));\n        const stopTimer = setTimeout(stopRecording, 60000);\n        const countdownInterval = setInterval(() => {\n          setRecordingState(prev => ({\n            ...prev,\n            countdown: prev.countdown > 0 ? prev.countdown - 1 : 0\n          }));\n          if (recordingState.countdown <= 1) clearInterval(countdownInterval);\n        }, 1000);\n        mediaRecorder.addEventListener('dataavailable', event => {\n          if (event.data.size > 0) mediaChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: isVideo ? 'video/webm' : 'audio/webm'\n          });\n          setRecordingState(prev => ({\n            ...prev,\n            mediaURL: URL.createObjectURL(mediaBlob),\n            audioBlob: !isVideo ? mediaBlob : null,\n            videoBlob: isVideo ? mediaBlob : null,\n            isRecording: false\n          }));\n        });\n      }).catch(err => {\n        console.error(\"Error accessing media:\", err);\n        alert(`Could not access your ${isVideo ? \"camera\" : \"microphone\"}. Check your browser settings.`);\n      });\n    } else {\n      stopRecording();\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      alert(\"Name and age are required\");\n      return;\n    }\n    const currentBlob = appState.selectedTab === 1 ? recordingState.videoBlob : recordingState.audioBlob;\n    if (!currentBlob) {\n      alert(`Please record ${appState.selectedTab === 1 ? \"video\" : \"audio\"} before submitting.`);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"name\", state.name);\n    formData.append(\"age\", state.age);\n    formData.append(appState.selectedTab === 1 ? \"video\" : \"audio\", currentBlob);\n    try {\n      const response = await fetch(\"http://localhost:5001/save\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n      setTaskState(prev => ({\n        ...prev,\n        completedTasks: new Set([...prev.completedTasks, appState.selectedTab])\n      }));\n      setRecordingState(prev => ({\n        ...prev,\n        mediaURL: \"\"\n      }));\n      handleTabClick(appState.selectedTab + 1);\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(`Upload failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: appState.showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: appState.language,\n      setLanguage: lang => setAppState(prev => ({\n        ...prev,\n        language: lang\n      })),\n      onClose: () => setAppState(prev => ({\n        ...prev,\n        showInitialPopup: false\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [appState.showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setAppState(prev => ({\n          ...prev,\n          showModal: false\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab ${appState.selectedTab === task.id ? \"active\" : \"\"}`,\n          onClick: () => handleTabClick(task.id),\n          children: task.title[appState.language]\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(TaskContent, {\n          task: tasks[appState.selectedTab],\n          language: appState.language,\n          testCompleted: appState.testCompleted,\n          setTestCompleted: value => setAppState(prev => ({\n            ...prev,\n            testCompleted: value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [recordingState.mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [appState.selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n              src: recordingState.mediaURL,\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n              src: recordingState.mediaURL,\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 100\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleMediaRecord,\n              children: \"Re-record\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleMediaRecord,\n            children: recordingState.isRecording ? \"Stop Recording\" : \"Start Recording\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !recordingState.mediaURL,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadForm, \"eKfYc8KtI8UzN0L++biD2X26ZMI=\", false, function () {\n  return [useLocation];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","InstructionModal","InitialPopup","TaskContent","tasks","jsxDEV","_jsxDEV","Fragment","_Fragment","LANGUAGES","ENGLISH","HINDI","FileUploadForm","_s","state","appState","setAppState","isPatient","language","selectedTab","showModal","showInitialPopup","testCompleted","showRefreshWarning","recordingState","setRecordingState","isRecording","mediaURL","countdown","audioBlob","videoBlob","taskState","setTaskState","completedTasks","Set","allSelectedAnswers","JSON","parse","sessionStorage","getItem","mediaRecorderRef","mediaChunksRef","setItem","stringify","clearDataOnRefresh","clear","window","addEventListener","removeEventListener","handleTabClick","id","has","prev","current","stopRecording","stop","stream","getTracks","forEach","track","handleMediaRecord","isVideo","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","mediaRecorder","MediaRecorder","start","stopTimer","setTimeout","countdownInterval","setInterval","clearInterval","event","data","size","push","mediaBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","handleSubmit","e","preventDefault","name","age","currentBlob","formData","FormData","append","response","fetch","method","body","ok","Error","status","message","className","children","setLanguage","lang","onClose","fileName","_jsxFileName","lineNumber","columnNumber","map","task","onClick","title","setTestCompleted","value","onSubmit","src","controls","disabled","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport InstructionModal from './components/InstructionModal';\nimport InitialPopup from './components/InitialPopup';\nimport TaskContent from './components/TaskContent';\nimport tasks from './data/tasks';\nimport './App.css';\n\n\nconst LANGUAGES = {\n  ENGLISH: 'english',\n  HINDI: 'hindi',\n};\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const [appState, setAppState] = useState({\n    isPatient: true,\n    language: LANGUAGES.ENGLISH,\n    selectedTab: 0,\n    showModal: true,\n    showInitialPopup: true,\n    testCompleted: false,\n    showRefreshWarning: false,\n  });\n\n  const [recordingState, setRecordingState] = useState({\n    isRecording: false,\n    mediaURL: \"\",\n    countdown: 60,\n    audioBlob: null,\n    videoBlob: null,\n  });\n\n  const [taskState, setTaskState] = useState({\n    completedTasks: new Set(),\n    allSelectedAnswers: JSON.parse(sessionStorage.getItem(\"allSelectedAnswers\")) || {},\n  });\n\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(taskState.allSelectedAnswers));\n  }, [taskState.allSelectedAnswers]);\n\n  useEffect(() => {\n    const clearDataOnRefresh = () => sessionStorage.clear();\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n    return () => window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n  }, []);\n\n  const handleTabClick = (id) => {\n    if (taskState.completedTasks.has(id) || id < appState.selectedTab) return;\n\n    setRecordingState((prev) => ({\n      ...prev,\n      mediaURL: \"\",\n      countdown: 60,\n      audioBlob: null,\n      videoBlob: null,\n    }));\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current) stopRecording();\n\n    setAppState((prev) => ({\n      ...prev,\n      selectedTab: id,\n      showModal: id !== 2,\n    }));\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach((track) => track.stop());\n    }\n  };\n\n  const handleMediaRecord = () => {\n    const isVideo = appState.selectedTab === 1;\n    const mediaType = isVideo ? { video: true, audio: true } : { audio: true };\n\n    if (!recordingState.isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType)\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaChunksRef.current = [];\n\n          mediaRecorder.start();\n          setRecordingState((prev) => ({ ...prev, isRecording: true }));\n\n          const stopTimer = setTimeout(stopRecording, 60000);\n          const countdownInterval = setInterval(() => {\n            setRecordingState((prev) => ({\n              ...prev,\n              countdown: prev.countdown > 0 ? prev.countdown - 1 : 0,\n            }));\n            if (recordingState.countdown <= 1) clearInterval(countdownInterval);\n          }, 1000);\n\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            if (event.data.size > 0) mediaChunksRef.current.push(event.data);\n          });\n\n          mediaRecorder.addEventListener('stop', () => {\n            const mediaBlob = new Blob(mediaChunksRef.current, { type: isVideo ? 'video/webm' : 'audio/webm' });\n            setRecordingState((prev) => ({\n              ...prev,\n              mediaURL: URL.createObjectURL(mediaBlob),\n              audioBlob: !isVideo ? mediaBlob : null,\n              videoBlob: isVideo ? mediaBlob : null,\n              isRecording: false,\n            }));\n          });\n        })\n        .catch((err) => {\n          console.error(\"Error accessing media:\", err);\n          alert(`Could not access your ${isVideo ? \"camera\" : \"microphone\"}. Check your browser settings.`);\n        });\n    } else {\n      stopRecording();\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!state?.name || !state?.age) {\n      alert(\"Name and age are required\");\n      return;\n    }\n\n    const currentBlob = appState.selectedTab === 1 ? recordingState.videoBlob : recordingState.audioBlob;\n    if (!currentBlob) {\n      alert(`Please record ${appState.selectedTab === 1 ? \"video\" : \"audio\"} before submitting.`);\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"name\", state.name);\n    formData.append(\"age\", state.age);\n    formData.append(appState.selectedTab === 1 ? \"video\" : \"audio\", currentBlob);\n\n    try {\n      const response = await fetch(\"http://localhost:5001/save\", { method: \"POST\", body: formData });\n      if (!response.ok) throw new Error(`Server error: ${response.status}`);\n\n      setTaskState((prev) => ({\n        ...prev,\n        completedTasks: new Set([...prev.completedTasks, appState.selectedTab]),\n      }));\n      setRecordingState((prev) => ({ ...prev, mediaURL: \"\" }));\n      handleTabClick(appState.selectedTab + 1);\n    } catch (error) {\n      console.error(\"Upload failed:\", error);\n      alert(`Upload failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {appState.showInitialPopup ? (\n        <InitialPopup\n          language={appState.language}\n          setLanguage={(lang) => setAppState((prev) => ({ ...prev, language: lang }))}\n          onClose={() => setAppState((prev) => ({ ...prev, showInitialPopup: false }))}\n        />\n      ) : (\n        <>\n          {appState.showModal && <InstructionModal onClose={() => setAppState((prev) => ({ ...prev, showModal: false }))} />}\n          <div className=\"tabs\">\n            {tasks.map((task) => (\n              <div\n                key={task.id}\n                className={`tab ${appState.selectedTab === task.id ? \"active\" : \"\"}`}\n                onClick={() => handleTabClick(task.id)}\n              >\n                {task.title[appState.language]}\n              </div>\n            ))}\n          </div>\n          <div className=\"content\">\n            <TaskContent\n              task={tasks[appState.selectedTab]}\n              language={appState.language}\n              testCompleted={appState.testCompleted}\n              setTestCompleted={(value) => setAppState((prev) => ({ ...prev, testCompleted: value }))}\n            />\n            <form onSubmit={handleSubmit}>\n              {recordingState.mediaURL ? (\n                <>\n                  {appState.selectedTab === 1 ? <video src={recordingState.mediaURL} controls /> : <audio src={recordingState.mediaURL} controls />}\n                  <button type=\"button\" onClick={handleMediaRecord}>Re-record</button>\n                </>\n              ) : (\n                <button type=\"button\" onClick={handleMediaRecord}>{recordingState.isRecording ? \"Stop Recording\" : \"Start Recording\"}</button>\n              )}\n              <button type=\"submit\" disabled={!recordingState.mediaURL}>Submit</button>\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}