{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const [countdown, setCountdown] = useState(60); // Timer starts from 1 minute\n  const countdownIntervalRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const tasks = [{\n    id: 0,\n    title: {\n      hindi: 'पहला कार्य',\n      english: '1st Task'\n    },\n    paragraph: {\n      hindi: 'एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी।...',\n      english: 'Once upon a time, in a small village, there was a lovely little girl named Neeta...'\n    }\n  }, {\n    id: 1,\n    title: {\n      hindi: 'दूसरा कार्य',\n      english: '2nd Task'\n    },\n    image: '/image.png'\n  }];\n  const handleTabClick = id => {\n    setSelectedTab(id);\n    setShowModal(true); // Show modal when switching to a new task\n  };\n  const toggleLanguage = e => {\n    e.preventDefault();\n    setLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');\n  };\n  const startRecording = () => {\n    setCountdown(60); // Reset timer to 1 minute\n    countdownIntervalRef.current = setInterval(() => {\n      setCountdown(prevCountdown => {\n        if (prevCountdown <= 1) {\n          stopRecording(); // Stop recording when timer hits zero\n          return 0;\n        }\n        return prevCountdown - 1;\n      });\n    }, 1000);\n  };\n  const stopRecording = () => {\n    clearInterval(countdownIntervalRef.current);\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        startRecording(); // Start countdown timer\n\n        mediaRecorder.addEventListener('dataavailable', event => {\n          mediaChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      stopRecording();\n    }\n  };\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name);\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n    setShowTick(true);\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n  const InstructionModal = ({\n    onClose\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions / \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '1.2em',\n          color: '#555'\n        },\n        children: selectedTab === 0 ? 'Please click on the \"Record Voice\" button and read the passage out loud. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.' : 'Please click on the \"Record Video\" button and describe what you see in the picture. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '1.2em',\n          color: '#555'\n        },\n        children: selectedTab === 0 ? 'कृपया \"आवाज़ रिकॉर्ड करें\" बटन पर क्लिक करें और जोर से पढ़ें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।' : 'कृपया \"वीडियो रिकॉर्ड करें\" बटन पर क्लिक करें और चित्र में जो आप देख रहे हैं उसका वर्णन करें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-ok-button\",\n        onClick: onClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n  const TaskContent = ({\n    task\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-content\",\n    children: task.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: task.image,\n      alt: \"Task\",\n      style: {\n        maxWidth: '100%',\n        maxHeight: '100%',\n        objectFit: 'contain'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: '60%',\n        margin: '0 auto',\n        lineHeight: '1.8',\n        fontSize: '1.1em'\n      },\n      children: task.paragraph[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gradient-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n          onClick: () => handleTabClick(task.id),\n          children: task.title[language]\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLanguage,\n          style: {\n            marginBottom: '10px',\n            padding: '8px 12px',\n            cursor: 'pointer',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          },\n          children: language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"task-title\",\n          children: tasks[selectedTab].title[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n          task: tasks[selectedTab]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '15px',\n            marginTop: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-controls\",\n            children: [isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Time Remaining: \", countdown, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 31\n            }, this), mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 40\n              }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 76\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleReRecord,\n                className: \"custom-button\",\n                children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleMediaRecord,\n              style: {\n                marginBottom: '10px',\n                padding: '8px 12px',\n                cursor: 'pointer',\n                backgroundColor: '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px'\n              },\n              children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !mediaURL,\n            className: \"custom-button\",\n            children: language === 'hindi' ? 'जमा करें' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tick\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadForm, \"L0TslP6+f9jcMe5z7/9UI71H5pI=\", false, function () {\n  return [useLocation];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s","state","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","countdown","setCountdown","countdownIntervalRef","mediaRecorderRef","mediaChunksRef","tasks","id","title","hindi","english","paragraph","image","handleTabClick","toggleLanguage","e","preventDefault","prev","startRecording","current","setInterval","prevCountdown","stopRecording","clearInterval","stop","stream","getTracks","forEach","track","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","mediaRecorder","MediaRecorder","start","addEventListener","event","push","data","mediaBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","handleReRecord","handleSubmit","response","fetch","blob","formData","FormData","append","name","age","uploadResponse","method","body","result","json","log","media_url","setTimeout","InstructionModal","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","fontSize","color","onClick","TaskContent","task","src","alt","maxWidth","maxHeight","objectFit","width","margin","lineHeight","map","marginBottom","padding","cursor","backgroundColor","border","borderRadius","onSubmit","display","flexDirection","alignItems","gap","position","controls","disabled","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const [countdown, setCountdown] = useState(60); // Timer starts from 1 minute\n  const countdownIntervalRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  const tasks = [\n    {\n      id: 0,\n      title: { hindi: 'पहला कार्य', english: '1st Task' },\n      paragraph: {\n        hindi: 'एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी।...',\n        english: 'Once upon a time, in a small village, there was a lovely little girl named Neeta...'\n      }\n    },\n    {\n      id: 1,\n      title: { hindi: 'दूसरा कार्य', english: '2nd Task' },\n      image: '/image.png',\n    },\n  ];\n\n  const handleTabClick = (id) => {\n    setSelectedTab(id);\n    setShowModal(true); // Show modal when switching to a new task\n  };\n\n  const toggleLanguage = (e) => {\n    e.preventDefault();\n    setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  };\n\n  const startRecording = () => {\n    setCountdown(60); // Reset timer to 1 minute\n    countdownIntervalRef.current = setInterval(() => {\n      setCountdown((prevCountdown) => {\n        if (prevCountdown <= 1) {\n          stopRecording(); // Stop recording when timer hits zero\n          return 0;\n        }\n        return prevCountdown - 1;\n      });\n    }, 1000);\n  };\n\n  const stopRecording = () => {\n    clearInterval(countdownIntervalRef.current);\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? { video: true } : { audio: true };\n\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        startRecording(); // Start countdown timer\n\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          mediaChunksRef.current.push(event.data);\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, { type: selectedTab === 1 ? 'video/webm' : 'audio/webm' });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n        });\n      }).catch((err) => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      stopRecording();\n    }\n  };\n\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state?.name);\n    formData.append('age', state?.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n\n    setShowTick(true);\n\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n\n  const InstructionModal = ({ onClose }) => (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <h2>Instructions / निर्देश</h2>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 \n            ? 'Please click on the \"Record Voice\" button and read the passage out loud. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.'\n            : 'Please click on the \"Record Video\" button and describe what you see in the picture. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.'}\n        </p>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 \n            ? 'कृपया \"आवाज़ रिकॉर्ड करें\" बटन पर क्लिक करें और जोर से पढ़ें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।'\n            : 'कृपया \"वीडियो रिकॉर्ड करें\" बटन पर क्लिक करें और चित्र में जो आप देख रहे हैं उसका वर्णन करें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।'}\n        </p>\n        <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n      </div>\n    </div>\n  );\n\n  const TaskContent = ({ task }) => (\n    <div className=\"task-content\">\n      {task.image ? (\n        <img src={task.image} alt=\"Task\" style={{ maxWidth: '100%', maxHeight: '100%', objectFit: 'contain' }} />\n      ) : (\n        <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n          {task.paragraph[language]}\n        </p>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"app\">\n      {showModal && <InstructionModal onClose={() => setShowModal(false)} />}\n\n      <div className=\"gradient-bg\"></div>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n              onClick={() => handleTabClick(task.id)}\n            >\n              {task.title[language]}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"content\">\n          <button onClick={toggleLanguage} style={{ marginBottom: '10px', padding: '8px 12px', cursor: 'pointer', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px' }}>\n            {language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'}\n          </button>\n\n          <h1 className=\"task-title\">{tasks[selectedTab].title[language]}</h1>\n          <TaskContent task={tasks[selectedTab]} />\n\n          <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '15px', marginTop: '20px', position: 'relative' }}>\n            <div className=\"media-controls\">\n              {isRecording && <p>Time Remaining: {countdown}s</p>}\n              {mediaURL ? (\n                <>\n                  {selectedTab === 1 ? <video src={mediaURL} controls /> : <audio src={mediaURL} controls />}\n                  <button type=\"button\" onClick={handleReRecord} className=\"custom-button\">\n                    {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                  </button>\n                </>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={handleMediaRecord}\n                  style={{\n                    marginBottom: '10px',\n                    padding: '8px 12px',\n                    cursor: 'pointer',\n                    backgroundColor: '#007bff',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                  }}\n                >\n                  {isRecording ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording') : (language === 'hindi' ? (selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें') : (selectedTab === 1 ? 'Record Video' : 'Record Voice'))}\n                </button>\n              )}\n            </div>\n\n            <button type=\"submit\" disabled={!mediaURL} className=\"custom-button\">\n              {language === 'hindi' ? 'जमा करें' : 'Submit'}\n            </button>\n\n            {showTick && <span className=\"tick\">✔</span>}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}