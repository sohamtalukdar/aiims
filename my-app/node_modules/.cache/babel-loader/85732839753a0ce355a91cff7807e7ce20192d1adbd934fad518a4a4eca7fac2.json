{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/TaskContent.js\";\nimport React from 'react';\nimport TaskCompletion from './TaskCompletion';\nimport InitialInstructions from './InitialInstructions';\nimport MultipleChoiceTask from './MultipleChoiceTask';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n  setIsPatient,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  setShowImageModal,\n  showImageModal\n}) => {\n  if (task.id === 2) {\n    if (testCompleted) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex justify-center items-center\",\n        children: /*#__PURE__*/_jsxDEV(TaskCompletion, {\n          language: language,\n          allSelectedAnswers: allSelectedAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    }\n\n    // If initial instructions are to be shown\n    if (showInitialInstructions) {\n      return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n        onAccept: () => setShowInitialInstructions(false),\n        onDeny: () => {\n          setShowInitialInstructions(false);\n          setTestCompleted(true);\n        },\n        setIsPatient: setIsPatient,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Render the MultipleChoiceTask\n    return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n      task: task,\n      language: language,\n      setTestCompleted: setTestCompleted,\n      allSelectedAnswers: allSelectedAnswers,\n      setAllSelectedAnswers: setAllSelectedAnswers,\n      currentQuestionIndex: currentQuestionIndex,\n      setCurrentQuestionIndex: setCurrentQuestionIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-content\",\n    children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          marginBottom: '5px',\n          fontSize: '14px',\n          color: '#666',\n          cursor: 'pointer'\n        },\n        children: [language === 'hindi' ? '‡§ú‡§º‡•Ç‡§Æ ‡§á‡§®/‡§ú‡§º‡•Ç‡§Æ ‡§Ü‡§â‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: task.image,\n        alt: \"Task\",\n        style: {\n          cursor: 'pointer',\n          maxWidth: '100%',\n          maxHeight: '100%'\n        },\n        onClick: () => setShowImageModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Popup Task\",\n          style: {\n            maxWidth: '90%',\n            maxHeight: '90%',\n            objectFit: 'contain'\n          },\n          onClick: () => setShowImageModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: '60%',\n        margin: '0 auto',\n        lineHeight: '1.8',\n        fontSize: '1.1em'\n      },\n      children: task.paragraph[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskContent;\nexport default TaskContent;\nvar _c;\n$RefreshReg$(_c, \"TaskContent\");","map":{"version":3,"names":["React","TaskCompletion","InitialInstructions","MultipleChoiceTask","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskContent","task","language","testCompleted","showInitialInstructions","setShowInitialInstructions","setTestCompleted","allSelectedAnswers","setAllSelectedAnswers","setIsPatient","currentQuestionIndex","setCurrentQuestionIndex","setShowImageModal","showImageModal","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAccept","onDeny","image","style","textAlign","marginBottom","fontSize","color","cursor","src","alt","maxWidth","maxHeight","onClick","objectFit","width","margin","lineHeight","paragraph","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/TaskContent.js"],"sourcesContent":["import React from 'react';\nimport TaskCompletion from './TaskCompletion';\nimport InitialInstructions from './InitialInstructions';\nimport MultipleChoiceTask from './MultipleChoiceTask';\n\n\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  showInitialInstructions,\n  setShowInitialInstructions,\n  setTestCompleted,\n  allSelectedAnswers,\n  setAllSelectedAnswers,\n  setIsPatient,\n  currentQuestionIndex,\n  setCurrentQuestionIndex,\n  setShowImageModal,\n  showImageModal\n}) => {\n  if (task.id === 2) {\n    if (testCompleted) {\n      return (\n        <div className=\"w-full flex justify-center items-center\">\n          <TaskCompletion \n            language={language}\n            allSelectedAnswers={allSelectedAnswers} \n          />\n        </div>\n      );\n    }\n    \n    // If initial instructions are to be shown\n    if (showInitialInstructions) {\n      return (\n        <InitialInstructions\n          onAccept={() => setShowInitialInstructions(false)}\n          onDeny={() => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          }}\n          setIsPatient={setIsPatient}\n          language={language}\n        />\n      );\n    }\n\n    // Render the MultipleChoiceTask\n    return (\n      <MultipleChoiceTask\n        task={task}\n        language={language}\n        setTestCompleted={setTestCompleted}\n        allSelectedAnswers={allSelectedAnswers}\n        setAllSelectedAnswers={setAllSelectedAnswers}\n        currentQuestionIndex={currentQuestionIndex}\n        setCurrentQuestionIndex={setCurrentQuestionIndex}\n      />\n    );      \n  }\n\n  return (\n    <div className=\"task-content\">\n      {task.image ? (\n        <>\n          {/* Added click to enlarge text */}\n          <div style={{ \n            textAlign: 'left', \n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          }}>\n            {language === 'hindi' ? '‡§ú‡§º‡•Ç‡§Æ ‡§á‡§®/‡§ú‡§º‡•Ç‡§Æ ‡§Ü‡§â‡§ü ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§õ‡§µ‡§ø ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç' : 'Click on the image to zoom in / zoom out'} üîç\n          </div>\n          <img\n            src={task.image}\n            alt=\"Task\"\n            style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n            onClick={() => setShowImageModal(true)}\n          />\n          {showImageModal && (\n            <div className=\"image-modal\">\n              <img\n                src={task.image}\n                alt=\"Popup Task\"\n                style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                onClick={() => setShowImageModal(false)}\n              />\n            </div>\n          )}\n        </>\n      ) : (\n        <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n          {task.paragraph[language]}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default TaskContent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}