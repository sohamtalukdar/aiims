{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/components/TaskContent.js\";\nimport React from 'react';\nimport TaskCompletion from './TaskCompletion';\nimport MultipleChoiceTask from './MultipleChoiceTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContent = ({\n  task,\n  language,\n  testCompleted,\n  setTestCompleted,\n  allSelectedAnswers,\n  setAllSelectedAnswers\n}) => {\n  if (testCompleted) {\n    return /*#__PURE__*/_jsxDEV(TaskCompletion, {\n      language: language,\n      allSelectedAnswers: allSelectedAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  if (task.id === 2) {\n    return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n      task: task,\n      language: language,\n      allSelectedAnswers: allSelectedAnswers,\n      setAllSelectedAnswers: setAllSelectedAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: task.paragraph[language]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_c = TaskContent;\nexport default TaskContent;\nvar _c;\n$RefreshReg$(_c, \"TaskContent\");","map":{"version":3,"names":["React","TaskCompletion","MultipleChoiceTask","jsxDEV","_jsxDEV","TaskContent","task","language","testCompleted","setTestCompleted","allSelectedAnswers","setAllSelectedAnswers","fileName","_jsxFileName","lineNumber","columnNumber","id","children","paragraph","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/components/TaskContent.js"],"sourcesContent":["import React from 'react';\nimport TaskCompletion from './TaskCompletion';\nimport MultipleChoiceTask from './MultipleChoiceTask';\n\nconst TaskContent = ({ task, language, testCompleted, setTestCompleted, allSelectedAnswers, setAllSelectedAnswers }) => {\n  if (testCompleted) {\n    return <TaskCompletion language={language} allSelectedAnswers={allSelectedAnswers} />;\n  }\n\n  if (task.id === 2) {\n    return (\n      <MultipleChoiceTask\n        task={task}\n        language={language}\n        allSelectedAnswers={allSelectedAnswers}\n        setAllSelectedAnswers={setAllSelectedAnswers}\n      />\n    );\n  }\n\n  return <p>{task.paragraph[language]}</p>;\n};\n\nexport default TaskContent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,aAAa;EAAEC,gBAAgB;EAAEC,kBAAkB;EAAEC;AAAsB,CAAC,KAAK;EACtH,IAAIH,aAAa,EAAE;IACjB,oBAAOJ,OAAA,CAACH,cAAc;MAACM,QAAQ,EAAEA,QAAS;MAACG,kBAAkB,EAAEA;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvF;EAEA,IAAIT,IAAI,CAACU,EAAE,KAAK,CAAC,EAAE;IACjB,oBACEZ,OAAA,CAACF,kBAAkB;MACjBI,IAAI,EAAEA,IAAK;MACXC,QAAQ,EAAEA,QAAS;MACnBG,kBAAkB,EAAEA,kBAAmB;MACvCC,qBAAqB,EAAEA;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEN;EAEA,oBAAOX,OAAA;IAAAa,QAAA,EAAIX,IAAI,CAACY,SAAS,CAACX,QAAQ;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC1C,CAAC;AAACI,EAAA,GAjBId,WAAW;AAmBjB,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}