{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/components/MultipleChoiceTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  allSelectedAnswers,\n  setAllSelectedAnswers\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const handleAnswerSelect = choiceIndex => {\n    setAllSelectedAnswers(prev => {\n      const updated = {\n        ...prev\n      };\n      if (!updated[currentQuestionIndex]) updated[currentQuestionIndex] = [];\n      if (updated[currentQuestionIndex].includes(choiceIndex)) {\n        updated[currentQuestionIndex] = updated[currentQuestionIndex].filter(index => index !== choiceIndex);\n      } else {\n        updated[currentQuestionIndex].push(choiceIndex);\n      }\n      return updated;\n    });\n  };\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-choice-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.questions[currentQuestionIndex].question[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: currentSelections.includes(index),\n        onChange: () => handleAnswerSelect(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), choice[language]]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentQuestionIndex(prev => Math.max(0, prev - 1)),\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCurrentQuestionIndex(prev => Math.min(task.questions.length - 1, prev + 1)),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MultipleChoiceTask, \"/TKtEVk4bXISO4WPmKbHy0C8rGs=\");\n_c = MultipleChoiceTask;\nexport default MultipleChoiceTask;\nvar _c;\n$RefreshReg$(_c, \"MultipleChoiceTask\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MultipleChoiceTask","task","language","allSelectedAnswers","setAllSelectedAnswers","_s","currentQuestionIndex","setCurrentQuestionIndex","handleAnswerSelect","choiceIndex","prev","updated","includes","filter","index","push","currentSelections","className","children","questions","question","fileName","_jsxFileName","lineNumber","columnNumber","choices","map","choice","type","checked","onChange","onClick","Math","max","min","length","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/components/MultipleChoiceTask.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MultipleChoiceTask = ({ task, language, allSelectedAnswers, setAllSelectedAnswers }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n\n  const handleAnswerSelect = (choiceIndex) => {\n    setAllSelectedAnswers((prev) => {\n      const updated = { ...prev };\n      if (!updated[currentQuestionIndex]) updated[currentQuestionIndex] = [];\n      if (updated[currentQuestionIndex].includes(choiceIndex)) {\n        updated[currentQuestionIndex] = updated[currentQuestionIndex].filter((index) => index !== choiceIndex);\n      } else {\n        updated[currentQuestionIndex].push(choiceIndex);\n      }\n      return updated;\n    });\n  };\n\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n\n  return (\n    <div className=\"multiple-choice-task\">\n      <h3>{task.questions[currentQuestionIndex].question[language]}</h3>\n      {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n        <label key={index}>\n          <input\n            type=\"checkbox\"\n            checked={currentSelections.includes(index)}\n            onChange={() => handleAnswerSelect(index)}\n          />\n          {choice[language]}\n        </label>\n      ))}\n      <button onClick={() => setCurrentQuestionIndex((prev) => Math.max(0, prev - 1))}>Previous</button>\n      <button onClick={() => setCurrentQuestionIndex((prev) => Math.min(task.questions.length - 1, prev + 1))}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default MultipleChoiceTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}