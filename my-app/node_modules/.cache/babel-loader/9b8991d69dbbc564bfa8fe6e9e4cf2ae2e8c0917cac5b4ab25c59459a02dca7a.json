{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/components/task0&1.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\n\n// Instruction Modal Component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InstructionModal = ({\n  onClose,\n  selectedTab,\n  language\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: selectedTab === 0 ? language === 'english' ? '/audio/q2_en.mp3' : '/audio/q2_hi.mp3' : language === 'english' ? '/audio/q3_en.mp3' : '/audio/q3_hi.mp3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: language === 'hindi' ? 'निर्देश' : 'Instructions'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '1.2em',\n          color: '#555'\n        },\n        children: selectedTab === 0 ? language === 'hindi' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0915\\u0943\\u092A\\u092F\\u093E \\\"\\u0906\\u0935\\u093E\\u091C\\u093C \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921 \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902 \\u0914\\u0930 \\u091C\\u094B\\u0930 \\u0938\\u0947 \\u092A\\u0922\\u093C\\u0947\\u0902\\u0964 \\u0906\\u092A\\u0915\\u0947 \\u092A\\u093E\\u0938 1 \\u092E\\u093F\\u0928\\u091F \\u0939\\u0948\\u0964 \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0938\\u094D\\u0935\\u091A\\u093E\\u0932\\u093F\\u0924 \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0930\\u0941\\u0915 \\u091C\\u093E\\u090F\\u0917\\u0940\\u0964 \\\"\\u091C\\u092E\\u093E \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please click \\\"Record Voice\\\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \\\"Submit\\\" to save.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this) : language === 'hindi' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u0915\\u0943\\u092A\\u092F\\u093E \\\"\\u0935\\u0940\\u0921\\u093F\\u092F\\u094B \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921 \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902 \\u0914\\u0930 \\u091A\\u093F\\u0924\\u094D\\u0930 \\u0915\\u093E \\u0935\\u0930\\u094D\\u0923\\u0928 \\u0915\\u0930\\u0947\\u0902\\u0964 \\u0906\\u092A\\u0915\\u0947 \\u092A\\u093E\\u0938 1 \\u092E\\u093F\\u0928\\u091F \\u0939\\u0948\\u0964 \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0938\\u094D\\u0935\\u091A\\u093E\\u0932\\u093F\\u0924 \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0930\\u0941\\u0915 \\u091C\\u093E\\u090F\\u0917\\u0940\\u0964 \\\"\\u091C\\u092E\\u093E \\u0915\\u0930\\u0947\\u0902\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964 \\u091C\\u093C\\u0942\\u092E \\u0907\\u0928 \\u0915\\u0947 \\u0932\\u093F\\u090F, \\u0915\\u0943\\u092A\\u092F\\u093E \\u091A\\u093F\\u0924\\u094D\\u0930 \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please click \\\"Record Video\\\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \\\"Submit\\\" to save. To zoom in, please click on the picture.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-ok-button\",\n        onClick: onClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n// Media Recording Form Component\n_s(InstructionModal, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = InstructionModal;\nconst MediaRecordingForm = ({\n  selectedTab,\n  language,\n  mediaURL,\n  setMediaURL,\n  isRecording,\n  setIsRecording,\n  countdown,\n  setCountdown,\n  isSubmitting,\n  showTick,\n  handleSubmit,\n  handleMediaRecord,\n  handleReRecord,\n  mediaRecorderRef,\n  mediaChunksRef\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"media-form\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '15px',\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-controls\",\n      children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-playback\",\n        children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n          src: mediaURL,\n          controls: true,\n          style: {\n            maxWidth: '350px',\n            width: '100%',\n            height: 'auto',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n          src: mediaURL,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleReRecord,\n          className: \"custom-button\",\n          children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '10px'\n          },\n          children: isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time remaining: \", countdown, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleMediaRecord,\n          className: \"custom-button\",\n          style: {\n            marginBottom: '10px',\n            padding: '8px 12px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !mediaURL || isSubmitting,\n      className: \"custom-button\",\n      style: {\n        opacity: !mediaURL || isSubmitting ? 0.6 : 1\n      },\n      children: language === 'hindi' ? 'जमा करें' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tick\",\n      children: \"\\u2714\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n// Task Content Component\n_c2 = MediaRecordingForm;\nconst TaskContent = ({\n  task,\n  language,\n  showImageModal,\n  setShowImageModal\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-content\",\n    children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'left',\n          marginBottom: '5px',\n          fontSize: '14px',\n          color: '#666',\n          cursor: 'pointer'\n        },\n        children: [language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: task.image,\n        alt: \"Task\",\n        style: {\n          cursor: 'pointer',\n          maxWidth: '100%',\n          maxHeight: '100%'\n        },\n        onClick: () => setShowImageModal(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Popup Task\",\n          style: {\n            maxWidth: '90%',\n            maxHeight: '90%',\n            objectFit: 'contain'\n          },\n          onClick: () => setShowImageModal(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        width: '60%',\n        margin: '0 auto',\n        lineHeight: '1.8',\n        fontSize: '1.1em'\n      },\n      children: task.paragraph[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n\n// Media recording helper functions\n_c3 = TaskContent;\nconst startMediaRecording = async ({\n  selectedTab,\n  setIsRecording,\n  setCountdown,\n  mediaRecorderRef,\n  mediaChunksRef,\n  setMediaURL,\n  setVideoBlob,\n  setAudioBlob\n}) => {\n  const mediaType = selectedTab === 1 ? {\n    video: true,\n    audio: true\n  } : {\n    audio: true\n  };\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(mediaType);\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    mediaChunksRef.current = [];\n    mediaRecorder.start();\n    setIsRecording(true);\n    const countdownInterval = setInterval(() => {\n      setCountdown(prev => {\n        if (prev <= 1) {\n          clearInterval(countdownInterval);\n          if (mediaRecorder.state === \"recording\") {\n            mediaRecorder.stop();\n            stream.getTracks().forEach(track => track.stop());\n            setIsRecording(false);\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    mediaRecorder.countdownInterval = countdownInterval;\n    mediaRecorder.addEventListener('dataavailable', event => {\n      if (event.data.size > 0) {\n        mediaChunksRef.current.push(event.data);\n      }\n    });\n    mediaRecorder.addEventListener('stop', () => {\n      const mediaBlob = new Blob(mediaChunksRef.current, {\n        type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n      });\n      const url = URL.createObjectURL(mediaBlob);\n      setMediaURL(url);\n      if (selectedTab === 1) {\n        setVideoBlob(mediaBlob);\n      } else {\n        setAudioBlob(mediaBlob);\n      }\n      setIsRecording(false);\n      mediaChunksRef.current = [];\n      clearInterval(mediaRecorder.countdownInterval);\n    });\n  } catch (err) {\n    console.error('Error accessing media:', err);\n    setIsRecording(false);\n    alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n  }\n};\nconst stopMediaRecording = (mediaRecorderRef, setCountdown) => {\n  if (mediaRecorderRef.current) {\n    mediaRecorderRef.current.stop();\n    mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    clearInterval(mediaRecorderRef.current.countdownInterval);\n    setCountdown(0);\n  }\n};\nexport { InstructionModal, MediaRecordingForm, TaskContent, startMediaRecording, stopMediaRecording };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"InstructionModal\");\n$RefreshReg$(_c2, \"MediaRecordingForm\");\n$RefreshReg$(_c3, \"TaskContent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InstructionModal","onClose","selectedTab","language","_s","audioRef","current","play","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","fontSize","color","onClick","_c","MediaRecordingForm","mediaURL","setMediaURL","isRecording","setIsRecording","countdown","setCountdown","isSubmitting","showTick","handleSubmit","handleMediaRecord","handleReRecord","mediaRecorderRef","mediaChunksRef","onSubmit","display","flexDirection","alignItems","gap","controls","maxWidth","width","height","marginBottom","type","textAlign","padding","backgroundColor","border","borderRadius","cursor","disabled","opacity","_c2","TaskContent","task","showImageModal","setShowImageModal","image","alt","maxHeight","objectFit","margin","lineHeight","paragraph","_c3","startMediaRecording","setVideoBlob","setAudioBlob","mediaType","video","audio","stream","navigator","mediaDevices","getUserMedia","mediaRecorder","MediaRecorder","start","countdownInterval","setInterval","prev","clearInterval","state","stop","getTracks","forEach","track","addEventListener","event","data","size","push","mediaBlob","Blob","url","URL","createObjectURL","err","console","error","alert","stopMediaRecording","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/components/task0&1.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\n// Instruction Modal Component\nconst InstructionModal = ({ onClose, selectedTab, language }) => {\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  }, []);\n\n  return (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <audio\n          ref={audioRef}\n          src={selectedTab === 0 ? \n            (language === 'english' ? '/audio/q2_en.mp3' : '/audio/q2_hi.mp3') :\n            (language === 'english' ? '/audio/q3_en.mp3' : '/audio/q3_hi.mp3')\n          }\n        />\n        <h2>{language === 'hindi' ? 'निर्देश' : 'Instructions'}</h2>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 ? (\n            language === 'hindi' ? (\n              <p>कृपया \"आवाज़ रिकॉर्ड करें\" पर क्लिक करें और जोर से पढ़ें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें।</p>\n            ) : (\n              <p>Please click \"Record Voice\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save.</p>\n            )\n          ) : (\n            language === 'hindi' ? (\n              <p>कृपया \"वीडियो रिकॉर्ड करें\" पर क्लिक करें और चित्र का वर्णन करें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें। ज़ूम इन के लिए, कृपया चित्र पर क्लिक करें।</p>\n            ) : (\n              <p>Please click \"Record Video\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save. To zoom in, please click on the picture.</p>\n            )\n          )}\n        </p>\n        <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n      </div>\n    </div>\n  );\n};\n\n// Media Recording Form Component\nconst MediaRecordingForm = ({\n  selectedTab,\n  language,\n  mediaURL,\n  setMediaURL,\n  isRecording,\n  setIsRecording,\n  countdown,\n  setCountdown,\n  isSubmitting,\n  showTick,\n  handleSubmit,\n  handleMediaRecord,\n  handleReRecord,\n  mediaRecorderRef,\n  mediaChunksRef\n}) => {\n  return (\n    <form\n      onSubmit={handleSubmit}\n      className=\"media-form\"\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '15px',\n        marginTop: '20px'\n      }}\n    >\n      <div className=\"media-controls\">\n        {mediaURL ? (\n          <div className=\"media-playback\">\n            {selectedTab === 1 ? (\n              <video \n                src={mediaURL} \n                controls\n                style={{\n                  maxWidth: '350px',\n                  width: '100%',\n                  height: 'auto',\n                  marginBottom: '10px'\n                }} \n              />\n            ) : (\n              <audio src={mediaURL} controls />\n            )}\n            <button \n              type=\"button\" \n              onClick={handleReRecord} \n              className=\"custom-button\"\n            >\n              {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n            </button>\n          </div>\n        ) : (\n          <div className=\"recording-controls\">\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\n              {isRecording && <p>Time remaining: {countdown}s</p>}\n            </div>\n            <button\n              type=\"button\"\n              onClick={handleMediaRecord}\n              className=\"custom-button\"\n              style={{\n                marginBottom: '10px',\n                padding: '8px 12px',\n                backgroundColor: '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n            >\n              {isRecording\n                ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n                : language === 'hindi'\n                ? selectedTab === 1\n                  ? 'वीडियो रिकॉर्ड करें'\n                  : 'आवाज़ रिकॉर्ड करें'\n                : selectedTab === 1\n                ? 'Record Video'\n                : 'Record Voice'}\n            </button>\n          </div>\n        )}\n      </div>\n\n      <button \n        type=\"submit\" \n        disabled={!mediaURL || isSubmitting} \n        className=\"custom-button\"\n        style={{\n          opacity: (!mediaURL || isSubmitting) ? 0.6 : 1\n        }}\n      >\n        {language === 'hindi' ? 'जमा करें' : 'Submit'}\n      </button>\n\n      {showTick && <span className=\"tick\">✔</span>}\n    </form>\n  );\n};\n\n// Task Content Component\nconst TaskContent = ({\n  task,\n  language,\n  showImageModal,\n  setShowImageModal\n}) => {\n  return (\n    <div className=\"task-content\">\n      {task.image ? (\n        <>\n          <div style={{ \n            textAlign: 'left', \n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          }}>\n            {language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out'} 🔍\n          </div>\n          <img\n            src={task.image}\n            alt=\"Task\"\n            style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n            onClick={() => setShowImageModal(true)}\n          />\n          {showImageModal && (\n            <div className=\"image-modal\">\n              <img\n                src={task.image}\n                alt=\"Popup Task\"\n                style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                onClick={() => setShowImageModal(false)}\n              />\n            </div>\n          )}\n        </>\n      ) : (\n        <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n          {task.paragraph[language]}\n        </p>\n      )}\n    </div>\n  );\n};\n\n// Media recording helper functions\nconst startMediaRecording = async ({\n  selectedTab,\n  setIsRecording,\n  setCountdown,\n  mediaRecorderRef,\n  mediaChunksRef,\n  setMediaURL,\n  setVideoBlob,\n  setAudioBlob\n}) => {\n  const mediaType = selectedTab === 1 \n    ? { video: true, audio: true }\n    : { audio: true };\n\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(mediaType);\n    const mediaRecorder = new MediaRecorder(stream);\n    mediaRecorderRef.current = mediaRecorder;\n    mediaChunksRef.current = [];\n\n    mediaRecorder.start();\n    setIsRecording(true);\n\n    const countdownInterval = setInterval(() => {\n      setCountdown((prev) => {\n        if (prev <= 1) {\n          clearInterval(countdownInterval);\n          if (mediaRecorder.state === \"recording\") {\n            mediaRecorder.stop();\n            stream.getTracks().forEach(track => track.stop());\n            setIsRecording(false);\n          }\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    mediaRecorder.countdownInterval = countdownInterval;\n\n    mediaRecorder.addEventListener('dataavailable', (event) => {\n      if (event.data.size > 0) {\n        mediaChunksRef.current.push(event.data);\n      }\n    });\n\n    mediaRecorder.addEventListener('stop', () => {\n      const mediaBlob = new Blob(mediaChunksRef.current, {\n        type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n      });\n\n      const url = URL.createObjectURL(mediaBlob);\n      setMediaURL(url);\n\n      if (selectedTab === 1) {\n        setVideoBlob(mediaBlob);\n      } else {\n        setAudioBlob(mediaBlob);\n      }\n\n      setIsRecording(false);\n      mediaChunksRef.current = [];\n      clearInterval(mediaRecorder.countdownInterval);\n    });\n  } catch (err) {\n    console.error('Error accessing media:', err);\n    setIsRecording(false);\n    alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n  }\n};\n\nconst stopMediaRecording = (mediaRecorderRef, setCountdown) => {\n  if (mediaRecorderRef.current) {\n    mediaRecorderRef.current.stop();\n    mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    clearInterval(mediaRecorderRef.current.countdownInterval);\n    setCountdown(0);\n  }\n};\n\nexport {\n  InstructionModal,\n  MediaRecordingForm,\n  TaskContent,\n  startMediaRecording,\n  stopMediaRecording\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAMC,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAKW,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnCZ,OAAA;MAAKW,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCZ,OAAA;QACEa,GAAG,EAAEL,QAAS;QACdM,GAAG,EAAET,WAAW,KAAK,CAAC,GACnBC,QAAQ,KAAK,SAAS,GAAG,kBAAkB,GAAG,kBAAkB,GAChEA,QAAQ,KAAK,SAAS,GAAG,kBAAkB,GAAG;MAChD;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFlB,OAAA;QAAAY,QAAA,EAAKN,QAAQ,KAAK,OAAO,GAAG,SAAS,GAAG;MAAc;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5DlB,OAAA;QAAGmB,KAAK,EAAE;UAAEC,SAAS,EAAE,MAAM;UAAEC,QAAQ,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAV,QAAA,EAC/DP,WAAW,KAAK,CAAC,GAChBC,QAAQ,KAAK,OAAO,gBAClBN,OAAA;UAAAY,QAAA,EAAG;QAA6I;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEpJlB,OAAA;UAAAY,QAAA,EAAG;QAAiI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACxI,GAEDZ,QAAQ,KAAK,OAAO,gBAClBN,OAAA;UAAAY,QAAA,EAAG;QAAgM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEvMlB,OAAA;UAAAY,QAAA,EAAG;QAA4K;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAErL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACJlB,OAAA;QAAQW,SAAS,EAAC,kBAAkB;QAACY,OAAO,EAAEnB,OAAQ;QAAAQ,QAAA,EAAC;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAX,EAAA,CAzCMJ,gBAAgB;AAAAqB,EAAA,GAAhBrB,gBAAgB;AA0CtB,MAAMsB,kBAAkB,GAAGA,CAAC;EAC1BpB,WAAW;EACXC,QAAQ;EACRoB,QAAQ;EACRC,WAAW;EACXC,WAAW;EACXC,cAAc;EACdC,SAAS;EACTC,YAAY;EACZC,YAAY;EACZC,QAAQ;EACRC,YAAY;EACZC,iBAAiB;EACjBC,cAAc;EACdC,gBAAgB;EAChBC;AACF,CAAC,KAAK;EACJ,oBACEtC,OAAA;IACEuC,QAAQ,EAAEL,YAAa;IACvBvB,SAAS,EAAC,YAAY;IACtBQ,KAAK,EAAE;MACLqB,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,UAAU,EAAE,QAAQ;MACpBC,GAAG,EAAE,MAAM;MACXvB,SAAS,EAAE;IACb,CAAE;IAAAR,QAAA,gBAEFZ,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5Bc,QAAQ,gBACP1B,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5BP,WAAW,KAAK,CAAC,gBAChBL,OAAA;UACEc,GAAG,EAAEY,QAAS;UACdkB,QAAQ;UACRzB,KAAK,EAAE;YACL0B,QAAQ,EAAE,OAAO;YACjBC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE;UAChB;QAAE;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAEFlB,OAAA;UAAOc,GAAG,EAAEY,QAAS;UAACkB,QAAQ;QAAA;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACjC,eACDlB,OAAA;UACEiD,IAAI,EAAC,QAAQ;UACb1B,OAAO,EAAEa,cAAe;UACxBzB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAExBN,QAAQ,KAAK,OAAO,GAAG,mBAAmB,GAAG;QAAW;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAENlB,OAAA;QAAKW,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCZ,OAAA;UAAKmB,KAAK,EAAE;YAAE+B,SAAS,EAAE,QAAQ;YAAE9B,SAAS,EAAE;UAAO,CAAE;UAAAR,QAAA,EACpDgB,WAAW,iBAAI5B,OAAA;YAAAY,QAAA,GAAG,kBAAgB,EAACkB,SAAS,EAAC,GAAC;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACNlB,OAAA;UACEiD,IAAI,EAAC,QAAQ;UACb1B,OAAO,EAAEY,iBAAkB;UAC3BxB,SAAS,EAAC,eAAe;UACzBQ,KAAK,EAAE;YACL6B,YAAY,EAAE,MAAM;YACpBG,OAAO,EAAE,UAAU;YACnBC,eAAe,EAAE,SAAS;YAC1B9B,KAAK,EAAE,OAAO;YACd+B,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,MAAM,EAAE;UACV,CAAE;UAAA3C,QAAA,EAEDgB,WAAW,GACPtB,QAAQ,KAAK,OAAO,GAAG,kBAAkB,GAAG,gBAAgB,GAC7DA,QAAQ,KAAK,OAAO,GACpBD,WAAW,KAAK,CAAC,GACf,qBAAqB,GACrB,oBAAoB,GACtBA,WAAW,KAAK,CAAC,GACjB,cAAc,GACd;QAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENlB,OAAA;MACEiD,IAAI,EAAC,QAAQ;MACbO,QAAQ,EAAE,CAAC9B,QAAQ,IAAIM,YAAa;MACpCrB,SAAS,EAAC,eAAe;MACzBQ,KAAK,EAAE;QACLsC,OAAO,EAAG,CAAC/B,QAAQ,IAAIM,YAAY,GAAI,GAAG,GAAG;MAC/C,CAAE;MAAApB,QAAA,EAEDN,QAAQ,KAAK,OAAO,GAAG,UAAU,GAAG;IAAQ;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAERe,QAAQ,iBAAIjC,OAAA;MAAMW,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEX,CAAC;;AAED;AAAAwC,GAAA,GAvGMjC,kBAAkB;AAwGxB,MAAMkC,WAAW,GAAGA,CAAC;EACnBC,IAAI;EACJtD,QAAQ;EACRuD,cAAc;EACdC;AACF,CAAC,KAAK;EACJ,oBACE9D,OAAA;IAAKW,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BgD,IAAI,CAACG,KAAK,gBACT/D,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA;QAAKmB,KAAK,EAAE;UACV+B,SAAS,EAAE,MAAM;UACjBF,YAAY,EAAE,KAAK;UACnB3B,QAAQ,EAAE,MAAM;UAChBC,KAAK,EAAE,MAAM;UACbiC,MAAM,EAAE;QACV,CAAE;QAAA3C,QAAA,GACCN,QAAQ,KAAK,OAAO,GAAG,gDAAgD,GAAG,0CAA0C,EAAC,eACxH;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlB,OAAA;QACEc,GAAG,EAAE8C,IAAI,CAACG,KAAM;QAChBC,GAAG,EAAC,MAAM;QACV7C,KAAK,EAAE;UAAEoC,MAAM,EAAE,SAAS;UAAEV,QAAQ,EAAE,MAAM;UAAEoB,SAAS,EAAE;QAAO,CAAE;QAClE1C,OAAO,EAAEA,CAAA,KAAMuC,iBAAiB,CAAC,IAAI;MAAE;QAAA/C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,EACD2C,cAAc,iBACb7D,OAAA;QAAKW,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1BZ,OAAA;UACEc,GAAG,EAAE8C,IAAI,CAACG,KAAM;UAChBC,GAAG,EAAC,YAAY;UAChB7C,KAAK,EAAE;YAAE0B,QAAQ,EAAE,KAAK;YAAEoB,SAAS,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAU,CAAE;UACnE3C,OAAO,EAAEA,CAAA,KAAMuC,iBAAiB,CAAC,KAAK;QAAE;UAAA/C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA,eACD,CAAC,gBAEHlB,OAAA;MAAGmB,KAAK,EAAE;QAAE2B,KAAK,EAAE,KAAK;QAAEqB,MAAM,EAAE,QAAQ;QAAEC,UAAU,EAAE,KAAK;QAAE/C,QAAQ,EAAE;MAAQ,CAAE;MAAAT,QAAA,EAChFgD,IAAI,CAACS,SAAS,CAAC/D,QAAQ;IAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAoD,GAAA,GA7CMX,WAAW;AA8CjB,MAAMY,mBAAmB,GAAG,MAAAA,CAAO;EACjClE,WAAW;EACXwB,cAAc;EACdE,YAAY;EACZM,gBAAgB;EAChBC,cAAc;EACdX,WAAW;EACX6C,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,MAAMC,SAAS,GAAGrE,WAAW,KAAK,CAAC,GAC/B;IAAEsE,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,GAC5B;IAAEA,KAAK,EAAE;EAAK,CAAC;EAEnB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAACN,SAAS,CAAC;IACnE,MAAMO,aAAa,GAAG,IAAIC,aAAa,CAACL,MAAM,CAAC;IAC/CxC,gBAAgB,CAAC5B,OAAO,GAAGwE,aAAa;IACxC3C,cAAc,CAAC7B,OAAO,GAAG,EAAE;IAE3BwE,aAAa,CAACE,KAAK,CAAC,CAAC;IACrBtD,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMuD,iBAAiB,GAAGC,WAAW,CAAC,MAAM;MAC1CtD,YAAY,CAAEuD,IAAI,IAAK;QACrB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACbC,aAAa,CAACH,iBAAiB,CAAC;UAChC,IAAIH,aAAa,CAACO,KAAK,KAAK,WAAW,EAAE;YACvCP,aAAa,CAACQ,IAAI,CAAC,CAAC;YACpBZ,MAAM,CAACa,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;YACjD5D,cAAc,CAAC,KAAK,CAAC;UACvB;UACA,OAAO,CAAC;QACV;QACA,OAAOyD,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAERL,aAAa,CAACG,iBAAiB,GAAGA,iBAAiB;IAEnDH,aAAa,CAACY,gBAAgB,CAAC,eAAe,EAAGC,KAAK,IAAK;MACzD,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;QACvB1D,cAAc,CAAC7B,OAAO,CAACwF,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;MACzC;IACF,CAAC,CAAC;IAEFd,aAAa,CAACY,gBAAgB,CAAC,MAAM,EAAE,MAAM;MAC3C,MAAMK,SAAS,GAAG,IAAIC,IAAI,CAAC7D,cAAc,CAAC7B,OAAO,EAAE;QACjDwC,IAAI,EAAE5C,WAAW,KAAK,CAAC,GAAG,YAAY,GAAG;MAC3C,CAAC,CAAC;MAEF,MAAM+F,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;MAC1CvE,WAAW,CAACyE,GAAG,CAAC;MAEhB,IAAI/F,WAAW,KAAK,CAAC,EAAE;QACrBmE,YAAY,CAAC0B,SAAS,CAAC;MACzB,CAAC,MAAM;QACLzB,YAAY,CAACyB,SAAS,CAAC;MACzB;MAEArE,cAAc,CAAC,KAAK,CAAC;MACrBS,cAAc,CAAC7B,OAAO,GAAG,EAAE;MAC3B8E,aAAa,CAACN,aAAa,CAACG,iBAAiB,CAAC;IAChD,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;IAC5C1E,cAAc,CAAC,KAAK,CAAC;IACrB6E,KAAK,CAAC,yBAAyBrG,WAAW,KAAK,CAAC,GAAG,QAAQ,GAAG,YAAY,uCAAuC,CAAC;EACpH;AACF,CAAC;AAED,MAAMsG,kBAAkB,GAAGA,CAACtE,gBAAgB,EAAEN,YAAY,KAAK;EAC7D,IAAIM,gBAAgB,CAAC5B,OAAO,EAAE;IAC5B4B,gBAAgB,CAAC5B,OAAO,CAACgF,IAAI,CAAC,CAAC;IAC/BpD,gBAAgB,CAAC5B,OAAO,CAACoE,MAAM,CAACa,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;IAC1EF,aAAa,CAAClD,gBAAgB,CAAC5B,OAAO,CAAC2E,iBAAiB,CAAC;IACzDrD,YAAY,CAAC,CAAC,CAAC;EACjB;AACF,CAAC;AAED,SACE5B,gBAAgB,EAChBsB,kBAAkB,EAClBkC,WAAW,EACXY,mBAAmB,EACnBoC,kBAAkB;AAClB,IAAAnF,EAAA,EAAAkC,GAAA,EAAAY,GAAA;AAAAsC,YAAA,CAAApF,EAAA;AAAAoF,YAAA,CAAAlD,GAAA;AAAAkD,YAAA,CAAAtC,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}