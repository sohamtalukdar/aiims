{"ast":null,"code":"const handleTabClick = ({\n  id,\n  completedTasks,\n  selectedTab,\n  setCountdown,\n  setMediaURL,\n  mediaChunksRef,\n  mediaRecorderRef,\n  setSelectedTab,\n  setShowModal,\n  setShowInitialInstructions\n}) => {\n  try {\n    // Validate inputs\n    if (id == null || !completedTasks || !mediaChunksRef || !mediaRecorderRef) {\n      console.error('Required parameters missing in handleTabClick');\n      return;\n    }\n\n    // Prevent navigation to completed tasks\n    if (completedTasks.has(id)) {\n      return;\n    }\n\n    // Prevent going back to previous tasks\n    if (id < selectedTab) {\n      return;\n    }\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  } catch (error) {\n    console.error('Error in handleTabClick:', error);\n    // You might want to handle this error more gracefully in the UI\n  }\n};\nexport default handleTabClick;","map":{"version":3,"names":["handleTabClick","id","completedTasks","selectedTab","setCountdown","setMediaURL","mediaChunksRef","mediaRecorderRef","setSelectedTab","setShowModal","setShowInitialInstructions","console","error","has","current","state","stop","stream","getTracks","forEach","track"],"sources":["/home/soham/aiims/my-app/src/handleTabClick.js"],"sourcesContent":["const handleTabClick = ({\n    id,\n    completedTasks,\n    selectedTab,\n    setCountdown,\n    setMediaURL,\n    mediaChunksRef,\n    mediaRecorderRef,\n    setSelectedTab,\n    setShowModal,\n    setShowInitialInstructions\n  }) => {\n    try {\n        // Validate inputs\n        if (id == null || !completedTasks || !mediaChunksRef || !mediaRecorderRef) {\n          console.error('Required parameters missing in handleTabClick');\n          return;\n        }\n    \n        // Prevent navigation to completed tasks\n        if (completedTasks.has(id)) {\n          return;\n        }\n    \n        // Prevent going back to previous tasks\n        if (id < selectedTab) {\n          return;\n        }\n\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n  \n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  \n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    setShowInitialInstructions(id === 2);\n  \n} catch (error) {\n    console.error('Error in handleTabClick:', error);\n    // You might want to handle this error more gracefully in the UI\n  }\n};\n  export default handleTabClick;"],"mappings":"AAAA,MAAMA,cAAc,GAAGA,CAAC;EACpBC,EAAE;EACFC,cAAc;EACdC,WAAW;EACXC,YAAY;EACZC,WAAW;EACXC,cAAc;EACdC,gBAAgB;EAChBC,cAAc;EACdC,YAAY;EACZC;AACF,CAAC,KAAK;EACJ,IAAI;IACA;IACA,IAAIT,EAAE,IAAI,IAAI,IAAI,CAACC,cAAc,IAAI,CAACI,cAAc,IAAI,CAACC,gBAAgB,EAAE;MACzEI,OAAO,CAACC,KAAK,CAAC,+CAA+C,CAAC;MAC9D;IACF;;IAEA;IACA,IAAIV,cAAc,CAACW,GAAG,CAACZ,EAAE,CAAC,EAAE;MAC1B;IACF;;IAEA;IACA,IAAIA,EAAE,GAAGE,WAAW,EAAE;MACpB;IACF;IAEJC,YAAY,CAAC,EAAE,CAAC;IAChBC,WAAW,CAAC,EAAE,CAAC;IACfC,cAAc,CAACQ,OAAO,GAAG,EAAE;IAE3B,IAAIP,gBAAgB,CAACO,OAAO,IAAIP,gBAAgB,CAACO,OAAO,CAACC,KAAK,KAAK,WAAW,EAAE;MAC9ER,gBAAgB,CAACO,OAAO,CAACE,IAAI,CAAC,CAAC;MAC/BT,gBAAgB,CAACO,OAAO,CAACG,MAAM,CAACC,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC;IAC5E;IAEAR,cAAc,CAACP,EAAE,CAAC;IAClBQ,YAAY,CAACR,EAAE,KAAK,CAAC,CAAC;IACtBS,0BAA0B,CAACT,EAAE,KAAK,CAAC,CAAC;EAExC,CAAC,CAAC,OAAOW,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD;EACF;AACF,CAAC;AACC,eAAeZ,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}