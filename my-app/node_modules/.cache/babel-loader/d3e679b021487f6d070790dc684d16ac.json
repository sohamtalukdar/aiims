{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js\";\nimport React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nfunction FileUploadForm() {\n  const {\n    state\n  } = useLocation(); // If needed later, retain this\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n  const tasks = [{\n    id: 0,\n    title: '1st Task',\n    paragraph: {\n      hindi: `एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था। नीता बचपन से ही बहुत ही समझदार थी। वह हमेशा अपने दादी के साथ खेलती और बातें करती थी। \n\n        एक दिन, नीता के पास एक खास खिलौना आया। यह एक सुंदर सा किताब था, जिसमें फूलों के बारे में बहुत सी ख़ूबसूरत तस्वीरें थीं। नीता ने दादी के साथ उस किताब को देखकर खुशी-खुशी पढ़ना शुरू किया। \n\n        उसके बाद, नीता ने अपने दोस्तों को भी वो किताब दिखाई और सबको फूलों के बारे में बताया। और सबको यह सिखाया कि प्रकृति की सुंदर सी चीजों को सबको समझने का अवसर मिलता है।\n\n        इस कहानी का संदेश है कि हमें प्रकृति की सुंदरता को समझने और महसूस करने का समय निकालना चाहिए, और हमें अपने परिवार और दोस्तों के साथ उसे साझा करना चाहिए।`,\n      english: `Once upon a time, in a small village, there was a lovely little girl named Neeta. Neeta was very wise from a young age. She would always play with her grandmother and chat with her.\n\n        One day, Neeta got a special toy, a beautiful book with many lovely pictures of flowers. She happily started reading it with her grandmother.\n\n        Later, she showed the book to her friends and told them about the flowers, teaching everyone about the beauty of nature.\n\n        The message of this story is that we should take time to understand and appreciate nature's beauty and share it with family and friends.`\n    }\n  }, {\n    id: 1,\n    title: '2nd Task',\n    paragraph: {\n      hindi: 'यह दूसरी कार्य के लिए अनुच्छेद है।',\n      english: 'This is the paragraph for the 2nd task.'\n    }\n  }, {\n    id: 2,\n    title: '3rd Task',\n    paragraph: {\n      hindi: 'यह तीसरी कार्य के लिए अनुच्छेद है।',\n      english: 'This is the paragraph for the 3rd task.'\n    }\n  }, {\n    id: 3,\n    title: '4th Task',\n    paragraph: {\n      hindi: 'यह चौथे कार्य के लिए अनुच्छेद है।',\n      english: 'This is the paragraph for the 4th task.'\n    }\n  }];\n  const handleTabClick = id => {\n    setSelectedTab(id);\n  };\n  const toggleLanguage = e => {\n    e.preventDefault();\n    setLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');\n  };\n  const handleAudioRecord = () => {\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaRecorder.start();\n        setIsRecording(true);\n        let audioChunks = [];\n        mediaRecorder.addEventListener('dataavailable', event => {\n          audioChunks.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const audioBlob = new Blob(audioChunks, {\n            type: 'audio/mpeg'\n          });\n          const audioFile = new File([audioBlob], 'audio.mp3', {\n            type: 'audio/mpeg'\n          });\n          setAudioURL(URL.createObjectURL(audioBlob)); // Use URL instead of setAudio\n          setIsRecording(false);\n        });\n      });\n    } else {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name); // Use state here if needed\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    formData.append('audio', audioURL); // Use audio URL instead of audio file\n\n    const response = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    console.log(result);\n    alert(`Uploaded successfully: Audio URL: ${result.audio_url}`);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gradient-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"div\", {\n    key: task.id,\n    className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n    onClick: () => handleTabClick(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, task.title))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleLanguage,\n    onMouseDown: e => e.preventDefault(),\n    style: {\n      marginBottom: '10px',\n      padding: '8px 12px',\n      cursor: 'pointer',\n      backgroundColor: '#007bff',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Switch to \", language === 'hindi' ? 'English' : 'Hindi'), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, tasks[selectedTab].title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, tasks[selectedTab].paragraph[language]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"audio-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, audioURL ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"audio\", {\n    src: audioURL,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setAudioURL(\"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, \"Re-record\")) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAudioRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, isRecording ? 'Stop Recording' : 'Record Voice')), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !audioURL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n}\nexport default FileUploadForm;","map":{"version":3,"names":["React","useState","useRef","useLocation","FileUploadForm","state","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","audioURL","setAudioURL","mediaRecorderRef","tasks","id","title","paragraph","hindi","english","handleTabClick","toggleLanguage","e","preventDefault","prev","handleAudioRecord","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","current","start","audioChunks","addEventListener","event","push","data","audioBlob","Blob","type","audioFile","File","URL","createObjectURL","stop","handleSubmit","formData","FormData","append","name","age","response","fetch","method","body","result","json","console","log","alert","audio_url","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","task","key","onClick","onMouseDown","style","marginBottom","padding","cursor","backgroundColor","color","border","borderRadius","Fragment","src","controls","onSubmit","disabled"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction FileUploadForm() {\n  const { state } = useLocation(); // If needed later, retain this\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioURL, setAudioURL] = useState(\"\");\n  const mediaRecorderRef = useRef(null);\n\n  const tasks = [\n    {\n      id: 0,\n      title: '1st Task',\n      paragraph: {\n        hindi: `एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था। नीता बचपन से ही बहुत ही समझदार थी। वह हमेशा अपने दादी के साथ खेलती और बातें करती थी। \n\n        एक दिन, नीता के पास एक खास खिलौना आया। यह एक सुंदर सा किताब था, जिसमें फूलों के बारे में बहुत सी ख़ूबसूरत तस्वीरें थीं। नीता ने दादी के साथ उस किताब को देखकर खुशी-खुशी पढ़ना शुरू किया। \n\n        उसके बाद, नीता ने अपने दोस्तों को भी वो किताब दिखाई और सबको फूलों के बारे में बताया। और सबको यह सिखाया कि प्रकृति की सुंदर सी चीजों को सबको समझने का अवसर मिलता है।\n\n        इस कहानी का संदेश है कि हमें प्रकृति की सुंदरता को समझने और महसूस करने का समय निकालना चाहिए, और हमें अपने परिवार और दोस्तों के साथ उसे साझा करना चाहिए।`,\n        english: `Once upon a time, in a small village, there was a lovely little girl named Neeta. Neeta was very wise from a young age. She would always play with her grandmother and chat with her.\n\n        One day, Neeta got a special toy, a beautiful book with many lovely pictures of flowers. She happily started reading it with her grandmother.\n\n        Later, she showed the book to her friends and told them about the flowers, teaching everyone about the beauty of nature.\n\n        The message of this story is that we should take time to understand and appreciate nature's beauty and share it with family and friends.`\n      }\n    },\n    {\n      id: 1,\n      title: '2nd Task',\n      paragraph: {\n        hindi: 'यह दूसरी कार्य के लिए अनुच्छेद है।',\n        english: 'This is the paragraph for the 2nd task.'\n      }\n    },\n    {\n      id: 2,\n      title: '3rd Task',\n      paragraph: {\n        hindi: 'यह तीसरी कार्य के लिए अनुच्छेद है।',\n        english: 'This is the paragraph for the 3rd task.'\n      }\n    },\n    {\n      id: 3,\n      title: '4th Task',\n      paragraph: {\n        hindi: 'यह चौथे कार्य के लिए अनुच्छेद है।',\n        english: 'This is the paragraph for the 4th task.'\n      }\n    },\n  ];\n\n  const handleTabClick = (id) => {\n    setSelectedTab(id);\n  };\n\n  const toggleLanguage = (e) => {\n    e.preventDefault();\n    setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  };\n\n  const handleAudioRecord = () => {\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia({ audio: true })\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaRecorder.start();\n          setIsRecording(true);\n\n          let audioChunks = [];\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            audioChunks.push(event.data);\n          });\n\n          mediaRecorder.addEventListener('stop', () => {\n            const audioBlob = new Blob(audioChunks, { type: 'audio/mpeg' });\n            const audioFile = new File([audioBlob], 'audio.mp3', { type: 'audio/mpeg' });\n            setAudioURL(URL.createObjectURL(audioBlob));  // Use URL instead of setAudio\n            setIsRecording(false);\n          });\n        });\n    } else {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('name', state?.name);  // Use state here if needed\n    formData.append('age', state?.age);\n    formData.append('audio', audioURL);  // Use audio URL instead of audio file\n\n    const response = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n\n    const result = await response.json();\n    console.log(result);\n    alert(`Uploaded successfully: Audio URL: ${result.audio_url}`);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"gradient-bg\"></div>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n              onClick={() => handleTabClick(task.id)}\n            >\n              {task.title}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"content\">\n          <button\n            onClick={toggleLanguage}\n            onMouseDown={(e) => e.preventDefault()}\n            style={{\n              marginBottom: '10px',\n              padding: '8px 12px',\n              cursor: 'pointer',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n            }}\n          >\n            Switch to {language === 'hindi' ? 'English' : 'Hindi'}\n          </button>\n\n          <h1>{tasks[selectedTab].title}</h1>\n          <p>{tasks[selectedTab].paragraph[language]}</p>\n\n          <div className=\"audio-controls\">\n            {audioURL ? (\n              <>\n                <audio src={audioURL} controls />\n                <button onClick={() => setAudioURL(\"\")}>Re-record</button>\n              </>\n            ) : (\n              <button onClick={handleAudioRecord}>\n                {isRecording ? 'Stop Recording' : 'Record Voice'}\n              </button>\n            )}\n          </div>\n\n          <form onSubmit={handleSubmit}>\n            <button type=\"submit\" disabled={!audioURL}>Submit</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}