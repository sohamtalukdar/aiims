{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// FileUploadForm.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './tasks';\nimport InstructionModal from './InstructionModal';\nimport InitialPopup from './InitialPopup';\nimport TaskContent from './TaskContent';\nimport { handleSubmit } from './handleSubmit';\nimport { handleTabClick } from './handleTabClick';\n\n// Custom hook for form state management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useFormState = (initialState = {}) => {\n  _s();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n  return {\n    isSubmitting,\n    setIsSubmitting,\n    language,\n    setLanguage,\n    isRecording,\n    setIsRecording,\n    mediaURL,\n    setMediaURL,\n    showTick,\n    setShowTick,\n    completedTasks,\n    setCompletedTasks,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    testCompleted,\n    setTestCompleted,\n    audioBlob,\n    setAudioBlob,\n    videoBlob,\n    setVideoBlob,\n    allSelectedAnswers,\n    setAllSelectedAnswers\n  };\n};\n\n// Media Recording Component\n_s(useFormState, \"WooF98+e/0JfgzJNJwdWvKcr37M=\");\nconst MediaRecording = ({\n  selectedTab,\n  language,\n  isRecording,\n  mediaURL,\n  countdown,\n  onRecord,\n  onReRecord\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center gap-4\",\n    children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center gap-2\",\n      children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n        src: mediaURL,\n        controls: true,\n        className: \"max-w-[350px] w-full h-auto mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: mediaURL,\n        controls: true,\n        className: \"w-full max-w-[350px]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onReRecord,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\",\n        children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center gap-2\",\n      children: [isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-2\",\n        children: [\"Time remaining: \", countdown, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onRecord,\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\",\n        children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Patient ID Display Component\n_c = MediaRecording;\nconst PatientIdDisplay = ({\n  patientId\n}) => {\n  if (!patientId) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-5 right-5 bg-white p-3 rounded-md shadow-md border border-gray-200 z-50 font-mono text-sm\",\n    children: [\"Patient ID: \", patientId]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n// Main Component\n_c2 = PatientIdDisplay;\nfunction FileUploadForm() {\n  _s2();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const formState = useFormState();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  // Validation effect\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Session storage effect\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(formState.allSelectedAnswers));\n  }, [formState.allSelectedAnswers]);\n\n  // Handle media recording\n  const handleRecordClick = async () => {\n    if (formState.isRecording) {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: selectedTab === 1\n        });\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaChunksRef.current = [];\n        mediaRecorderRef.current.ondataavailable = event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        };\n        mediaRecorderRef.current.onstop = () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          const mediaURL = URL.createObjectURL(mediaBlob);\n          formState.setMediaURL(mediaURL);\n          formState.setIsRecording(false);\n        };\n        mediaRecorderRef.current.start();\n        formState.setIsRecording(true);\n      } catch (error) {\n        console.error('Error starting recording:', error);\n        formState.setIsRecording(false);\n      }\n    }\n  };\n\n  // Handle form submission\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (formState.isSubmitting || !formState.mediaURL) return;\n    try {\n      formState.setIsSubmitting(true);\n      await handleSubmit({\n        e,\n        state,\n        selectedTab,\n        formState,\n        navigate,\n        mediaRecorderRef,\n        mediaChunksRef,\n        setSelectedTab,\n        tasks\n      });\n    } catch (error) {\n      console.error('Form submission error:', error);\n    } finally {\n      formState.setIsSubmitting(false);\n    }\n  };\n  if (showInitialPopup) {\n    return /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: formState.language,\n      setLanguage: formState.setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(PatientIdDisplay, {\n      patientId: state === null || state === void 0 ? void 0 : state.patientId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto p-6\",\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        selectedTab: selectedTab,\n        language: formState.language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mb-4\",\n          children: tasks.filter(task => !(task.id === 2 && formState.testCompleted)).map(task => {\n            const isDisabled = formState.completedTasks.has(task.id) || task.id < selectedTab;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => !isDisabled && handleTabClick({\n                id: task.id,\n                formState,\n                setSelectedTab,\n                setShowModal,\n                setCountdown,\n                mediaRecorderRef,\n                mediaChunksRef\n              }),\n              className: `\n                      px-4 py-2 rounded transition-colors\n                      ${selectedTab === task.id ? 'bg-blue-500 text-white' : 'bg-gray-100'}\n                      ${isDisabled ? 'opacity-60 cursor-not-allowed' : 'hover:bg-blue-400'}\n                      ${formState.completedTasks.has(task.id) ? 'bg-gray-200' : ''}\n                    `,\n              disabled: isDisabled,\n              children: [task.title[formState.language], formState.completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 text-green-500\",\n                children: \"\\u2713\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n          task: tasks[selectedTab],\n          language: formState.language,\n          testCompleted: formState.testCompleted,\n          currentQuestionIndex: formState.currentQuestionIndex,\n          setCurrentQuestionIndex: formState.setCurrentQuestionIndex,\n          allSelectedAnswers: formState.allSelectedAnswers,\n          setAllSelectedAnswers: formState.setAllSelectedAnswers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit,\n          className: \"mt-6\",\n          children: [/*#__PURE__*/_jsxDEV(MediaRecording, {\n            selectedTab: selectedTab,\n            language: formState.language,\n            isRecording: formState.isRecording,\n            mediaURL: formState.mediaURL,\n            countdown: countdown,\n            onRecord: handleRecordClick,\n            onReRecord: () => {\n              formState.setMediaURL(\"\");\n              formState.setVideoBlob(null);\n              formState.setAudioBlob(null);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !formState.mediaURL || formState.isSubmitting,\n            className: `\n                  mt-4 px-6 py-2 bg-green-500 text-white rounded\n                  ${!formState.mediaURL || formState.isSubmitting ? 'opacity-50 cursor-not-allowed' : 'hover:bg-green-600'}\n                `,\n            children: formState.language === 'hindi' ? 'जमा करें' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), formState.showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-green-500 text-xl\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-xl max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: formState.language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-6\",\n          children: formState.language === 'hindi' ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?' : 'Refreshing the page will remove all current entries. Do you want to continue?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowRefreshWarning(false),\n            className: \"px-4 py-2 text-gray-600 hover:text-gray-800\",\n            children: formState.language === 'hindi' ? 'रद्द करें' : 'Cancel'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => window.location.reload(),\n            className: \"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n            children: formState.language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadForm, \"FJ78mskMPfWtaXlpO30rM7IVda4=\", false, function () {\n  return [useNavigate, useLocation, useFormState];\n});\n_c3 = FileUploadForm;\nexport default FileUploadForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MediaRecording\");\n$RefreshReg$(_c2, \"PatientIdDisplay\");\n$RefreshReg$(_c3, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","useNavigate","tasks","InstructionModal","InitialPopup","TaskContent","handleSubmit","handleTabClick","jsxDEV","_jsxDEV","useFormState","initialState","_s","isSubmitting","setIsSubmitting","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","completedTasks","setCompletedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","testCompleted","setTestCompleted","audioBlob","setAudioBlob","videoBlob","setVideoBlob","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","MediaRecording","selectedTab","countdown","onRecord","onReRecord","className","children","src","controls","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","PatientIdDisplay","patientId","_c2","FileUploadForm","_s2","navigate","state","formState","showModal","setShowModal","setSelectedTab","showInitialPopup","setShowInitialPopup","setCountdown","showRefreshWarning","setShowRefreshWarning","mediaRecorderRef","mediaChunksRef","name","age","setItem","stringify","handleRecordClick","current","stop","stream","getTracks","forEach","track","navigator","mediaDevices","getUserMedia","audio","video","MediaRecorder","ondataavailable","event","data","size","push","onstop","mediaBlob","Blob","URL","createObjectURL","start","error","console","handleFormSubmit","e","preventDefault","onClose","filter","task","id","map","isDisabled","has","disabled","title","onSubmit","window","location","reload","_c3","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["// FileUploadForm.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './tasks';\nimport InstructionModal from './InstructionModal';\nimport InitialPopup from './InitialPopup';\nimport TaskContent from './TaskContent';\nimport { handleSubmit } from './handleSubmit';\nimport { handleTabClick } from './handleTabClick';\n\n// Custom hook for form state management\nconst useFormState = (initialState = {}) => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n\n  return {\n    isSubmitting,\n    setIsSubmitting,\n    language,\n    setLanguage,\n    isRecording,\n    setIsRecording,\n    mediaURL,\n    setMediaURL,\n    showTick,\n    setShowTick,\n    completedTasks,\n    setCompletedTasks,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    testCompleted,\n    setTestCompleted,\n    audioBlob,\n    setAudioBlob,\n    videoBlob,\n    setVideoBlob,\n    allSelectedAnswers,\n    setAllSelectedAnswers\n  };\n};\n\n// Media Recording Component\nconst MediaRecording = ({ \n  selectedTab, \n  language, \n  isRecording, \n  mediaURL, \n  countdown,\n  onRecord,\n  onReRecord \n}) => {\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      {mediaURL ? (\n        <div className=\"flex flex-col items-center gap-2\">\n          {selectedTab === 1 ? (\n            <video\n              src={mediaURL}\n              controls\n              className=\"max-w-[350px] w-full h-auto mb-2\"\n            />\n          ) : (\n            <audio src={mediaURL} controls className=\"w-full max-w-[350px]\" />\n          )}\n          <button\n            type=\"button\"\n            onClick={onReRecord}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n          >\n            {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n          </button>\n        </div>\n      ) : (\n        <div className=\"flex flex-col items-center gap-2\">\n          {isRecording && (\n            <div className=\"text-center mt-2\">Time remaining: {countdown}s</div>\n          )}\n          <button\n            type=\"button\"\n            onClick={onRecord}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n          >\n            {isRecording\n              ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n              : language === 'hindi'\n              ? selectedTab === 1\n                ? 'वीडियो रिकॉर्ड करें'\n                : 'आवाज़ रिकॉर्ड करें'\n              : selectedTab === 1\n              ? 'Record Video'\n              : 'Record Voice'}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Patient ID Display Component\nconst PatientIdDisplay = ({ patientId }) => {\n  if (!patientId) return null;\n  \n  return (\n    <div className=\"fixed top-5 right-5 bg-white p-3 rounded-md shadow-md border border-gray-200 z-50 font-mono text-sm\">\n      Patient ID: {patientId}\n    </div>\n  );\n};\n\n// Main Component\nfunction FileUploadForm() {\n  const navigate = useNavigate();\n  const { state } = useLocation();\n  const formState = useFormState();\n  \n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  // Validation effect\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  // Session storage effect\n  useEffect(() => {\n    sessionStorage.setItem(\n      \"allSelectedAnswers\",\n      JSON.stringify(formState.allSelectedAnswers)\n    );\n  }, [formState.allSelectedAnswers]);\n\n  // Handle media recording\n  const handleRecordClick = async () => {\n    if (formState.isRecording) {\n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    } else {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: selectedTab === 1\n        });\n\n        mediaRecorderRef.current = new MediaRecorder(stream);\n        mediaChunksRef.current = [];\n\n        mediaRecorderRef.current.ondataavailable = (event) => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n          }\n        };\n\n        mediaRecorderRef.current.onstop = () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          const mediaURL = URL.createObjectURL(mediaBlob);\n          formState.setMediaURL(mediaURL);\n          formState.setIsRecording(false);\n        };\n\n        mediaRecorderRef.current.start();\n        formState.setIsRecording(true);\n      } catch (error) {\n        console.error('Error starting recording:', error);\n        formState.setIsRecording(false);\n      }\n    }\n  };\n\n  // Handle form submission\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    if (formState.isSubmitting || !formState.mediaURL) return;\n\n    try {\n      formState.setIsSubmitting(true);\n      await handleSubmit({\n        e,\n        state,\n        selectedTab,\n        formState,\n        navigate,\n        mediaRecorderRef,\n        mediaChunksRef,\n        setSelectedTab,\n        tasks\n      });\n    } catch (error) {\n      console.error('Form submission error:', error);\n    } finally {\n      formState.setIsSubmitting(false);\n    }\n  };\n\n  if (showInitialPopup) {\n    return (\n      <InitialPopup\n        language={formState.language}\n        setLanguage={formState.setLanguage}\n        onClose={() => setShowInitialPopup(false)}\n      />\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <PatientIdDisplay patientId={state?.patientId} />\n\n      <div className=\"max-w-4xl mx-auto p-6\">\n        {showModal && (\n          <InstructionModal\n            onClose={() => setShowModal(false)}\n            selectedTab={selectedTab}\n            language={formState.language}\n          />\n        )}\n\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\n          <div className=\"flex gap-2 mb-4\">\n            {tasks\n              .filter((task) => !(task.id === 2 && formState.testCompleted))\n              .map((task) => {\n                const isDisabled = formState.completedTasks.has(task.id) || task.id < selectedTab;\n                return (\n                  <button\n                    key={task.id}\n                    onClick={() => !isDisabled && handleTabClick({\n                      id: task.id,\n                      formState,\n                      setSelectedTab,\n                      setShowModal,\n                      setCountdown,\n                      mediaRecorderRef,\n                      mediaChunksRef\n                    })}\n                    className={`\n                      px-4 py-2 rounded transition-colors\n                      ${selectedTab === task.id ? 'bg-blue-500 text-white' : 'bg-gray-100'}\n                      ${isDisabled ? 'opacity-60 cursor-not-allowed' : 'hover:bg-blue-400'}\n                      ${formState.completedTasks.has(task.id) ? 'bg-gray-200' : ''}\n                    `}\n                    disabled={isDisabled}\n                  >\n                    {task.title[formState.language]}\n                    {formState.completedTasks.has(task.id) && (\n                      <span className=\"ml-1 text-green-500\">✓</span>\n                    )}\n                  </button>\n                );\n              })}\n          </div>\n\n          <TaskContent\n            task={tasks[selectedTab]}\n            language={formState.language}\n            testCompleted={formState.testCompleted}\n            currentQuestionIndex={formState.currentQuestionIndex}\n            setCurrentQuestionIndex={formState.setCurrentQuestionIndex}\n            allSelectedAnswers={formState.allSelectedAnswers}\n            setAllSelectedAnswers={formState.setAllSelectedAnswers}\n          />\n\n          {selectedTab !== 2 && (\n            <form onSubmit={handleFormSubmit} className=\"mt-6\">\n              <MediaRecording\n                selectedTab={selectedTab}\n                language={formState.language}\n                isRecording={formState.isRecording}\n                mediaURL={formState.mediaURL}\n                countdown={countdown}\n                onRecord={handleRecordClick}\n                onReRecord={() => {\n                  formState.setMediaURL(\"\");\n                  formState.setVideoBlob(null);\n                  formState.setAudioBlob(null);\n                }}\n              />\n\n              <button\n                type=\"submit\"\n                disabled={!formState.mediaURL || formState.isSubmitting}\n                className={`\n                  mt-4 px-6 py-2 bg-green-500 text-white rounded\n                  ${(!formState.mediaURL || formState.isSubmitting) \n                    ? 'opacity-50 cursor-not-allowed' \n                    : 'hover:bg-green-600'}\n                `}\n              >\n                {formState.language === 'hindi' ? 'जमा करें' : 'Submit'}\n              </button>\n\n              {formState.showTick && (\n                <span className=\"ml-2 text-green-500 text-xl\">✔</span>\n              )}\n            </form>\n          )}\n        </div>\n      </div>\n\n      {showRefreshWarning && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-xl max-w-md w-full\">\n            <h2 className=\"text-xl font-bold mb-4\">\n              {formState.language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}\n            </h2>\n            <p className=\"mb-6\">\n              {formState.language === 'hindi' \n                ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n            </p>\n            <div className=\"flex justify-end gap-4\">\n              <button\n                onClick={() => setShowRefreshWarning(false)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                {formState.language === 'hindi' ? 'रद्द करें' : 'Cancel'}\n              </button>\n              <button\n                onClick={() => window.location.reload()}\n                className=\"px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n              >\n                {formState.language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}