{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport InstructionModal from './components/InstructionModal';\nimport InitialInstructions from './components/InitialInstructions.js';\nimport MultipleChoiceTask from './components/MultipleChoiceTask';\nimport TaskContent from './components/TaskContent';\nimport InitialPopup from './components/InitialPopup';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  // ... (all your state variables)\n\n  // ... (your tasks array)\n\n  // ... (your functions: handleTabClick, handleMediaRecord, handleReRecord, handleSubmit)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: language,\n      setLanguage: setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        selectedTab: selectedTab,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            children: task.title[language]\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"task-title\",\n            children: tasks[selectedTab].title[language]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n            task: tasks[selectedTab],\n            language: language,\n            testCompleted: testCompleted,\n            showInitialInstructions: showInitialInstructions,\n            setShowInitialInstructions: setShowInitialInstructions,\n            setTestCompleted: setTestCompleted,\n            setShowImageModal: setShowImageModal,\n            showImageModal: showImageModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: '15px',\n              marginTop: '20px',\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-controls\",\n              children: mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: mediaURL,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                  src: mediaURL,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleReRecord,\n                  className: \"custom-button\",\n                  children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleMediaRecord,\n                style: {\n                  marginBottom: '10px',\n                  padding: '8px 12px',\n                  cursor: 'pointer',\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px'\n                },\n                children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !mediaURL,\n              className: \"custom-button\",\n              children: language === 'hindi' ? 'जमा करें' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tick\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUploadForm, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n  return [useLocation];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useLocation","InstructionModal","InitialInstructions","MultipleChoiceTask","TaskContent","InitialPopup","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s","state","className","children","showInitialPopup","language","setLanguage","onClose","setShowInitialPopup","fileName","_jsxFileName","lineNumber","columnNumber","showModal","setShowModal","selectedTab","tasks","filter","task","id","testCompleted","map","onClick","handleTabClick","title","showInitialInstructions","setShowInitialInstructions","setTestCompleted","setShowImageModal","showImageModal","onSubmit","handleSubmit","style","display","flexDirection","alignItems","gap","marginTop","position","mediaURL","src","controls","type","handleReRecord","handleMediaRecord","marginBottom","padding","cursor","backgroundColor","color","border","borderRadius","isRecording","disabled","showTick","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport InstructionModal from './components/InstructionModal';\nimport InitialInstructions from './components/InitialInstructions.js';\nimport MultipleChoiceTask from './components/MultipleChoiceTask';\nimport TaskContent from './components/TaskContent';\nimport InitialPopup from './components/InitialPopup';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  // ... (all your state variables)\n\n  // ... (your tasks array)\n\n  // ... (your functions: handleTabClick, handleMediaRecord, handleReRecord, handleSubmit)\n\n  return (\n    <div className=\"app\">\n      {showInitialPopup ? (\n        <InitialPopup language={language} setLanguage={setLanguage} onClose={() => setShowInitialPopup(false)} />\n      ) : (\n        <>\n          {showModal && (\n            <InstructionModal\n              onClose={() => setShowModal(false)}\n              selectedTab={selectedTab}\n              language={language}\n            />\n          )}\n\n          <div className=\"gradient-bg\"></div>\n          <div className=\"container\">\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                  >\n                    {task.title[language]}\n                  </div>\n                ))}\n            </div>\n            <div className=\"content\">\n              <h1 className=\"task-title\">{tasks[selectedTab].title[language]}</h1>\n              <TaskContent\n                task={tasks[selectedTab]}\n                language={language}\n                testCompleted={testCompleted}\n                showInitialInstructions={showInitialInstructions}\n                setShowInitialInstructions={setShowInitialInstructions}\n                setTestCompleted={setTestCompleted}\n                setShowImageModal={setShowImageModal}\n                showImageModal={showImageModal}\n              />\n\n              {/* Only show the form for tasks other than the third one */}\n              {selectedTab !== 2 && (\n                <form\n                  onSubmit={handleSubmit}\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px',\n                    marginTop: '20px',\n                    position: 'relative',\n                  }}\n                >\n                  <div className=\"media-controls\">\n                    {mediaURL ? (\n                      <>\n                        {selectedTab === 1 ? (\n                          <video src={mediaURL} controls />\n                        ) : (\n                          <audio src={mediaURL} controls />\n                        )}\n                        <button type=\"button\" onClick={handleReRecord} className=\"custom-button\">\n                          {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </>\n                    ) : (\n                      <button\n                        type=\"button\"\n                        onClick={handleMediaRecord}\n                        style={{\n                          marginBottom: '10px',\n                          padding: '8px 12px',\n                          cursor: 'pointer',\n                          backgroundColor: '#007bff',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                        }}\n                      >\n                        {isRecording\n                          ? language === 'hindi'\n                            ? 'रिकॉर्डिंग रोकें'\n                            : 'Stop Recording'\n                          : language === 'hindi'\n                          ? selectedTab === 1\n                            ? 'वीडियो रिकॉर्ड करें'\n                            : 'आवाज़ रिकॉर्ड करें'\n                          : selectedTab === 1\n                          ? 'Record Video'\n                          : 'Record Voice'}\n                      </button>\n                    )}\n                  </div>\n\n                  <button type=\"submit\" disabled={!mediaURL} className=\"custom-button\">\n                    {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {showTick && <span className=\"tick\">✔</span>}\n                </form>\n              )}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}