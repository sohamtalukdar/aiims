{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nconst useMediaRecorder = selectedTab => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState('');\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        mediaRecorder.addEventListener('dataavailable', event => {\n          mediaChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          if (selectedTab === 1) {\n            setVideoBlob(mediaBlob);\n          } else {\n            setAudioBlob(mediaBlob);\n          }\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n  const handleReRecord = () => {\n    setMediaURL('');\n    if (selectedTab === 1) {\n      setVideoBlob(null);\n    } else {\n      setAudioBlob(null);\n    }\n    handleMediaRecord();\n  };\n  return {\n    isRecording,\n    mediaURL,\n    audioBlob,\n    videoBlob,\n    handleMediaRecord,\n    handleReRecord\n  };\n};\n_s(useMediaRecorder, \"/o6GFBaoJw++ca+ZNXej6SaXr40=\");\nexport default useMediaRecorder;","map":{"version":3,"names":["useState","useRef","useMediaRecorder","selectedTab","_s","isRecording","setIsRecording","mediaURL","setMediaURL","audioBlob","setAudioBlob","videoBlob","setVideoBlob","mediaRecorderRef","mediaChunksRef","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","stream","mediaRecorder","MediaRecorder","current","start","addEventListener","event","push","data","mediaBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","stop","getTracks","forEach","track","handleReRecord"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/hooks/useMediaRecorder.js"],"sourcesContent":["import { useState, useRef } from 'react';\n\nconst useMediaRecorder = (selectedTab) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState('');\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? { video: true } : { audio: true };\n\n    if (!isRecording) {\n      navigator.mediaDevices\n        .getUserMedia(mediaType)\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaChunksRef.current = [];\n          mediaRecorder.start();\n          setIsRecording(true);\n\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            mediaChunksRef.current.push(event.data);\n          });\n\n          mediaRecorder.addEventListener('stop', () => {\n            const mediaBlob = new Blob(mediaChunksRef.current, {\n              type: selectedTab === 1 ? 'video/webm' : 'audio/webm',\n            });\n\n            if (selectedTab === 1) {\n              setVideoBlob(mediaBlob);\n            } else {\n              setAudioBlob(mediaBlob);\n            }\n\n            setMediaURL(URL.createObjectURL(mediaBlob));\n            setIsRecording(false);\n          });\n        })\n        .catch((err) => {\n          console.error('Error accessing media:', err);\n          alert(\n            `Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`\n          );\n        });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach((track) => track.stop());\n      }\n    }\n  };\n\n  const handleReRecord = () => {\n    setMediaURL('');\n\n    if (selectedTab === 1) {\n      setVideoBlob(null);\n    } else {\n      setAudioBlob(null);\n    }\n\n    handleMediaRecord();\n  };\n\n  return {\n    isRecording,\n    mediaURL,\n    audioBlob,\n    videoBlob,\n    handleMediaRecord,\n    handleReRecord,\n  };\n};\n\nexport default useMediaRecorder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}