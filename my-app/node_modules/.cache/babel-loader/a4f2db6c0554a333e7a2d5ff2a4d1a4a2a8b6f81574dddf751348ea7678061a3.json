{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    state\n  } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [selectedAnswersCount, setSelectedAnswersCount] = useState(0);\n  const tasks = [{\n    id: 0,\n    title: {\n      hindi: 'पहला कार्य',\n      english: '1st Task'\n    },\n    paragraph: {\n      hindi: 'एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था।...',\n      english: 'Once upon a time, in a small village, there was a lovely little girl named Neeta...'\n    }\n  }, {\n    id: 1,\n    title: {\n      hindi: 'दूसरा कार्य',\n      english: '2nd Task'\n    },\n    image: '/image.png'\n  }, {\n    id: 2,\n    title: {\n      hindi: 'तीसरा कार्य',\n      english: '3rd Task'\n    },\n    questions: [{\n      question: {\n        hindi: 'यह कौन सा है?',\n        english: 'What is the'\n      },\n      choices: [{\n        hindi: 'वर्ष',\n        english: 'Year'\n      }, {\n        hindi: 'ऋतु',\n        english: 'Season'\n      }, {\n        hindi: 'सप्ताह का दिन',\n        english: 'Day of the week'\n      }, {\n        hindi: 'महीना',\n        english: 'Month'\n      }, {\n        hindi: 'तारीख',\n        english: 'Date'\n      }],\n      answer: null\n    }, {\n      question: {\n        hindi: 'हम अभी कहाँ हैं?',\n        english: 'Where are we now'\n      },\n      choices: [{\n        hindi: 'राज्य',\n        english: 'State'\n      }, {\n        hindi: 'देश',\n        english: 'Country'\n      }, {\n        hindi: 'शहर/नगर',\n        english: 'Town/City'\n      }, {\n        hindi: 'अस्पताल',\n        english: 'Hospital'\n      }, {\n        hindi: 'मंज़िल',\n        english: 'Floor'\n      }],\n      answer: null\n    }, {\n      question: {\n        hindi: '3 असंबंधित वस्तुओं का नाम बताएं...',\n        english: 'Name 3 unrelated objects...'\n      },\n      choices: [{\n        hindi: 'सेब',\n        english: 'Apple'\n      }, {\n        hindi: 'मेज़',\n        english: 'Table'\n      }, {\n        hindi: 'पैसा',\n        english: 'Penny'\n      }],\n      answer: null\n    }, {\n      question: {\n        hindi: '100 से पीछे की ओर सात-सात करके गिनती करें',\n        english: 'Count backward from 100 by sevens'\n      },\n      choices: [{\n        hindi: '93',\n        english: '93'\n      }, {\n        hindi: '86',\n        english: '86'\n      }, {\n        hindi: '79',\n        english: '79'\n      }, {\n        hindi: '72',\n        english: '72'\n      }, {\n        hindi: '65',\n        english: '65'\n      }],\n      answer: null\n    }]\n  }];\n  const handleTabClick = id => {\n    setSelectedTab(id);\n    setShowModal(true);\n  };\n  const toggleLanguage = e => {\n    e.preventDefault();\n    setLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');\n  };\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        mediaRecorder.addEventListener('dataavailable', event => {\n          mediaChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name);\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n    setShowTick(true);\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n  const InstructionModal = ({\n    onClose\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions / \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '1.2em',\n          color: '#555'\n        },\n        children: selectedTab === 0 ? 'Please click on the \"Record Voice\" button and read the passage out loud...' : 'Please click on the \"Record Video\" button and describe what you see in the picture...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-ok-button\",\n        onClick: onClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n  const MultipleChoiceTask = ({\n    task,\n    language,\n    setSelectedAnswersCount\n  }) => {\n    _s();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [selectedAnswers, setSelectedAnswers] = useState([]);\n    useEffect(() => {\n      setSelectedAnswersCount(selectedAnswers.length); // Update the count whenever selectedAnswers changes\n    }, [selectedAnswers, setSelectedAnswersCount]);\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswers([]); // Clear selections when moving to the next question\n      }\n    };\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n        setSelectedAnswers([]);\n      }\n    };\n    const handleAnswerSelect = index => {\n      setSelectedAnswers([index]); // Restrict to a single selection for radio buttons\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-choice-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: task.questions[currentQuestionIndex].question[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), currentQuestionIndex === 11 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/pentagon.png\",\n          alt: \"Shape for copying\",\n          style: {\n            maxWidth: '80%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: '20px'\n          },\n          children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              textAlign: 'center',\n              margin: '10px 0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              checked: selectedAnswers.includes(index),\n              onChange: () => handleAnswerSelect(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this), choice[language]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            textAlign: 'center',\n            margin: '10px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedAnswers.includes(index),\n            onChange: () => handleAnswerSelect(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        style: {\n          position: 'fixed',\n          bottom: '10px',\n          width: '100%',\n          textAlign: 'center',\n          background: '#f0f0f0',\n          padding: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: currentQuestionIndex === 0,\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: currentQuestionIndex === task.questions.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginLeft: '20px'\n          },\n          children: [\"Score: \", selectedAnswers.length, \" / 30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: task.questions.map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQuestionIndex(index),\n          style: {\n            margin: '5px',\n            padding: '5px 10px',\n            backgroundColor: index === currentQuestionIndex ? '#007bff' : '#ddd',\n            color: index === currentQuestionIndex ? 'white' : 'black',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  };\n  _s(MultipleChoiceTask, \"K4+ANlvqOgoyTZ5N6ZqhnwazjLo=\");\n  const TaskContent = ({\n    task,\n    language\n  }) => {\n    if (task.id === 2) {\n      return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n        task: task,\n        language: language,\n        setSelectedAnswersCount: setSelectedAnswersCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Task\",\n          style: {\n            cursor: 'pointer',\n            maxWidth: '100%',\n            maxHeight: '100%'\n          },\n          onClick: () => setShowImageModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.image,\n            alt: \"Popup Task\",\n            style: {\n              maxWidth: '90%',\n              maxHeight: '90%',\n              objectFit: 'contain'\n            },\n            onClick: () => setShowImageModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: '60%',\n          margin: '0 auto',\n          lineHeight: '1.8',\n          fontSize: '1.1em'\n        },\n        children: task.paragraph[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gradient-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n          onClick: () => handleTabClick(task.id),\n          children: task.title[language]\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLanguage,\n          style: {\n            marginBottom: '10px',\n            padding: '8px 12px',\n            cursor: 'pointer',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          },\n          children: language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"task-title\",\n          children: tasks[selectedTab].title[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n          task: tasks[selectedTab],\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '15px',\n            marginTop: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-controls\",\n            children: mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 42\n              }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleReRecord,\n                className: \"custom-button\",\n                children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleMediaRecord,\n              style: {\n                marginBottom: '10px',\n                padding: '8px 12px',\n                cursor: 'pointer',\n                backgroundColor: '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px'\n              },\n              children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !mediaURL,\n            className: \"custom-button\",\n            children: language === 'hindi' ? 'जमा करें' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tick\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadForm, \"AQ7xRKSc4PP+i4l25KyB0Ls90Z4=\", false, function () {\n  return [useLocation];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s2","_s","$RefreshSig$","state","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","selectedAnswersCount","setSelectedAnswersCount","tasks","id","title","hindi","english","paragraph","image","questions","question","choices","answer","handleTabClick","toggleLanguage","e","preventDefault","prev","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","stream","mediaRecorder","MediaRecorder","current","start","addEventListener","event","push","data","mediaBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","stop","getTracks","forEach","track","handleReRecord","handleSubmit","response","fetch","blob","formData","FormData","append","name","age","uploadResponse","method","body","result","json","log","media_url","setTimeout","InstructionModal","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","fontSize","color","onClick","MultipleChoiceTask","task","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","length","handleNext","handlePrevious","handleAnswerSelect","index","textAlign","src","alt","maxWidth","height","display","flexDirection","alignItems","map","choice","margin","checked","includes","onChange","position","bottom","width","background","padding","disabled","marginRight","marginLeft","_","backgroundColor","borderRadius","cursor","TaskContent","maxHeight","objectFit","lineHeight","marginBottom","border","onSubmit","gap","controls","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [selectedAnswersCount, setSelectedAnswersCount] = useState(0);\n\n  const tasks = [\n    {\n      id: 0,\n      title: { hindi: 'पहला कार्य', english: '1st Task' },\n      paragraph: {\n        hindi: 'एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था।...',\n        english: 'Once upon a time, in a small village, there was a lovely little girl named Neeta...'\n      }\n    },\n    {\n      id: 1,\n      title: { hindi: 'दूसरा कार्य', english: '2nd Task' },\n      image: '/image.png',\n    },\n    {\n      id: 2,\n      title: { hindi: 'तीसरा कार्य', english: '3rd Task' },\n      questions: [\n        {\n          question: { hindi: 'यह कौन सा है?', english: 'What is the' },\n          choices: [\n            { hindi: 'वर्ष', english: 'Year' },\n            { hindi: 'ऋतु', english: 'Season' },\n            { hindi: 'सप्ताह का दिन', english: 'Day of the week' },\n            { hindi: 'महीना', english: 'Month' },\n            { hindi: 'तारीख', english: 'Date' }\n          ],\n          answer: null,\n        },\n        {\n          question: { hindi: 'हम अभी कहाँ हैं?', english: 'Where are we now' },\n          choices: [\n            { hindi: 'राज्य', english: 'State' },\n            { hindi: 'देश', english: 'Country' },\n            { hindi: 'शहर/नगर', english: 'Town/City' },\n            { hindi: 'अस्पताल', english: 'Hospital' },\n            { hindi: 'मंज़िल', english: 'Floor' }\n          ],\n          answer: null,\n        },\n        {\n          question: { hindi: '3 असंबंधित वस्तुओं का नाम बताएं...', english: 'Name 3 unrelated objects...' },\n          choices: [\n            { hindi: 'सेब', english: 'Apple' },\n            { hindi: 'मेज़', english: 'Table' },\n            { hindi: 'पैसा', english: 'Penny' }\n          ],\n          answer: null,\n        },\n        {\n          question: { hindi: '100 से पीछे की ओर सात-सात करके गिनती करें', english: 'Count backward from 100 by sevens' },\n          choices: [\n            { hindi: '93', english: '93' },\n            { hindi: '86', english: '86' },\n            { hindi: '79', english: '79' },\n            { hindi: '72', english: '72' },\n            { hindi: '65', english: '65' }\n          ],\n          answer: null,\n        },\n      ]\n    }    \n  ];\n\n  const handleTabClick = (id) => {\n    setSelectedTab(id);\n    setShowModal(true);\n  };\n\n  const toggleLanguage = (e) => {\n    e.preventDefault();\n    setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? { video: true } : { audio: true };\n\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          mediaChunksRef.current.push(event.data);\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, { type: selectedTab === 1 ? 'video/webm' : 'audio/webm' });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch((err) => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state?.name);\n    formData.append('age', state?.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n\n    setShowTick(true);\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n\n  const InstructionModal = ({ onClose }) => (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <h2>Instructions / निर्देश</h2>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 \n            ? 'Please click on the \"Record Voice\" button and read the passage out loud...'\n            : 'Please click on the \"Record Video\" button and describe what you see in the picture...'}\n        </p>\n        <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n      </div>\n    </div>\n  );\n  \n\n  const MultipleChoiceTask = ({ task, language, setSelectedAnswersCount }) => {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [selectedAnswers, setSelectedAnswers] = useState([]);\n\n    useEffect(() => {\n      setSelectedAnswersCount(selectedAnswers.length); // Update the count whenever selectedAnswers changes\n    }, [selectedAnswers, setSelectedAnswersCount]);\n\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswers([]); // Clear selections when moving to the next question\n      }\n    };\n\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n        setSelectedAnswers([]);\n      }\n    };\n\n    const handleAnswerSelect = (index) => {\n      setSelectedAnswers([index]); // Restrict to a single selection for radio buttons\n    };\n\n    return (\n      <div className=\"multiple-choice-task\">\n        <h3 style={{ textAlign: 'center' }}>{task.questions[currentQuestionIndex].question[language]}</h3>\n\n        {currentQuestionIndex === 11 ? (\n          <div style={{ textAlign: 'center', marginTop: '20px' }}>\n            <img src=\"/pentagon.png\" alt=\"Shape for copying\" style={{ maxWidth: '80%', height: 'auto' }} />\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n              {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                <label key={index} style={{ textAlign: 'center', margin: '10px 0' }}>\n                  <input\n                    type=\"radio\"\n                    name=\"option\"\n                    checked={selectedAnswers.includes(index)}\n                    onChange={() => handleAnswerSelect(index)}\n                  />\n                  {choice[language]}\n                </label>\n              ))}\n            </div>\n          </div>\n        ) : (\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n            {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n              <label key={index} style={{ textAlign: 'center', margin: '10px 0' }}>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedAnswers.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                />\n                {choice[language]}\n              </label>\n            ))}\n          </div>\n        )}\n\n        <div className=\"navigation-buttons\" style={{ position: 'fixed', bottom: '10px', width: '100%', textAlign: 'center', background: '#f0f0f0', padding: '10px' }}>\n          <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>Previous</button>\n          <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>Next</button>\n          <span style={{ marginLeft: '20px' }}>Score: {selectedAnswers.length} / 30</span> \n        </div>\n\n        <div style={{ marginTop: '20px', textAlign: 'center' }}>\n          {task.questions.map((_, index) => (\n            <button\n              key={index}\n              onClick={() => setCurrentQuestionIndex(index)}\n              style={{\n                margin: '5px',\n                padding: '5px 10px',\n                backgroundColor: index === currentQuestionIndex ? '#007bff' : '#ddd',\n                color: index === currentQuestionIndex ? 'white' : 'black',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              {index + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const TaskContent = ({ task, language }) => {\n    if (task.id === 2) {\n      return <MultipleChoiceTask task={task} language={language} setSelectedAnswersCount={setSelectedAnswersCount} />;\n    }\n\n    return (\n      <div className=\"task-content\">\n        {task.image ? (\n          <>\n            <img\n              src={task.image}\n              alt=\"Task\"\n              style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n              onClick={() => setShowImageModal(true)}\n            />\n            {showImageModal && (\n              <div className=\"image-modal\">\n                <img\n                  src={task.image}\n                  alt=\"Popup Task\"\n                  style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                  onClick={() => setShowImageModal(false)}\n                />\n              </div>\n            )}\n          </>\n        ) : (\n          <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n            {task.paragraph[language]}\n          </p>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      {showModal && <InstructionModal onClose={() => setShowModal(false)} />}\n\n      <div className=\"gradient-bg\"></div>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n              onClick={() => handleTabClick(task.id)}\n            >\n              {task.title[language]}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"content\">\n          <button onClick={toggleLanguage} style={{ marginBottom: '10px', padding: '8px 12px', cursor: 'pointer', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px' }}>\n            {language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'}\n          </button>\n\n          <h1 className=\"task-title\">{tasks[selectedTab].title[language]}</h1>\n          <TaskContent task={tasks[selectedTab]} language={language} />\n\n          {selectedTab !== 2 && (\n            <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '15px', marginTop: '20px', position: 'relative' }}>\n              <div className=\"media-controls\">\n                {mediaURL ? (\n                  <>\n                    {selectedTab === 1 ? <video src={mediaURL} controls /> : <audio src={mediaURL} controls />}\n                    <button type=\"button\" onClick={handleReRecord} className=\"custom-button\">\n                      {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                    </button>\n                  </>\n                ) : (\n                  <button\n                    type=\"button\"\n                    onClick={handleMediaRecord}\n                    style={{\n                      marginBottom: '10px',\n                      padding: '8px 12px',\n                      cursor: 'pointer',\n                      backgroundColor: '#007bff',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                    }}\n                  >\n                    {isRecording ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording') : (language === 'hindi' ? (selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें') : (selectedTab === 1 ? 'Record Video' : 'Record Voice'))}\n                  </button>\n                )}\n              </div>\n\n              <button type=\"submit\" disabled={!mediaURL} className=\"custom-button\">\n                {language === 'hindi' ? 'जमा करें' : 'Submit'}\n              </button>\n\n              {showTick && <span className=\"tick\">✔</span>}\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FileUploadForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}