{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s4 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport tasks from './tasks';\nimport './App.css';\nimport TaskCompletion from './TaskCompletion';\nimport InstructionModal from './InstructionModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('english');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [showInitialPopup, setShowInitialPopup] = useState(true);\n  const [countdown, setCountdown] = useState(60);\n  const [completedTasks, setCompletedTasks] = useState(new Set());\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n    const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n    return savedData ? JSON.parse(savedData) : {};\n  });\n  useEffect(() => {\n    if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n  useEffect(() => {\n    sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n      sessionStorage.clear();\n    };\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n    return () => {\n      window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n    };\n  }, []);\n  useEffect(() => {\n    const blockRefresh = e => {\n      if (!showInitialPopup) {\n        // If test has started\n        e.preventDefault();\n        e.stopPropagation();\n\n        // For older browsers\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n        e.returnValue = '';\n        // Can also show a message if needed\n        return \"Test is in progress. Refresh is disabled.\";\n      }\n    };\n    const blockKeyboardRefresh = e => {\n      if (!showInitialPopup) {\n        // If test has started\n        if (e.metaKey && e.key === 'r' ||\n        // Cmd + R (macOS)\n        e.ctrlKey && e.key === 'r' ||\n        // Ctrl + R (Windows/Linux)\n        e.key === 'F5' // F5 (all platforms)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        }\n      }\n    };\n\n    // Block context menu to prevent refresh\n    const blockContextMenu = e => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n      }\n    };\n\n    // Add all event listeners\n    window.addEventListener('beforeunload', blockRefresh);\n    window.addEventListener('keydown', blockKeyboardRefresh);\n    window.addEventListener('contextmenu', blockContextMenu);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('beforeunload', blockRefresh);\n      window.removeEventListener('keydown', blockKeyboardRefresh);\n      window.removeEventListener('contextmenu', blockContextMenu);\n    };\n  }, [showInitialPopup]);\n  const handleRefreshConfirm = () => {\n    setShowRefreshWarning(false);\n    window.location.reload(); // Perform manual refresh\n  };\n  const handleRefreshCancel = () => {\n    setShowRefreshWarning(false);\n  };\n  const handleTabClick = id => {\n    // Prevent navigation to completed tasks\n    if (completedTasks.has(id)) {\n      return;\n    }\n\n    // Prevent going back to previous tasks\n    const currentTaskIndex = selectedTab;\n    if (id < currentTaskIndex) {\n      return;\n    }\n    setCountdown(60);\n    setMediaURL(\"\");\n    mediaChunksRef.current = [];\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setSelectedTab(id);\n    setShowModal(id !== 2);\n    if (id === 2) {\n      setShowInitialInstructions(true);\n    } else {\n      setShowInitialInstructions(false);\n    }\n  };\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true,\n      audio: true\n    } // Video with audio\n    : {\n      audio: true\n    }; // Audio only\n\n    if (!isRecording) {\n      // Clear previous recording data when starting new recording\n      setMediaURL(\"\");\n      setCountdown(60); // Reset the countdown\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n      console.log('Starting media recording for:', selectedTab === 1 ? 'video' : 'audio');\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        console.log('MediaRecorder started');\n        const countdownInterval = setInterval(() => {\n          setCountdown(prev => {\n            if (prev <= 1) {\n              clearInterval(countdownInterval);\n              // Automatically stop recording when countdown reaches 0\n              if (mediaRecorder.state === \"recording\") {\n                console.log('Stopping recording due to countdown');\n                mediaRecorder.stop();\n                stream.getTracks().forEach(track => track.stop());\n                setIsRecording(false);\n              }\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        mediaRecorder.countdownInterval = countdownInterval;\n        mediaRecorder.addEventListener('dataavailable', event => {\n          if (event.data.size > 0) {\n            mediaChunksRef.current.push(event.data);\n            console.log('Data chunk received:', event.data.size, 'bytes');\n          }\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          console.log('Created media blob:', {\n            type: mediaBlob.type,\n            size: mediaBlob.size\n          });\n          const url = URL.createObjectURL(mediaBlob);\n          setMediaURL(url);\n          if (selectedTab === 1) {\n            setVideoBlob(mediaBlob);\n            console.log('Video blob set:', mediaBlob);\n          } else {\n            setAudioBlob(mediaBlob);\n            console.log('Audio blob set:', mediaBlob);\n          }\n          setIsRecording(false);\n          mediaChunksRef.current = [];\n          clearInterval(mediaRecorder.countdownInterval);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        setIsRecording(false);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n        console.log('Recording stopped manually');\n      }\n    }\n  };\n  const handleReRecord = () => {\n    // Clear the current recording\n    setMediaURL(\"\");\n    if (selectedTab === 1) {\n      setVideoBlob(null);\n    } else {\n      setAudioBlob(null);\n    }\n\n    // Clear media chunks\n    mediaChunksRef.current = [];\n\n    // Stop any existing streams\n    if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n\n    // Start new recording\n    handleMediaRecord();\n  };\n\n  // Inside the handleSubmit function in FileUploadForm.js, update it as follows:\n\n  const calculateScore = () => {\n    let totalScore = 0;\n    // Iterate through all questions\n    Object.values(allSelectedAnswers).forEach(selections => {\n      // Each correct selection adds 1 point\n      if (selections && selections.length > 0) {\n        totalScore += selections.length;\n      }\n    });\n    return totalScore;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) {\n      console.log('Already submitting, returning');\n      return;\n    }\n    console.log('Starting submission for tab:', selectedTab);\n    setIsSubmitting(true);\n    try {\n      if (!(state !== null && state !== void 0 && state.patientId) || !(state !== null && state !== void 0 && state.name) || !(state !== null && state !== void 0 && state.age)) {\n        alert('Patient information is missing. Please start over.');\n        navigate('/');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('name', state.name);\n      formData.append('age', state.age);\n      formData.append('patientId', state.patientId);\n\n      // Initialize score as 0\n      let scoreToSend = '0';\n\n      // Only calculate score for MMSE test (tab 2)\n      if (selectedTab === 2) {\n        const calculatedScore = calculateScore();\n        console.log('Tab 2: Calculated score:', calculatedScore);\n        scoreToSend = calculatedScore.toString();\n      } else {\n        console.log(`Tab ${selectedTab}: Using default score: 0`);\n      }\n      console.log('Setting score in formData:', scoreToSend);\n      formData.append('score', scoreToSend);\n\n      // Log all form data being sent\n      console.log('Form data contents:');\n      for (let pair of formData.entries()) {\n        console.log(`${pair[0]}: ${pair[1]}`);\n      }\n      const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n      if (!currentBlob) {\n        alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n        setIsSubmitting(false);\n        return;\n      }\n      if (selectedTab === 1) {\n        formData.append('video', currentBlob, 'video.webm');\n      } else if (selectedTab === 0) {\n        formData.append('audio', currentBlob, 'audio.webm');\n      }\n      console.log('Sending request to server...');\n      const response = await fetch('http://localhost:5001/save', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Upload failed');\n      }\n      const result = await response.json();\n      console.log('Server response:', result);\n      setShowTick(true);\n      setTimeout(() => {\n        setShowTick(false);\n        setCompletedTasks(prev => new Set([...prev, selectedTab]));\n        const nextTab = selectedTab + 1;\n        if (nextTab < tasks.length) {\n          handleTabClick(nextTab);\n        }\n      }, 1000);\n      setMediaURL('');\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n    } catch (error) {\n      console.error('Submission error:', error);\n      alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // const InstructionModal = ({ onClose }) => {\n  //   const audioRef = useRef(null);\n\n  //   useEffect(() => {\n  //     if (audioRef.current) {\n  //       audioRef.current.play();\n  //     }\n  //   }, []); // Removed language from dependency array\n\n  //   return (\n  //     <div className=\"custom-modal-overlay\">\n  //       <div className=\"custom-modal-content\">\n  //         <audio\n  //           ref={audioRef}\n  //           src={selectedTab === 0 ? \n  //             (language === 'english' ? '/audio/q2_en.mp3' : '/audio/q2_hi.mp3') :\n  //             (language === 'english' ? '/audio/q3_en.mp3' : '/audio/q3_hi.mp3')\n  //           }\n  //         />\n  //         <h2>{language === 'hindi' ? 'निर्देश' : 'Instructions'}</h2>\n  //         <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n  //           {selectedTab === 0 ? (\n  //             language === 'hindi' ? (\n  //               <>\n  //                 <p>कृपया \"आवाज़ रिकॉर्ड करें\" पर क्लिक करें और जोर से पढ़ें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें।</p>\n  //               </>\n  //             ) : (\n  //               <>\n  //                 <p>Please click \"Record Voice\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save.</p>\n  //               </>\n  //             )\n  //           ) : (\n  //             language === 'hindi' ? (\n  //               <>\n  //                 <p>कृपया \"वीडियो रिकॉर्ड करें\" पर क्लिक करें और चित्र का वर्णन करें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें। ज़ूम इन के लिए, कृपया चित्र पर क्लिक करें।</p>\n  //               </>\n  //             ) : (\n  //               <>\n  //                 <p>Please click \"Record Video\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save. To zoom in, please click on the picture.</p>\n  //               </>\n  //             )\n  //           )}\n  //         </p>\n  //         <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n  //       </div>\n  //     </div>\n  //   );\n  // };\n\n  const InitialInstructions = ({\n    onAccept,\n    onDeny,\n    setIsPatient,\n    language\n  }) => {\n    _s();\n    const audioRef = useRef(null);\n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, [language, selectedTab]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-instructions-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-instructions-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: language === 'english' ? '/audio/q4_en.mp3' : '/audio/q4_hi.mp3'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'hindi' ? 'ऑनलाइन MMSE परीक्षण में आपका स्वागत है' : 'Welcome to the Online MMSE Test'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === 'hindi' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0911\\u0928\\u0932\\u093E\\u0907\\u0928 MMSE \\u091F\\u0947\\u0938\\u094D\\u091F: \\u0924\\u0948\\u092F\\u093E\\u0930\\u0940 \\u0914\\u0930 \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), \"\\u0938\\u094D\\u0935\\u093E\\u0917\\u0924 \\u0939\\u0948! \\u091F\\u0947\\u0938\\u094D\\u091F \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0938\\u0947 \\u092A\\u0939\\u0932\\u0947 \\u0915\\u0943\\u092A\\u092F\\u093E \\u0928\\u093F\\u092E\\u094D\\u0928\\u0932\\u093F\\u0916\\u093F\\u0924 \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u090F\\u0915 \\u0926\\u0947\\u0916\\u092D\\u093E\\u0932\\u0915\\u0930\\u094D\\u0924\\u093E (Caregiver) \\u0915\\u0940 \\u0909\\u092A\\u0938\\u094D\\u0925\\u093F\\u0924\\u093F \\u0906\\u0935\\u0936\\u094D\\u092F\\u0915 \\u0939\\u0948, \\u091C\\u094B \\u091F\\u0947\\u0938\\u094D\\u091F \\u0932\\u0947 \\u0938\\u0915\\u0947\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u090F\\u0915 \\u0916\\u093E\\u0932\\u0940 \\u0915\\u093E\\u0917\\u091C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u090F\\u0915 \\u092A\\u0947\\u0928 \\u092F\\u093E \\u092A\\u0947\\u0902\\u0938\\u093F\\u0932\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0906\\u0935\\u0936\\u094D\\u092F\\u0915 \\u0938\\u0939\\u093E\\u092F\\u0915 \\u0909\\u092A\\u0915\\u0930\\u0923 (\\u091C\\u0948\\u0938\\u0947, \\u0936\\u094D\\u0930\\u0935\\u0923 \\u092F\\u0902\\u0924\\u094D\\u0930, \\u091A\\u0936\\u094D\\u092E\\u093E, \\u0918\\u0921\\u093C\\u0940)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0926\\u0947\\u0916\\u092D\\u093E\\u0932\\u0915\\u0930\\u094D\\u0924\\u093E \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 59\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u094B \\u092C\\u0948\\u0920\\u093E\\u090F\\u0901: \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u094B \\u0905\\u092A\\u0928\\u0947 \\u0938\\u093E\\u092E\\u0928\\u0947 \\u0910\\u0938\\u0940 \\u091C\\u0917\\u0939 \\u092A\\u0930 \\u092C\\u0948\\u0920\\u093E\\u090F\\u0901 \\u091C\\u0939\\u093E\\u0901 \\u0935\\u0947 \\u0906\\u092A\\u0915\\u094B \\u0938\\u094D\\u092A\\u0937\\u094D\\u091F \\u0930\\u0942\\u092A \\u0938\\u0947 \\u0926\\u0947\\u0916 \\u0914\\u0930 \\u0938\\u0941\\u0928 \\u0938\\u0915\\u0947\\u0902\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u092A\\u0922\\u093C\\u0947\\u0902: \\u092A\\u094D\\u0930\\u0924\\u094D\\u092F\\u0947\\u0915 \\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u0915\\u094B \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0915\\u0947 \\u0932\\u093F\\u090F \\u091C\\u093C\\u094B\\u0930 \\u0938\\u0947 \\u092A\\u0922\\u093C\\u0947\\u0902\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0909\\u0924\\u094D\\u0924\\u0930 \\u091A\\u093F\\u0939\\u094D\\u0928\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902: \\u092F\\u0926\\u093F \\u0935\\u094D\\u092F\\u0915\\u094D\\u0924\\u093F \\u0938\\u0939\\u0940 \\u0909\\u0924\\u094D\\u0924\\u0930 \\u0926\\u0947\\u0924\\u093E \\u0939\\u0948 \\u0924\\u094B \\u091A\\u0947\\u0915\\u092C\\u0949\\u0915\\u094D\\u0938 \\u092A\\u0930 \\u0928\\u093F\\u0936\\u093E\\u0928 \\u0932\\u0917\\u093E\\u090F\\u0901\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"\\u0905\\u0917\\u0932\\u0947 \\u092A\\u0930 \\u091C\\u093E\\u090F\\u0902: \\u0939\\u0930 \\u092A\\u094D\\u0930\\u0936\\u094D\\u0928 \\u0915\\u0947 \\u092C\\u093E\\u0926 \\\"\\u0905\\u0917\\u0932\\u093E\\\" \\u092A\\u0930 \\u0915\\u094D\\u0932\\u093F\\u0915 \\u0915\\u0930\\u0947\\u0902\\u0964\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), \"\\u0915\\u094D\\u092F\\u093E \\u0906\\u092A \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0924\\u0948\\u092F\\u093E\\u0930 \\u0939\\u0948\\u0902?\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Online MMSE Test: Preparation & Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 76\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this), \"Welcome! Before starting the test, please ensure the following:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A caregiver is present to administer the test.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A blank paper\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"A pen or pencil\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Any necessary aids (e.g., hearing aids, glasses, clock)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Instructions for the Caregiver:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Seat the Patient: Position the patient across from you, where they can see and hear you clearly.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Read Aloud: Read each question out loud to the patient.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Mark Responses: Check the box if the patient answers correctly.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Progress: Click \\\"Next\\\" after each question.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this), \"Are you ready to begin?\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: language === 'hindi' ? 'यदि आप \"स्वीकार करें\" पर क्लिक करते हैं, तो आप परीक्षण में भाग लेने के लिए सहमत हैं।' : 'By clicking \"Accept,\" you agree to participate in the test.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accept-button\",\n            onClick: onAccept,\n            children: language === 'hindi' ? 'स्वीकार करें' : 'Accept'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deny-button\",\n            onClick: onDeny,\n            style: {\n              marginLeft: '10px'\n            },\n            children: language === 'hindi' ? 'अस्वीकार करें' : 'Deny'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 5\n    }, this);\n  };\n  _s(InitialInstructions, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n  const MultipleChoiceTask = ({\n    task,\n    language,\n    setTestCompleted,\n    currentQuestionIndex,\n    setCurrentQuestionIndex,\n    allSelectedAnswers,\n    setAllSelectedAnswers\n  }) => {\n    _s2();\n    const {\n      state\n    } = useLocation();\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      }\n    };\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n      }\n    };\n    const handleAnswerSelect = choiceIndex => {\n      setAllSelectedAnswers(prevSelected => {\n        const updatedAnswers = {\n          ...prevSelected\n        };\n\n        // Initialize array for current question if it doesn't exist\n        if (!updatedAnswers[currentQuestionIndex]) {\n          updatedAnswers[currentQuestionIndex] = [];\n        }\n        const currentAnswers = updatedAnswers[currentQuestionIndex];\n\n        // Toggle selection\n        const index = currentAnswers.indexOf(choiceIndex);\n        if (index === -1) {\n          // Add the choice if not already selected\n          updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n        } else {\n          // Remove the choice if already selected\n          updatedAnswers[currentQuestionIndex] = currentAnswers.filter(idx => idx !== choiceIndex);\n        }\n        return updatedAnswers;\n      });\n    };\n    const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n    const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-choice-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'center',\n          marginBottom: '5px'\n        },\n        children: task.questions[currentQuestionIndex].question[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this), currentQuestionIndex === 10 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: process.env.PUBLIC_URL + '/pentagon.png',\n          alt: \"Shape for copying\",\n          style: {\n            maxWidth: '45%',\n            height: 'auto'\n          },\n          onError: e => {\n            console.error(\"Image failed to load\");\n            console.log(\"Attempted path:\", e.target.src);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: '10px'\n          },\n          children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              textAlign: 'center',\n              margin: '5px 0',\n              width: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: currentSelections.includes(index),\n              onChange: () => handleAnswerSelect(index),\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 21\n            }, this), choice[language]]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      // Default rendering for other questions\n      _jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          minHeight: '30vh',\n          marginTop: '10px'\n        },\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            textAlign: 'center',\n            margin: '5px 0',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: currentSelections.includes(index),\n            onChange: () => handleAnswerSelect(index),\n            style: {\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 19\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-container\",\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrevious,\n            disabled: currentQuestionIndex === 0,\n            style: {\n              marginRight: '10px'\n            },\n            children: language === 'hindi' ? 'पिछला' : 'Previous'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleNext,\n            disabled: currentQuestionIndex === task.questions.length - 1,\n            children: language === 'hindi' ? 'अगला' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-counter\",\n          style: {\n            marginRight: '20px'\n          },\n          children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Score: ${totalSelectedCount}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-number-navigation\",\n        style: {\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap'\n        },\n        children: task.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setCurrentQuestionIndex(index);\n          },\n          style: {\n            margin: '5px',\n            padding: '10px',\n            backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n            color: index === currentQuestionIndex ? '#fff' : '#000',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: async () => {\n            const finalScore = Object.values(allSelectedAnswers).reduce((total, selections) => total + (selections ? selections.length : 0), 0);\n            console.log('Final MMSE score:', finalScore);\n            const formData = new FormData();\n            formData.append('name', state.name);\n            formData.append('age', state.age);\n            formData.append('patientId', state.patientId);\n            formData.append('score', finalScore.toString());\n            try {\n              console.log('Sending MMSE score to server:', finalScore);\n              const response = await fetch('http://localhost:5001/save', {\n                method: 'POST',\n                body: formData\n              });\n              if (!response.ok) {\n                throw new Error('Failed to save MMSE score');\n              }\n              console.log('MMSE score saved successfully');\n              setTestCompleted(true);\n            } catch (error) {\n              console.error('Error saving MMSE score:', error);\n              alert('Failed to save test score. Please try again.');\n            }\n          },\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: language === 'hindi' ? 'जमा करें' : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 9\n    }, this);\n  };\n  _s2(MultipleChoiceTask, \"FO3uhfHQFxifE5/pZVC1vAVIA9s=\", false, function () {\n    return [useLocation];\n  });\n  const TaskContent = ({\n    task,\n    language,\n    testCompleted,\n    showInitialInstructions,\n    setShowInitialInstructions,\n    setTestCompleted,\n    allSelectedAnswers,\n    setAllSelectedAnswers,\n    setIsPatient,\n    currentQuestionIndex,\n    setCurrentQuestionIndex\n  }) => {\n    if (task.id === 2) {\n      if (testCompleted) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full flex justify-center items-center\",\n          children: /*#__PURE__*/_jsxDEV(TaskCompletion, {\n            language: language,\n            allSelectedAnswers: allSelectedAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 13\n        }, this);\n      }\n      // If initial instructions are to be shown\n      if (showInitialInstructions) {\n        return /*#__PURE__*/_jsxDEV(InitialInstructions, {\n          onAccept: () => setShowInitialInstructions(false),\n          onDeny: () => {\n            setShowInitialInstructions(false);\n            setTestCompleted(true);\n          },\n          setIsPatient: setIsPatient // Pass it here\n          ,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this);\n      }\n\n      // Render the MultipleChoiceTask\n      return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n        task: task,\n        language: language,\n        setTestCompleted: setTestCompleted,\n        allSelectedAnswers: allSelectedAnswers,\n        setAllSelectedAnswers: setAllSelectedAnswers,\n        currentQuestionIndex: currentQuestionIndex,\n        setCurrentQuestionIndex: setCurrentQuestionIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 11\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'left',\n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          },\n          children: [language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out', \" \\uD83D\\uDD0D\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Task\",\n          style: {\n            cursor: 'pointer',\n            maxWidth: '100%',\n            maxHeight: '100%'\n          },\n          onClick: () => setShowImageModal(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 15\n        }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.image,\n            alt: \"Popup Task\",\n            style: {\n              maxWidth: '90%',\n              maxHeight: '90%',\n              objectFit: 'contain'\n            },\n            onClick: () => setShowImageModal(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: '60%',\n          margin: '0 auto',\n          lineHeight: '1.8',\n          fontSize: '1.1em'\n        },\n        children: task.paragraph[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 9\n    }, this);\n  };\n  const InitialPopup = ({\n    language,\n    setLanguage,\n    onClose\n  }) => {\n    _s3();\n    const audioRef = useRef(null);\n    useEffect(() => {\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    }, [language]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"initial-popup-overlay\",\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'white',\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: language === 'english' ? '/audio/q1_en.mp3' : '/audio/q1_hi.mp3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-popup-content\",\n        style: {\n          maxWidth: '600px',\n          width: '90%',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'english' ? 'Welcome to the Dementia Test!' : 'डिमेंशिया टेस्ट में आपका स्वागत है!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '1.2em',\n            color: '#555'\n          },\n          children: language === 'english' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"This test includes three parts:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Paragraph Reading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 19\n            }, this), \" (1 min)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Picture Interpretation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 19\n            }, this), \" (1 min)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 66\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"MMSE online test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 19\n            }, this), \" (~15 min, requires a caregiver if available)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 25\n            }, this), \"Please ensure you're in a quiet space with audio and video recording permissions enabled.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 873,\n              columnNumber: 25\n            }, this), \"Please Choose the language for the test\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"\\u092F\\u0939 \\u091F\\u0947\\u0938\\u094D\\u091F \\u0924\\u0940\\u0928 \\u092D\\u093E\\u0917\\u094B\\u0902 \\u092E\\u0947\\u0902 \\u0939\\u0948:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u092A\\u0948\\u0930\\u093E\\u0917\\u094D\\u0930\\u093E\\u092B \\u092A\\u0922\\u093C\\u0928\\u093E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 19\n            }, this), \" (1 \\u092E\\u093F\\u0928\\u091F)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 60\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u091A\\u093F\\u0924\\u094D\\u0930 \\u0935\\u094D\\u092F\\u093E\\u0916\\u094D\\u092F\\u093E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 19\n            }, this), \" (1 \\u092E\\u093F\\u0928\\u091F)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 59\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"MMSE \\u0911\\u0928\\u0932\\u093E\\u0907\\u0928 \\u091F\\u0947\\u0938\\u094D\\u091F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 19\n            }, this), \" (~15 \\u092E\\u093F\\u0928\\u091F, \\u0915\\u0947\\u092F\\u0930\\u0917\\u093F\\u0935\\u0930 \\u0909\\u092A\\u0932\\u092C\\u094D\\u0927 \\u0939\\u094B \\u0924\\u094B)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 25\n            }, this), \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u0938\\u0941\\u0928\\u093F\\u0936\\u094D\\u091A\\u093F\\u0924 \\u0915\\u0930\\u0947\\u0902 \\u0915\\u093F \\u0906\\u092A \\u0936\\u093E\\u0902\\u0924 \\u0938\\u094D\\u0925\\u093E\\u0928 \\u092E\\u0947\\u0902 \\u0939\\u0948\\u0902 \\u0914\\u0930 \\u0911\\u0921\\u093F\\u092F\\u094B-\\u0935\\u0940\\u0921\\u093F\\u092F\\u094B \\u0930\\u093F\\u0915\\u0949\\u0930\\u094D\\u0921\\u093F\\u0902\\u0917 \\u0905\\u0928\\u0941\\u092E\\u0924\\u093F \\u0938\\u0915\\u094D\\u0937\\u092E \\u0939\\u0948\\u0964\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 25\n            }, this), \"\\u0915\\u0943\\u092A\\u092F\\u093E \\u092A\\u0930\\u0940\\u0915\\u094D\\u0937\\u0923 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u092D\\u093E\\u0937\\u093E \\u091A\\u0941\\u0928\\u0947\\u0902\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-selection\",\n          style: {\n            marginTop: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setLanguage('english'),\n            className: `language-button ${language === 'english' ? 'active' : ''}`,\n            style: {\n              marginRight: '10px',\n              padding: '10px 20px'\n            },\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setLanguage('hindi'),\n            className: `language-button ${language === 'hindi' ? 'active' : ''}`,\n            style: {\n              padding: '10px 20px'\n            },\n            children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"begin-test-button\",\n          style: {\n            marginTop: '20px',\n            padding: '10px 20px'\n          },\n          children: language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 9\n    }, this);\n  };\n  _s3(InitialPopup, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [(state === null || state === void 0 ? void 0 : state.patientId) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '20px',\n        right: '20px',\n        backgroundColor: 'white',\n        padding: '8px 12px',\n        borderRadius: '4px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        zIndex: 1000,\n        fontFamily: 'monospace',\n        fontSize: '14px',\n        border: '1px solid #ddd'\n      },\n      children: [\"Patient ID: \", state.patientId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 9\n    }, this), showInitialPopup ? /*#__PURE__*/_jsxDEV(InitialPopup, {\n      language: language,\n      setLanguage: setLanguage,\n      onClose: () => setShowInitialPopup(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n        onClose: () => setShowModal(false),\n        selectedTab: selectedTab,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gradient-bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: tasks.filter(task => !(task.id === 2 && testCompleted)).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`,\n            onClick: () => handleTabClick(task.id),\n            style: {\n              cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n              opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n              backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n            },\n            children: [task.title[language], completedTasks.has(task.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '5px',\n                color: 'green'\n              },\n              children: \"\\u2713\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 974,\n              columnNumber: 23\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(TaskContent, {\n            task: tasks[selectedTab],\n            language: language,\n            testCompleted: testCompleted,\n            showInitialInstructions: showInitialInstructions,\n            setShowInitialInstructions: setShowInitialInstructions,\n            setTestCompleted: setTestCompleted,\n            allSelectedAnswers: allSelectedAnswers,\n            setAllSelectedAnswers: setAllSelectedAnswers,\n            currentQuestionIndex: currentQuestionIndex,\n            setCurrentQuestionIndex: setCurrentQuestionIndex\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            className: \"media-form\",\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: '15px',\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-controls\",\n              children: mediaURL ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"media-playback\",\n                children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                  src: mediaURL,\n                  controls: true,\n                  style: {\n                    maxWidth: '350px',\n                    // Set maximum width\n                    width: '100%',\n                    // Responsive width\n                    height: 'auto',\n                    // Maintain aspect ratio\n                    marginBottom: '10px' // Add some spacing\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                  src: mediaURL,\n                  controls: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1023,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleReRecord,\n                  className: \"custom-button\",\n                  children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1025,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1010,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recording-controls\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: 'center',\n                    marginTop: '10px'\n                  },\n                  children: isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Time remaining: \", countdown, \"s\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: handleMediaRecord,\n                  className: \"custom-button\",\n                  style: {\n                    marginBottom: '10px',\n                    padding: '8px 12px',\n                    backgroundColor: '#007bff',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  },\n                  children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1038,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: !mediaURL || isSubmitting,\n              className: \"custom-button\",\n              style: {\n                opacity: !mediaURL || isSubmitting ? 0.6 : 1\n              },\n              children: language === 'hindi' ? 'जमा करें' : 'Submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1066,\n              columnNumber: 19\n            }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tick\",\n              children: \"\\u2714\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 997,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 11\n      }, this), showRefreshWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: language === 'hindi' ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?' : 'Refreshing the page will remove all current entries. Do you want to continue?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefreshCancel,\n              className: \"cancel-button\",\n              children: language === 'hindi' ? 'रद्द करें' : 'Cancel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1094,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRefreshConfirm,\n              className: \"confirm-button\",\n              children: language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1097,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1093,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1086,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 916,\n    columnNumber: 5\n  }, this);\n}\n_s4(FileUploadForm, \"lO1lCLbP6nI4snqbpLjen/+YkzM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useLocation","useNavigate","tasks","TaskCompletion","InstructionModal","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s4","_s","$RefreshSig$","_s2","_s3","isSubmitting","setIsSubmitting","state","navigate","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","showInitialPopup","setShowInitialPopup","countdown","setCountdown","completedTasks","setCompletedTasks","Set","currentQuestionIndex","setCurrentQuestionIndex","showInitialInstructions","setShowInitialInstructions","testCompleted","setTestCompleted","audioBlob","setAudioBlob","videoBlob","setVideoBlob","showRefreshWarning","setShowRefreshWarning","allSelectedAnswers","setAllSelectedAnswers","savedData","sessionStorage","getItem","JSON","parse","patientId","name","age","setItem","stringify","clearDataOnRefresh","clear","window","addEventListener","removeEventListener","blockRefresh","e","preventDefault","stopPropagation","returnValue","blockKeyboardRefresh","metaKey","key","ctrlKey","blockContextMenu","handleRefreshConfirm","location","reload","handleRefreshCancel","handleTabClick","id","has","currentTaskIndex","current","stop","stream","getTracks","forEach","track","handleMediaRecord","mediaType","video","audio","console","log","navigator","mediaDevices","getUserMedia","then","mediaRecorder","MediaRecorder","start","countdownInterval","setInterval","prev","clearInterval","event","data","size","push","mediaBlob","Blob","type","url","URL","createObjectURL","catch","err","error","alert","handleReRecord","calculateScore","totalScore","Object","values","selections","length","handleSubmit","formData","FormData","append","scoreToSend","calculatedScore","toString","pair","entries","currentBlob","response","fetch","method","body","ok","errorData","json","Error","result","setTimeout","nextTab","message","InitialInstructions","onAccept","onDeny","setIsPatient","audioRef","play","className","children","ref","src","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","onClick","marginLeft","MultipleChoiceTask","task","handleNext","questions","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","updatedAnswers","currentAnswers","index","indexOf","filter","idx","totalSelectedCount","reduce","total","currentSelections","textAlign","marginBottom","question","process","env","PUBLIC_URL","alt","maxWidth","height","onError","target","display","flexDirection","alignItems","choices","map","choice","margin","width","checked","includes","onChange","marginRight","justifyContent","minHeight","disabled","flexWrap","q","padding","backgroundColor","color","border","borderRadius","cursor","finalScore","TaskContent","image","fontSize","maxHeight","objectFit","lineHeight","paragraph","InitialPopup","onClose","position","top","left","zIndex","right","boxShadow","fontFamily","opacity","undefined","title","onSubmit","gap","controls","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["  import React, { useState, useRef, useEffect} from 'react';\n  import { useLocation, useNavigate } from 'react-router-dom'; \n  import tasks from './tasks';\n  import './App.css';\n  import TaskCompletion from './TaskCompletion';\n  import InstructionModal from './InstructionModal';\n\n  function FileUploadForm() {\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const { state } = useLocation();\n    const navigate = useNavigate();\n    const [showModal, setShowModal] = useState(true);\n    const [selectedTab, setSelectedTab] = useState(0);\n    const [language, setLanguage] = useState('english');\n    const [isRecording, setIsRecording] = useState(false);\n    const [mediaURL, setMediaURL] = useState(\"\");\n    const [showTick, setShowTick] = useState(false);\n    const mediaRecorderRef = useRef(null);\n    const mediaChunksRef = useRef([]);\n    const [showImageModal, setShowImageModal] = useState(false);\n    const [showInitialPopup, setShowInitialPopup] = useState(true);\n    const [countdown, setCountdown] = useState(60);\n    const [completedTasks, setCompletedTasks] = useState(new Set());\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [showInitialInstructions, setShowInitialInstructions] = useState(false);\n    const [testCompleted, setTestCompleted] = useState(false);\n    const [audioBlob, setAudioBlob] = useState(null);\n    const [videoBlob, setVideoBlob] = useState(null);\n    const [showRefreshWarning, setShowRefreshWarning] = useState(false);\n    const [allSelectedAnswers, setAllSelectedAnswers] = useState(() => {\n      const savedData = sessionStorage.getItem(\"allSelectedAnswers\");\n      return savedData ? JSON.parse(savedData) : {};\n    });\n\n\n\n  useEffect(() => {\n    if (!state?.patientId || !state?.name || !state?.age) {\n      navigate('/');\n    }\n  }, [state, navigate]);\n\n  useEffect(() => {\n      sessionStorage.setItem(\"allSelectedAnswers\", JSON.stringify(allSelectedAnswers));\n  }, [allSelectedAnswers]);\n\n  useEffect(() => {\n    const clearDataOnRefresh = () => {\n        sessionStorage.clear();\n    };\n\n    window.addEventListener(\"beforeunload\", clearDataOnRefresh);\n\n    return () => {\n        window.removeEventListener(\"beforeunload\", clearDataOnRefresh);\n    };\n  }, []);\n\n  useEffect(() => {\n    const blockRefresh = (e) => {\n      if (!showInitialPopup) { // If test has started\n        e.preventDefault();\n        e.stopPropagation();\n        \n        // For older browsers\n        if (e.preventDefault) {\n          e.preventDefault();\n        }\n        e.returnValue = '';\n        // Can also show a message if needed\n        return \"Test is in progress. Refresh is disabled.\";\n      }\n    };\n\n    const blockKeyboardRefresh = (e) => {\n      if (!showInitialPopup) { // If test has started\n        if (\n          (e.metaKey && e.key === 'r') || // Cmd + R (macOS)\n          (e.ctrlKey && e.key === 'r') || // Ctrl + R (Windows/Linux)\n          e.key === 'F5'                  // F5 (all platforms)\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        }\n      }\n    };\n\n    // Block context menu to prevent refresh\n    const blockContextMenu = (e) => {\n      if (!showInitialPopup) {\n        e.preventDefault();\n      }\n    };\n\n    // Add all event listeners\n    window.addEventListener('beforeunload', blockRefresh);\n    window.addEventListener('keydown', blockKeyboardRefresh);\n    window.addEventListener('contextmenu', blockContextMenu);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('beforeunload', blockRefresh);\n      window.removeEventListener('keydown', blockKeyboardRefresh);\n      window.removeEventListener('contextmenu', blockContextMenu);\n    };\n  }, [showInitialPopup]);\n\n    const handleRefreshConfirm = () => {\n      setShowRefreshWarning(false);\n      window.location.reload(); // Perform manual refresh\n    };\n    \n    const handleRefreshCancel = () => {\n      setShowRefreshWarning(false);\n    };\n    \n    const handleTabClick = (id) => {\n      // Prevent navigation to completed tasks\n      if (completedTasks.has(id)) {\n        return;\n      }\n\n      // Prevent going back to previous tasks\n      const currentTaskIndex = selectedTab;\n      if (id < currentTaskIndex) {\n        return;\n      }\n\n      setCountdown(60);\n      setMediaURL(\"\");\n      mediaChunksRef.current = [];\n    \n      if (mediaRecorderRef.current && mediaRecorderRef.current.state === 'recording') {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    \n      setSelectedTab(id);\n      setShowModal(id !== 2);\n    \n      if (id === 2) {\n        setShowInitialInstructions(true);\n      } else {\n        setShowInitialInstructions(false);\n      }\n    };   \n\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 \n      ? { video: true, audio: true }  // Video with audio\n      : { audio: true };              // Audio only\n\n    if (!isRecording) {\n      // Clear previous recording data when starting new recording\n      setMediaURL(\"\");\n      setCountdown(60); // Reset the countdown\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n\n      console.log('Starting media recording for:', selectedTab === 1 ? 'video' : 'audio');\n\n      navigator.mediaDevices.getUserMedia(mediaType)\n        .then((stream) => {\n          const mediaRecorder = new MediaRecorder(stream);\n          mediaRecorderRef.current = mediaRecorder;\n          mediaChunksRef.current = [];\n\n          mediaRecorder.start();\n          setIsRecording(true);\n          console.log('MediaRecorder started');\n\n          const countdownInterval = setInterval(() => {\n            setCountdown((prev) => {\n              if (prev <= 1) {\n                clearInterval(countdownInterval);\n                // Automatically stop recording when countdown reaches 0\n                if (mediaRecorder.state === \"recording\") {\n                  console.log('Stopping recording due to countdown');\n                  mediaRecorder.stop();\n                  stream.getTracks().forEach(track => track.stop());\n                  setIsRecording(false);\n                }\n                return 0;\n              }\n              return prev - 1;\n            });\n          }, 1000);\n\n          mediaRecorder.countdownInterval = countdownInterval;\n\n          mediaRecorder.addEventListener('dataavailable', (event) => {\n            if (event.data.size > 0) {\n              mediaChunksRef.current.push(event.data);\n              console.log('Data chunk received:', event.data.size, 'bytes');\n            }\n          });\n\n          mediaRecorder.addEventListener('stop', () => {\n            const mediaBlob = new Blob(mediaChunksRef.current, {\n              type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n            });\n            console.log('Created media blob:', {\n              type: mediaBlob.type,\n              size: mediaBlob.size\n            });\n\n            const url = URL.createObjectURL(mediaBlob);\n            setMediaURL(url);\n\n            if (selectedTab === 1) {\n              setVideoBlob(mediaBlob);\n              console.log('Video blob set:', mediaBlob);\n            } else {\n              setAudioBlob(mediaBlob);\n              console.log('Audio blob set:', mediaBlob);\n            }\n\n            setIsRecording(false);\n            mediaChunksRef.current = [];\n            clearInterval(mediaRecorder.countdownInterval);\n          });\n        })\n        .catch((err) => {\n          console.error('Error accessing media:', err);\n          setIsRecording(false);\n          alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n        });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n        clearInterval(mediaRecorderRef.current.countdownInterval);\n        setCountdown(0);\n        console.log('Recording stopped manually');\n      }\n    }\n  }; \n\n    const handleReRecord = () => {\n      // Clear the current recording\n      setMediaURL(\"\");\n      if (selectedTab === 1) {\n        setVideoBlob(null);\n      } else {\n        setAudioBlob(null);\n      }\n      \n      // Clear media chunks\n      mediaChunksRef.current = [];\n      \n      // Stop any existing streams\n      if (mediaRecorderRef.current && mediaRecorderRef.current.stream) {\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n      \n      // Start new recording\n      handleMediaRecord();\n    };\n    \n\n    // Inside the handleSubmit function in FileUploadForm.js, update it as follows:\n\n    const calculateScore = () => {\n      let totalScore = 0;\n      // Iterate through all questions\n      Object.values(allSelectedAnswers).forEach((selections) => {\n          // Each correct selection adds 1 point\n          if (selections && selections.length > 0) {\n              totalScore += selections.length;\n          }\n      });\n      return totalScore;\n  };\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (isSubmitting) {\n        console.log('Already submitting, returning');\n        return;\n    }\n    \n    console.log('Starting submission for tab:', selectedTab);\n    setIsSubmitting(true);\n    \n    try {\n        if (!state?.patientId || !state?.name || !state?.age) {\n            alert('Patient information is missing. Please start over.');\n            navigate('/');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('name', state.name);\n        formData.append('age', state.age);\n        formData.append('patientId', state.patientId);\n        \n        // Initialize score as 0\n        let scoreToSend = '0';\n        \n        // Only calculate score for MMSE test (tab 2)\n        if (selectedTab === 2) {\n            const calculatedScore = calculateScore();\n            console.log('Tab 2: Calculated score:', calculatedScore);\n            scoreToSend = calculatedScore.toString();\n        } else {\n            console.log(`Tab ${selectedTab}: Using default score: 0`);\n        }\n        \n        console.log('Setting score in formData:', scoreToSend);\n        formData.append('score', scoreToSend);\n\n        // Log all form data being sent\n        console.log('Form data contents:');\n        for (let pair of formData.entries()) {\n            console.log(`${pair[0]}: ${pair[1]}`);\n        }\n\n        const currentBlob = selectedTab === 1 ? videoBlob : audioBlob;\n        if (!currentBlob) {\n            alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n            setIsSubmitting(false);\n            return;\n        }\n\n        if (selectedTab === 1) {\n            formData.append('video', currentBlob, 'video.webm');\n        } else if (selectedTab === 0) {\n            formData.append('audio', currentBlob, 'audio.webm');\n        }\n\n        console.log('Sending request to server...');\n        const response = await fetch('http://localhost:5001/save', {\n            method: 'POST',\n            body: formData,\n        });\n\n        if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(errorData.error || 'Upload failed');\n        }\n\n        const result = await response.json();\n        console.log('Server response:', result);\n\n        setShowTick(true);\n        setTimeout(() => {\n            setShowTick(false);\n            setCompletedTasks((prev) => new Set([...prev, selectedTab]));\n            const nextTab = selectedTab + 1;\n            if (nextTab < tasks.length) {\n                handleTabClick(nextTab);\n            }\n        }, 1000);\n\n        setMediaURL('');\n        if (selectedTab === 1) {\n            setVideoBlob(null);\n        } else {\n            setAudioBlob(null);\n        }\n    } catch (error) {\n        console.error('Submission error:', error);\n        alert(error.message || 'Error uploading file. Please try again.');\n    } finally {\n        setIsSubmitting(false);\n    }\n};\n\n// const InstructionModal = ({ onClose }) => {\n//   const audioRef = useRef(null);\n\n//   useEffect(() => {\n//     if (audioRef.current) {\n//       audioRef.current.play();\n//     }\n//   }, []); // Removed language from dependency array\n\n//   return (\n//     <div className=\"custom-modal-overlay\">\n//       <div className=\"custom-modal-content\">\n//         <audio\n//           ref={audioRef}\n//           src={selectedTab === 0 ? \n//             (language === 'english' ? '/audio/q2_en.mp3' : '/audio/q2_hi.mp3') :\n//             (language === 'english' ? '/audio/q3_en.mp3' : '/audio/q3_hi.mp3')\n//           }\n//         />\n//         <h2>{language === 'hindi' ? 'निर्देश' : 'Instructions'}</h2>\n//         <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n//           {selectedTab === 0 ? (\n//             language === 'hindi' ? (\n//               <>\n//                 <p>कृपया \"आवाज़ रिकॉर्ड करें\" पर क्लिक करें और जोर से पढ़ें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें।</p>\n//               </>\n//             ) : (\n//               <>\n//                 <p>Please click \"Record Voice\" to start reading aloud. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save.</p>\n//               </>\n//             )\n//           ) : (\n//             language === 'hindi' ? (\n//               <>\n//                 <p>कृपया \"वीडियो रिकॉर्ड करें\" पर क्लिक करें और चित्र का वर्णन करें। आपके पास 1 मिनट है। रिकॉर्डिंग स्वचालित रूप से रुक जाएगी। \"जमा करें\" पर क्लिक करें। ज़ूम इन के लिए, कृपया चित्र पर क्लिक करें।</p>\n//               </>\n//             ) : (\n//               <>\n//                 <p>Please click \"Record Video\" and describe the picture. You have 1 minute. Recording will stop automatically. Click \"Submit\" to save. To zoom in, please click on the picture.</p>\n//               </>\n//             )\n//           )}\n//         </p>\n//         <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n//       </div>\n//     </div>\n//   );\n// };\n\nconst InitialInstructions = ({ onAccept, onDeny, setIsPatient, language }) => {\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [language, selectedTab]);\n\n  return (\n    <div className=\"initial-instructions-overlay\">\n      <div className=\"initial-instructions-content\">\n        <audio\n          ref={audioRef}\n          src={language === 'english' ? '/audio/q4_en.mp3' : '/audio/q4_hi.mp3'}\n        />\n        <h2>{language === 'hindi' ? 'ऑनलाइन MMSE परीक्षण में आपका स्वागत है' : 'Welcome to the Online MMSE Test'}</h2>\n        \n        <p>\n          {language === 'hindi' ? (\n            <>\n              <strong>ऑनलाइन MMSE टेस्ट: तैयारी और निर्देश</strong><br/>\n              <br/>\n              स्वागत है! टेस्ट शुरू करने से पहले कृपया निम्नलिखित सुनिश्चित करें:\n              <ul>\n                <li>एक देखभालकर्ता (Caregiver) की उपस्थिति आवश्यक है, जो टेस्ट ले सके।</li>\n                <li>एक खाली कागज</li>\n                <li>एक पेन या पेंसिल</li>\n                <li>आवश्यक सहायक उपकरण (जैसे, श्रवण यंत्र, चश्मा, घड़ी)</li>\n              </ul>\n              <br/>\n              <strong>देखभालकर्ता के लिए निर्देश:</strong><br/>\n              <ul>\n                <li>व्यक्ति को बैठाएँ: व्यक्ति को अपने सामने ऐसी जगह पर बैठाएँ जहाँ वे आपको स्पष्ट रूप से देख और सुन सकें।</li>\n                <li>प्रश्न पढ़ें: प्रत्येक प्रश्न को व्यक्ति के लिए ज़ोर से पढ़ें।</li>\n                <li>उत्तर चिह्नित करें: यदि व्यक्ति सही उत्तर देता है तो चेकबॉक्स पर निशान लगाएँ।</li>\n                <li>अगले पर जाएं: हर प्रश्न के बाद \"अगला\" पर क्लिक करें।</li>\n              </ul>\n              <br/>\n              क्या आप शुरू करने के लिए तैयार हैं?\n            </>\n          ) : (\n            <>\n              <strong>Online MMSE Test: Preparation & Instructions</strong><br/>\n              <br/>\n              Welcome! Before starting the test, please ensure the following:\n              <ul>\n                <li>A caregiver is present to administer the test.</li>\n                <li>A blank paper</li>\n                <li>A pen or pencil</li>\n                <li>Any necessary aids (e.g., hearing aids, glasses, clock)</li>\n              </ul>\n              <br/>\n              <strong>Instructions for the Caregiver:</strong><br/>\n              <ul>\n                <li>Seat the Patient: Position the patient across from you, where they can see and hear you clearly.</li>\n                <li>Read Aloud: Read each question out loud to the patient.</li>\n                <li>Mark Responses: Check the box if the patient answers correctly.</li>\n                <li>Progress: Click \"Next\" after each question.</li>\n              </ul>\n              <br/>\n              Are you ready to begin?\n            </>\n          )}\n        </p>\n\n        <p>{language === 'hindi' ? 'यदि आप \"स्वीकार करें\" पर क्लिक करते हैं, तो आप परीक्षण में भाग लेने के लिए सहमत हैं।' : 'By clicking \"Accept,\" you agree to participate in the test.'}</p>\n        <div style={{ marginTop: '20px' }}>\n          <button className=\"accept-button\" onClick={onAccept}>\n            {language === 'hindi' ? 'स्वीकार करें' : 'Accept'}\n          </button>\n          <button className=\"deny-button\" onClick={onDeny} style={{ marginLeft: '10px' }}>\n            {language === 'hindi' ? 'अस्वीकार करें' : 'Deny'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n    const MultipleChoiceTask = ({\n      task,\n      language,\n      setTestCompleted,\n      currentQuestionIndex,\n      setCurrentQuestionIndex,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n    }) => {\n      const { state } = useLocation();\n      const handleNext = () => {\n        if (currentQuestionIndex < task.questions.length - 1) {\n          setCurrentQuestionIndex(currentQuestionIndex + 1);\n        }\n      };\n    \n      const handlePrevious = () => {\n        if (currentQuestionIndex > 0) {\n          setCurrentQuestionIndex(currentQuestionIndex - 1);\n        }\n      };\n    \n      const handleAnswerSelect = (choiceIndex) => {\n        setAllSelectedAnswers((prevSelected) => {\n          const updatedAnswers = { ...prevSelected };\n          \n          // Initialize array for current question if it doesn't exist\n          if (!updatedAnswers[currentQuestionIndex]) {\n            updatedAnswers[currentQuestionIndex] = [];\n          }\n          \n          const currentAnswers = updatedAnswers[currentQuestionIndex];\n          \n          // Toggle selection\n          const index = currentAnswers.indexOf(choiceIndex);\n          if (index === -1) {\n            // Add the choice if not already selected\n            updatedAnswers[currentQuestionIndex] = [...currentAnswers, choiceIndex];\n          } else {\n            // Remove the choice if already selected\n            updatedAnswers[currentQuestionIndex] = currentAnswers.filter(\n              (idx) => idx !== choiceIndex\n            );\n          }\n          \n          return updatedAnswers;\n        });\n      };\n    \n      const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n        (total, selections) => total + selections.length,\n        0\n      );\n    \n      const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n      \n      return (\n        <div className=\"multiple-choice-task\">\n          <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n            {task.questions[currentQuestionIndex].question[language]}\n          </h3>\n\n          {currentQuestionIndex === 10 ? (\n            <div style={{ textAlign: 'center', marginTop: '10px' }}>\n              <img \n                src={process.env.PUBLIC_URL + '/pentagon.png'} \n                alt=\"Shape for copying\" \n                style={{ maxWidth: '45%', height: 'auto' }}\n                onError={(e) => {\n                  console.error(\"Image failed to load\");\n                  console.log(\"Attempted path:\", e.target.src);\n                }}\n              />\n              <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n                {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                  <label\n                    key={index}\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      textAlign: 'center',\n                      margin: '5px 0',\n                      width: '200px',\n                    }}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={currentSelections.includes(index)}\n                      onChange={() => handleAnswerSelect(index)}\n                      style={{ marginRight: '10px' }}\n                    />\n                    {choice[language]}\n                  </label>\n                ))}\n              </div>\n            </div>\n          ) : (\n            // Default rendering for other questions\n            <div style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              justifyContent: 'center',\n              minHeight: '30vh',\n              marginTop: '10px'\n            }}>\n              {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n                <label\n                  key={index}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    textAlign: 'center',\n                    margin: '5px 0',\n                    width: '200px',\n                  }}\n                >\n                  <input\n                    type=\"checkbox\"\n                    checked={currentSelections.includes(index)}\n                    onChange={() => handleAnswerSelect(index)}\n                    style={{ marginRight: '10px' }}\n                  />\n                  {choice[language]}\n                </label>\n              ))}\n            </div>\n          )}\n\n          {/* Navigation Buttons and Counter */}\n          <div className=\"navigation-container\" style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: '10px'\n          }}>\n            <div className=\"navigation-buttons\">\n              <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n                {language === 'hindi' ? 'पिछला' : 'Previous'}\n              </button>\n              <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n                {language === 'hindi' ? 'अगला' : 'Next'}\n              </button>\n            </div>\n            <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n              {language === 'hindi'\n                ? `चयनित: ${totalSelectedCount}`\n                : `Score: ${totalSelectedCount}`}\n            </div>\n          </div>\n\n          {/* Question Number Navigation */}\n          <div\n            className=\"question-number-navigation\"\n            style={{\n              marginTop: '10px',\n              display: 'flex',\n              justifyContent: 'center',\n              flexWrap: 'wrap',\n            }}\n          >\n            {task.questions.map((q, index) => (\n              <button\n                key={index}\n                onClick={() => {\n                  setCurrentQuestionIndex(index);\n                }}\n                style={{\n                  margin: '5px',\n                  padding: '10px',\n                  backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n                  color: index === currentQuestionIndex ? '#fff' : '#000',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                }}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n{/* Submit Button */}\n<div style={{ marginTop: '20px', textAlign: 'center' }}>\n            <button\n              onClick={async () => {\n                const finalScore = Object.values(allSelectedAnswers).reduce(\n                  (total, selections) => total + (selections ? selections.length : 0),\n                  0\n                );\n                \n                console.log('Final MMSE score:', finalScore);\n                const formData = new FormData();\n                formData.append('name', state.name);\n                formData.append('age', state.age);\n                formData.append('patientId', state.patientId);\n                formData.append('score', finalScore.toString());\n\n                try {\n                  console.log('Sending MMSE score to server:', finalScore);\n                  const response = await fetch('http://localhost:5001/save', {\n                    method: 'POST',\n                    body: formData,\n                  });\n\n                  if (!response.ok) {\n                    throw new Error('Failed to save MMSE score');\n                  }\n\n                  console.log('MMSE score saved successfully');\n                  setTestCompleted(true);\n                } catch (error) {\n                  console.error('Error saving MMSE score:', error);\n                  alert('Failed to save test score. Please try again.');\n                }\n              }}\n              style={{\n                padding: '10px 20px',\n                backgroundColor: '#28a745',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              {language === 'hindi' ? 'जमा करें' : 'Submit'}\n            </button>\n          </div>\n\n        </div>\n      );\n    };\n\n    const TaskContent = ({\n      task,\n      language,\n      testCompleted,\n      showInitialInstructions,\n      setShowInitialInstructions,\n      setTestCompleted,\n      allSelectedAnswers,\n      setAllSelectedAnswers,\n      setIsPatient,\n      currentQuestionIndex,\n      setCurrentQuestionIndex\n    }) => {\n      if (task.id === 2) {\n        if (testCompleted) {\n          return (\n            <div className=\"w-full flex justify-center items-center\">\n              <TaskCompletion \n                language={language}\n                allSelectedAnswers={allSelectedAnswers} \n              />\n            </div>\n          );\n        }\n        // If initial instructions are to be shown\n        if (showInitialInstructions) {\n          return (\n            <InitialInstructions\n              onAccept={() => setShowInitialInstructions(false)}\n              onDeny={() => {\n                setShowInitialInstructions(false);\n                setTestCompleted(true);\n              }}\n              setIsPatient={setIsPatient}  // Pass it here\n              language={language}\n            />\n          );\n        }\n\n        // Render the MultipleChoiceTask\n        return (\n          <MultipleChoiceTask\n            task={task}\n            language={language}\n            setTestCompleted={setTestCompleted}\n            allSelectedAnswers={allSelectedAnswers}\n            setAllSelectedAnswers={setAllSelectedAnswers}\n            currentQuestionIndex={currentQuestionIndex}\n            setCurrentQuestionIndex={setCurrentQuestionIndex}\n          />\n        );      \n      }\n\n      return (\n        <div className=\"task-content\">\n          {task.image ? (\n            <>\n            {/* Added click to enlarge text */}\n          <div style={{ \n            textAlign: 'left', \n            marginBottom: '5px',\n            fontSize: '14px',\n            color: '#666',\n            cursor: 'pointer'\n          }}>\n            {language === 'hindi' ? 'ज़ूम इन/ज़ूम आउट करने के लिए छवि पर क्लिक करें' : 'Click on the image to zoom in / zoom out'} 🔍\n          </div>\n              <img\n                src={task.image}\n                alt=\"Task\"\n                style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n                onClick={() => setShowImageModal(true)}\n              />\n              {showImageModal && (\n                <div className=\"image-modal\">\n                  <img\n                    src={task.image}\n                    alt=\"Popup Task\"\n                    style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                    onClick={() => setShowImageModal(false)}\n                  />\n                </div>\n              )}\n            </>\n          ) : (\n            <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n              {task.paragraph[language]}\n            </p>\n          )}\n        </div>\n      );\n    };\n  \n    const InitialPopup = ({ language, setLanguage, onClose }) => {\n      const audioRef = useRef(null);\n     \n      useEffect(() => {\n        if (audioRef.current) {\n          audioRef.current.play();\n        }\n      }, [language]);\n     \n      return (\n        <div className=\"initial-popup-overlay\" \n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'white',\n            zIndex: 1000,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}>\n          <audio\n            ref={audioRef}\n            src={language === 'english' ? '/audio/q1_en.mp3' : '/audio/q1_hi.mp3'}\n          />\n          <div className=\"initial-popup-content\"\n            style={{ maxWidth: '600px', width: '90%', textAlign: 'center' }}>\n            <h2>\n              {language === 'english' \n                ? 'Welcome to the Dementia Test!' \n                : 'डिमेंशिया टेस्ट में आपका स्वागत है!'}\n            </h2>\n            <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n              {language === 'english' ? (\n                <>\n                  This test includes three parts:\n                  <br /><br />\n                  <strong>Paragraph Reading</strong> (1 min)<br />\n                  <strong>Picture Interpretation</strong> (1 min)<br />\n                  <strong>MMSE online test</strong> (~15 min, requires a caregiver if available)\n                  <br /><br />\n                  Please ensure you're in a quiet space with audio and video recording permissions enabled.\n                  <br /><br />\n                  Please Choose the language for the test\n                </>\n              ) : (\n                <>\n                  यह टेस्ट तीन भागों में है:\n                  <br /><br />\n                  <strong>पैराग्राफ पढ़ना</strong> (1 मिनट)<br />\n                  <strong>चित्र व्याख्या</strong> (1 मिनट)<br />\n                  <strong>MMSE ऑनलाइन टेस्ट</strong> (~15 मिनट, केयरगिवर उपलब्ध हो तो)\n                  <br /><br />\n                  कृपया सुनिश्चित करें कि आप शांत स्थान में हैं और ऑडियो-वीडियो रिकॉर्डिंग अनुमति सक्षम है।\n                  <br /><br />\n                  कृपया परीक्षण के लिए भाषा चुनें\n                </>\n              )}\n            </p>\n            <div className=\"language-selection\" style={{ marginTop: '20px' }}>\n              <button\n                onClick={() => setLanguage('english')}\n                className={`language-button ${language === 'english' ? 'active' : ''}`}\n                style={{ marginRight: '10px', padding: '10px 20px' }}>\n                English\n              </button>\n              <button\n                onClick={() => setLanguage('hindi')}\n                className={`language-button ${language === 'hindi' ? 'active' : ''}`}\n                style={{ padding: '10px 20px' }}>\n                हिंदी\n              </button>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"begin-test-button\"\n              style={{ marginTop: '20px', padding: '10px 20px' }}>\n              {language === 'english' ? 'Begin Test' : 'टेस्ट शुरू करें'}\n            </button>\n          </div>\n        </div>\n      );\n     };\n\n  return (\n    <div className=\"app\">\n      {/* Patient ID Display */}\n      {state?.patientId && (\n        <div style={{\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          backgroundColor: 'white',\n          padding: '8px 12px',\n          borderRadius: '4px',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n          zIndex: 1000,\n          fontFamily: 'monospace',\n          fontSize: '14px',\n          border: '1px solid #ddd'\n        }}>\n          Patient ID: {state.patientId}\n        </div>\n      )}\n\n      {/* Initial Test Setup Modal */}\n      {showInitialPopup ? (\n        <InitialPopup\n          language={language}\n          setLanguage={setLanguage}\n          onClose={() => setShowInitialPopup(false)}\n        />\n      ) : (\n        <>\n          {/* Instructions Modal */}\n          {showModal && <InstructionModal \n            onClose={() => setShowModal(false)} \n            selectedTab={selectedTab} \n            language={language} \n          />}\n\n          {/* Main Content */}\n          <div className=\"gradient-bg\" />\n          <div className=\"container\">\n            {/* Navigation Tabs */}\n            <div className=\"tabs\">\n              {tasks\n                .filter((task) => !(task.id === 2 && testCompleted))\n                .map((task) => (\n                  <div\n                    key={task.id}\n                    className={`tab ${selectedTab === task.id ? 'active' : ''} \n                              ${completedTasks.has(task.id) ? 'completed' : ''}\n                              ${task.id < selectedTab ? 'disabled' : ''}`}\n                    onClick={() => handleTabClick(task.id)}\n                    style={{\n                      cursor: completedTasks.has(task.id) || task.id < selectedTab ? 'not-allowed' : 'pointer',\n                      opacity: completedTasks.has(task.id) || task.id < selectedTab ? 0.6 : 1,\n                      backgroundColor: completedTasks.has(task.id) ? '#e0e0e0' : undefined\n                    }}\n                  >\n                    {task.title[language]}\n                    {completedTasks.has(task.id) && (\n                      <span style={{ marginLeft: '5px', color: 'green' }}>✓</span>\n                    )}\n                  </div>\n                ))}\n            </div>\n\n            {/* Task Content Area */}\n            <div className=\"content\">\n              <TaskContent\n                task={tasks[selectedTab]}\n                language={language}\n                testCompleted={testCompleted}\n                showInitialInstructions={showInitialInstructions}\n                setShowInitialInstructions={setShowInitialInstructions}\n                setTestCompleted={setTestCompleted}\n                allSelectedAnswers={allSelectedAnswers}\n                setAllSelectedAnswers={setAllSelectedAnswers}\n                currentQuestionIndex={currentQuestionIndex}\n                setCurrentQuestionIndex={setCurrentQuestionIndex}\n              />\n\n              {/* Media Recording Form */}\n              {selectedTab !== 2 && (\n                <form\n                  onSubmit={handleSubmit}\n                  className=\"media-form\"\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    gap: '15px',\n                    marginTop: '20px'\n                  }}\n                >\n                  <div className=\"media-controls\">\n                  {mediaURL ? (\n                      <div className=\"media-playback\">\n                        {selectedTab === 1 ? (\n                          <video \n                            src={mediaURL} \n                            controls\n                            style={{\n                              maxWidth: '350px',  // Set maximum width\n                              width: '100%',      // Responsive width\n                              height: 'auto',     // Maintain aspect ratio\n                              marginBottom: '10px' // Add some spacing\n                            }} \n                          />\n                        ) : (\n                          <audio src={mediaURL} controls />\n                        )}\n                        <button \n                          type=\"button\" \n                          onClick={handleReRecord} \n                          className=\"custom-button\"\n                        >\n                          {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"recording-controls\">\n                        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n                          {isRecording && <p>Time remaining: {countdown}s</p>}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={handleMediaRecord}\n                          className=\"custom-button\"\n                          style={{\n                            marginBottom: '10px',\n                            padding: '8px 12px',\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer'\n                          }}\n                        >\n                          {isRecording\n                            ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording')\n                            : language === 'hindi'\n                            ? selectedTab === 1\n                              ? 'वीडियो रिकॉर्ड करें'\n                              : 'आवाज़ रिकॉर्ड करें'\n                            : selectedTab === 1\n                            ? 'Record Video'\n                            : 'Record Voice'}\n                        </button>\n                      </div>\n                    )}\n                  </div>\n\n                  <button \n                    type=\"submit\" \n                    disabled={!mediaURL || isSubmitting} \n                    className=\"custom-button\"\n                    style={{\n                      opacity: (!mediaURL || isSubmitting) ? 0.6 : 1\n                    }}\n                  >\n                    {language === 'hindi' ? 'जमा करें' : 'Submit'}\n                  </button>\n\n                  {showTick && <span className=\"tick\">✔</span>}\n                </form>\n              )}\n            </div>\n          </div>\n\n          {/* Refresh Warning Modal */}\n          {showRefreshWarning && (\n            <div className=\"modal-overlay\">\n              <div className=\"modal-content\">\n                <h2>{language === 'hindi' ? 'पृष्ठ रीफ्रेश की पुष्टि करें' : 'Confirm Page Refresh'}</h2>\n                <p>\n                  {language === 'hindi' \n                    ? 'पृष्ठ को रीफ्रेश करने से सभी वर्तमान प्रविष्टियां हट जाएंगी। क्या आप जारी रखना चाहते हैं?'\n                    : 'Refreshing the page will remove all current entries. Do you want to continue?'}\n                </p>\n                <div className=\"button-container\">\n                  <button onClick={handleRefreshCancel} className=\"cancel-button\">\n                    {language === 'hindi' ? 'रद्द करें' : 'Cancel'}\n                  </button>\n                  <button onClick={handleRefreshConfirm} className=\"confirm-button\">\n                    {language === 'hindi' ? 'रीफ्रेश करें' : 'Refresh'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n  }\n  export default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}