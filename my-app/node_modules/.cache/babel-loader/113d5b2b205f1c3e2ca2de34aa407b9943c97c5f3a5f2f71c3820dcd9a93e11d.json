{"ast":null,"code":"var _jsxFileName = \"/Users/sohamtalukdar/aiims/my-app/src/components/MultipleChoiceTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultipleChoiceTask = ({\n  task,\n  language,\n  setTestCompleted\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState({});\n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n  const handleAnswerSelect = choiceIndex => {\n    setAllSelectedAnswers(prevSelected => {\n      const currentSelections = prevSelected[currentQuestionIndex] || [];\n      let updatedSelections;\n      if (currentSelections.includes(choiceIndex)) {\n        // Deselect if already selected\n        updatedSelections = currentSelections.filter(index => index !== choiceIndex);\n      } else {\n        // Select if not already selected\n        updatedSelections = [...currentSelections, choiceIndex];\n      }\n      return {\n        ...prevSelected,\n        [currentQuestionIndex]: updatedSelections\n      };\n    });\n  };\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce((total, selections) => total + selections.length, 0);\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiple-choice-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '5px'\n      },\n      children: task.questions[currentQuestionIndex].question[language]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), currentQuestionIndex === 11 ?\n    /*#__PURE__*/\n    // Special rendering for question at index 11 (if needed)\n    _jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/pentagon.png\",\n        alt: \"Shape for copying\",\n        style: {\n          maxWidth: '45%',\n          height: 'auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            textAlign: 'center',\n            margin: '5px 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"option\",\n            checked: currentSelections.includes(index),\n            onChange: () => handleAnswerSelect(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), choice[language]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Default rendering for other questions\n    _jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '30vh',\n        marginTop: '10px'\n      },\n      children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          textAlign: 'center',\n          margin: '5px 0',\n          width: '200px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: currentSelections.includes(index),\n          onChange: () => handleAnswerSelect(index),\n          style: {\n            marginRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), choice[language]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-container\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: currentQuestionIndex === 0,\n          style: {\n            marginRight: '10px'\n          },\n          children: language === 'hindi' ? 'पिछला' : 'Previous'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: currentQuestionIndex === task.questions.length - 1,\n          children: language === 'hindi' ? 'अगला' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-counter\",\n        style: {\n          marginRight: '20px'\n        },\n        children: language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Selected: ${totalSelectedCount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-number-navigation\",\n      style: {\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap'\n      },\n      children: task.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentQuestionIndex(index);\n        },\n        style: {\n          margin: '5px',\n          padding: '10px',\n          backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n          color: index === currentQuestionIndex ? '#fff' : '#000',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          // Handle submit action\n          setTestCompleted(true);\n        },\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#28a745',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: language === 'hindi' ? 'जमा करें' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MultipleChoiceTask, \"7lNC5WRsD6XqLecLgX9Y27zMhvA=\");\n_c = MultipleChoiceTask;\nexport default MultipleChoiceTask;\nvar _c;\n$RefreshReg$(_c, \"MultipleChoiceTask\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MultipleChoiceTask","task","language","setTestCompleted","_s","currentQuestionIndex","setCurrentQuestionIndex","allSelectedAnswers","setAllSelectedAnswers","handleNext","questions","length","handlePrevious","handleAnswerSelect","choiceIndex","prevSelected","currentSelections","updatedSelections","includes","filter","index","totalSelectedCount","Object","values","reduce","total","selections","className","children","style","textAlign","marginBottom","question","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","src","alt","maxWidth","height","display","flexDirection","alignItems","choices","map","choice","margin","type","name","checked","onChange","justifyContent","minHeight","width","marginRight","onClick","disabled","flexWrap","q","padding","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/sohamtalukdar/aiims/my-app/src/components/MultipleChoiceTask.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MultipleChoiceTask = ({ task, language, setTestCompleted }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [allSelectedAnswers, setAllSelectedAnswers] = useState({});\n\n  const handleNext = () => {\n    if (currentQuestionIndex < task.questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    }\n  };\n\n  const handleAnswerSelect = (choiceIndex) => {\n    setAllSelectedAnswers((prevSelected) => {\n      const currentSelections = prevSelected[currentQuestionIndex] || [];\n      let updatedSelections;\n\n      if (currentSelections.includes(choiceIndex)) {\n        // Deselect if already selected\n        updatedSelections = currentSelections.filter((index) => index !== choiceIndex);\n      } else {\n        // Select if not already selected\n        updatedSelections = [...currentSelections, choiceIndex];\n      }\n\n      return {\n        ...prevSelected,\n        [currentQuestionIndex]: updatedSelections,\n      };\n    });\n  };\n\n  const totalSelectedCount = Object.values(allSelectedAnswers).reduce(\n    (total, selections) => total + selections.length,\n    0\n  );\n\n  const currentSelections = allSelectedAnswers[currentQuestionIndex] || [];\n\n  return (\n    <div className=\"multiple-choice-task\">\n      <h3 style={{ textAlign: 'center', marginBottom: '5px' }}>\n        {task.questions[currentQuestionIndex].question[language]}\n      </h3>\n\n      {/* Render the current question and choices */}\n      {currentQuestionIndex === 11 ? (\n        // Special rendering for question at index 11 (if needed)\n        <div style={{ textAlign: 'center', marginTop: '10px' }}>\n          <img src=\"/pentagon.png\" alt=\"Shape for copying\" style={{ maxWidth: '45%', height: 'auto' }} />\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '10px' }}>\n            {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n              <label key={index} style={{ textAlign: 'center', margin: '5px 0' }}>\n                <input\n                  type=\"checkbox\"\n                  name=\"option\"\n                  checked={currentSelections.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                />\n                {choice[language]}\n              </label>\n            ))}\n          </div>\n        </div>\n      ) : (\n        // Default rendering for other questions\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            minHeight: '30vh',\n            marginTop: '10px',\n          }}\n        >\n          {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n            <label\n              key={index}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                textAlign: 'center',\n                margin: '5px 0',\n                width: '200px',\n              }}\n            >\n              <input\n                type=\"checkbox\"\n                checked={currentSelections.includes(index)}\n                onChange={() => handleAnswerSelect(index)}\n                style={{ marginRight: '10px' }}\n              />\n              {choice[language]}\n            </label>\n          ))}\n        </div>\n      )}\n\n      {/* Navigation Buttons and Counter */}\n      <div\n        className=\"navigation-container\"\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginTop: '10px',\n        }}\n      >\n        <div className=\"navigation-buttons\">\n          <button onClick={handlePrevious} disabled={currentQuestionIndex === 0} style={{ marginRight: '10px' }}>\n            {language === 'hindi' ? 'पिछला' : 'Previous'}\n          </button>\n          <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>\n            {language === 'hindi' ? 'अगला' : 'Next'}\n          </button>\n        </div>\n        <div className=\"selected-counter\" style={{ marginRight: '20px' }}>\n          {language === 'hindi' ? `चयनित: ${totalSelectedCount}` : `Selected: ${totalSelectedCount}`}\n        </div>\n      </div>\n\n      {/* Question Number Navigation */}\n      <div\n        className=\"question-number-navigation\"\n        style={{\n          marginTop: '10px',\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n        }}\n      >\n        {task.questions.map((q, index) => (\n          <button\n            key={index}\n            onClick={() => {\n              setCurrentQuestionIndex(index);\n            }}\n            style={{\n              margin: '5px',\n              padding: '10px',\n              backgroundColor: index === currentQuestionIndex ? '#007bff' : '#f0f0f0',\n              color: index === currentQuestionIndex ? '#fff' : '#000',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              cursor: 'pointer',\n            }}\n          >\n            {index + 1}\n          </button>\n        ))}\n      </div>\n      {/* Submit Button */}\n      <div style={{ marginTop: '20px', textAlign: 'center' }}>\n        <button\n          onClick={() => {\n            // Handle submit action\n            setTestCompleted(true);\n          }}\n          style={{\n            padding: '10px 20px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n          }}\n        >\n          {language === 'hindi' ? 'जमा करें' : 'Submit'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MultipleChoiceTask;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}