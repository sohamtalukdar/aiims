{"ast":null,"code":"var _jsxFileName = \"/home/pallavi/aiims/my-app/src/AudioControls.js\";\nimport React from 'react';\nfunction AudioControls({\n  isRecording,\n  setIsRecording,\n  audioURL,\n  setAudioURL,\n  mediaRecorderRef,\n  audioChunksRef\n}) {\n  const handleAudioRecord = () => {\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        audioChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        mediaRecorder.addEventListener('dataavailable', event => {\n          audioChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const audioBlob = new Blob(audioChunksRef.current, {\n            type: 'audio/webm'\n          });\n          setAudioURL(URL.createObjectURL(audioBlob));\n          setIsRecording(false);\n        });\n      }).catch(err => {\n        console.error('Error accessing microphone:', err);\n        alert('Could not access your microphone. Please check your browser settings.');\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n  const handleReRecord = () => {\n    setAudioURL(\"\");\n    handleAudioRecord();\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"audio-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, audioURL ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"audio\", {\n    src: audioURL,\n    controls: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleReRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Re-record\")) : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAudioRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, isRecording ? 'Stop Recording' : 'Record Voice'));\n}\nexport default AudioControls;","map":{"version":3,"names":["React","AudioControls","isRecording","setIsRecording","audioURL","setAudioURL","mediaRecorderRef","audioChunksRef","handleAudioRecord","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","current","start","addEventListener","event","push","data","audioBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","stop","getTracks","forEach","track","handleReRecord","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","src","controls","onClick"],"sources":["/home/pallavi/aiims/my-app/src/AudioControls.js"],"sourcesContent":["import React from 'react';\n\nfunction AudioControls({ isRecording, setIsRecording, audioURL, setAudioURL, mediaRecorderRef, audioChunksRef }) {\n  const handleAudioRecord = () => {\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        audioChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          audioChunksRef.current.push(event.data);\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\n          setAudioURL(URL.createObjectURL(audioBlob));\n          setIsRecording(false);\n        });\n      }).catch((err) => {\n        console.error('Error accessing microphone:', err);\n        alert('Could not access your microphone. Please check your browser settings.');\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n\n  const handleReRecord = () => {\n    setAudioURL(\"\");\n    handleAudioRecord();\n  };\n\n  return (\n    <div className=\"audio-controls\">\n      {audioURL ? (\n        <>\n          <audio src={audioURL} controls />\n          <button type=\"button\" onClick={handleReRecord}>Re-record</button>\n        </>\n      ) : (\n        <button type=\"button\" onClick={handleAudioRecord}>\n          {isRecording ? 'Stop Recording' : 'Record Voice'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default AudioControls;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}