{"ast":null,"code":"var _jsxFileName = \"/home/soham/aiims/my-app/src/FileUploadForm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileUploadForm() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    state\n  } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false); // New state for image modal\n\n  const tasks = [{\n    id: 0,\n    title: {\n      hindi: 'पहला कार्य',\n      english: '1st Task'\n    },\n    paragraph: {\n      hindi: 'एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था। नीता बचपन से ही बहुत ही समझदार थी। वह हमेशा अपने दादी के साथ खेलती और बातें करती थी। एक दिन, नीता के पास एक खास खिलौना आया। यह एक सुंदर सा किताब था, जिसमें फूलों के बारे में बहुत सी ख़ूबसूरत तस्वीरें थीं। नीता ने दादी के साथ उस किताब को देखकर खुशी-खुशी पढ़ना शुरू किया। उसके बाद, नीता ने अपने दोस्तों को भी वो किताब दिखाई और सबको फूलों के बारे में बताया। और सबको यह सिखाया कि प्रकृति की सुंदर सी चीजों को सबको समझने का अवसर मिलता है। इस कहानी का संदेश है कि हमें प्रकृति की सुंदरता को समझने और महसूस करने का समय निकालना चाहिए, और हमें अपने परिवार और दोस्तों के साथ उसे साझा करना चाहिए।',\n      english: 'Once upon a time, in a small village, there was a lovely little girl named Neeta. Neeta was very wise from a young age. She would always play with her grandmother and chat with her.One day, Neeta got a special toy, a beautiful book with many lovely pictures of flowers. She happily started reading it with her grandmother. Later, she showed the book to her friends and told them about the flowers, teaching everyone about the beauty of nature.The message of this story is that we should take time to understand and appreciate nature\\'s beauty and share it with family and friends.'\n    }\n  }, {\n    id: 1,\n    title: {\n      hindi: 'दूसरा कार्य',\n      english: '2nd Task'\n    },\n    image: '/image.png'\n  }, {\n    id: 2,\n    title: {\n      hindi: 'तीसरा कार्य',\n      english: '3rd Task'\n    },\n    questions: [{\n      question: {\n        hindi: '',\n        english: 'Is it morning or evevning or afternoon?'\n      },\n      choices: ['Correct', 'Wrong'],\n      answer: null // User's selected answer\n    }, {\n      question: {\n        hindi: '',\n        english: 'What day of the week is today?'\n      },\n      choices: ['State', 'Season', 'Day of the week', 'Month', 'Date'],\n      answer: null // User's selected answer\n    }, {\n      question: {\n        hindi: '',\n        english: 'What day of the week is today?'\n      },\n      choices: ['State', 'Season', 'Day of the week', 'Month', 'Date'],\n      answer: null // User's selected answer\n    }, {\n      question: {\n        hindi: '',\n        english: 'What day of the week is today?'\n      },\n      choices: ['State', 'Season', 'Day of the week', 'Month', 'Date'],\n      answer: null // User's selected answer\n    }, v]\n  }];\n  const handleTabClick = id => {\n    setSelectedTab(id);\n    setShowModal(true); // Show modal when switching to a new task\n  };\n  const toggleLanguage = e => {\n    e.preventDefault();\n    setLanguage(prev => prev === 'hindi' ? 'english' : 'hindi');\n  };\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? {\n      video: true\n    } : {\n      audio: true\n    };\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then(stream => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n        mediaRecorder.addEventListener('dataavailable', event => {\n          mediaChunksRef.current.push(event.data);\n        });\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, {\n            type: selectedTab === 1 ? 'video/webm' : 'audio/webm'\n          });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch(err => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state === null || state === void 0 ? void 0 : state.name);\n    formData.append('age', state === null || state === void 0 ? void 0 : state.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n\n    // Show the tick animation\n    setShowTick(true);\n\n    // Hide the tick after 2 seconds\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n  const InstructionModal = ({\n    onClose\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Instructions / \\u0928\\u093F\\u0930\\u094D\\u0926\\u0947\\u0936\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '1.2em',\n          color: '#555'\n        },\n        children: selectedTab === 0 ? 'Please click on the \"Record Voice\" button and read the passage out loud. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.' : 'Please click on the \"Record Video\" button and describe what you see in the picture. If you want to zoom then click on the picture. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '1.2em',\n          color: '#555'\n        },\n        children: selectedTab === 0 ? 'कृपया \"आवाज़ रिकॉर्ड करें\" बटन पर क्लिक करें और जोर से पढ़ें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।' : 'कृपया \"वीडियो रिकॉर्ड करें\" बटन पर क्लिक करें और चित्र में जो आप देख रहे हैं उसका वर्णन करें। यदि आप ज़ूम करना चाहते हैं, तो चित्र पर क्लिक करें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-ok-button\",\n        onClick: onClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n  const MultipleChoiceTask = ({\n    task\n  }) => {\n    _s();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [selectedAnswers, setSelectedAnswers] = useState([]);\n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswers([]); // Clear selections when moving to the next question\n      }\n    };\n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n        setSelectedAnswers([]); // Clear selections when moving to the previous question\n      }\n    };\n    const handleAnswerSelect = index => {\n      // Toggle the selected state for each choice\n      setSelectedAnswers(prevSelected => prevSelected.includes(index) ? prevSelected.filter(answer => answer !== index) // Deselect if already selected\n      : [...prevSelected, index] // Select if not already selected\n      );\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiple-choice-task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.questions[currentQuestionIndex].question[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: task.questions[currentQuestionIndex].choices.map((choice, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedAnswers.includes(index),\n              onChange: () => handleAnswerSelect(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), choice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrevious,\n          disabled: currentQuestionIndex === 0,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: currentQuestionIndex === task.questions.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  };\n  _s(MultipleChoiceTask, \"866uwcmk6VsSZtY12c4ccClLowI=\");\n  const TaskContent = ({\n    task\n  }) => {\n    if (task.id === 2) {\n      return /*#__PURE__*/_jsxDEV(MultipleChoiceTask, {\n        task: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: task.image ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: task.image,\n          alt: \"Task\",\n          style: {\n            cursor: 'pointer',\n            maxWidth: '100%',\n            maxHeight: '100%'\n          },\n          onClick: () => setShowImageModal(true) // Show modal on image click\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-modal\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: task.image,\n            alt: \"Popup Task\",\n            style: {\n              maxWidth: '90%',\n              maxHeight: '90%',\n              objectFit: 'contain'\n            },\n            onClick: () => setShowImageModal(false) // Close modal on image click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: '60%',\n          margin: '0 auto',\n          lineHeight: '1.8',\n          fontSize: '1.1em'\n        },\n        children: task.paragraph[language]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [showModal && /*#__PURE__*/_jsxDEV(InstructionModal, {\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gradient-bg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `tab ${selectedTab === task.id ? 'active' : ''}`,\n          onClick: () => handleTabClick(task.id),\n          children: task.title[language]\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleLanguage,\n          style: {\n            marginBottom: '10px',\n            padding: '8px 12px',\n            cursor: 'pointer',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          },\n          children: language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"task-title\",\n          children: tasks[selectedTab].title[language]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskContent, {\n          task: tasks[selectedTab]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), selectedTab !== 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '15px',\n            marginTop: '20px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-controls\",\n            children: mediaURL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [selectedTab === 1 ? /*#__PURE__*/_jsxDEV(\"video\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 42\n              }, this) : /*#__PURE__*/_jsxDEV(\"audio\", {\n                src: mediaURL,\n                controls: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 78\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: handleReRecord,\n                className: \"custom-button\",\n                children: language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleMediaRecord,\n              style: {\n                marginBottom: '10px',\n                padding: '8px 12px',\n                cursor: 'pointer',\n                backgroundColor: '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px'\n              },\n              children: isRecording ? language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording' : language === 'hindi' ? selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें' : selectedTab === 1 ? 'Record Video' : 'Record Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !mediaURL,\n            className: \"custom-button\",\n            children: language === 'hindi' ? 'जमा करें' : 'Submit'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), showTick && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tick\",\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s2(FileUploadForm, \"hCbBCxo2GBY97HF9TLaAh/M0RxQ=\", false, function () {\n  return [useLocation];\n});\n_c = FileUploadForm;\nexport default FileUploadForm;\nvar _c;\n$RefreshReg$(_c, \"FileUploadForm\");","map":{"version":3,"names":["React","useState","useRef","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadForm","_s2","_s","$RefreshSig$","state","showModal","setShowModal","selectedTab","setSelectedTab","language","setLanguage","isRecording","setIsRecording","mediaURL","setMediaURL","showTick","setShowTick","mediaRecorderRef","mediaChunksRef","showImageModal","setShowImageModal","tasks","id","title","hindi","english","paragraph","image","questions","question","choices","answer","v","handleTabClick","toggleLanguage","e","preventDefault","prev","handleMediaRecord","mediaType","video","audio","navigator","mediaDevices","getUserMedia","then","stream","mediaRecorder","MediaRecorder","current","start","addEventListener","event","push","data","mediaBlob","Blob","type","URL","createObjectURL","catch","err","console","error","alert","stop","getTracks","forEach","track","handleReRecord","handleSubmit","response","fetch","blob","formData","FormData","append","name","age","uploadResponse","method","body","result","json","log","media_url","setTimeout","InstructionModal","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","fontSize","color","onClick","MultipleChoiceTask","task","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","handleNext","length","handlePrevious","handleAnswerSelect","index","prevSelected","includes","filter","map","choice","checked","onChange","disabled","TaskContent","src","alt","cursor","maxWidth","maxHeight","objectFit","width","margin","lineHeight","marginBottom","padding","backgroundColor","border","borderRadius","onSubmit","display","flexDirection","alignItems","gap","position","controls","_c","$RefreshReg$"],"sources":["/home/soham/aiims/my-app/src/FileUploadForm.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './App.css';\n\nfunction FileUploadForm() {\n  const { state } = useLocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [language, setLanguage] = useState('hindi');\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaURL, setMediaURL] = useState(\"\");\n  const [showTick, setShowTick] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const mediaChunksRef = useRef([]);\n  const [showImageModal, setShowImageModal] = useState(false); // New state for image modal\n\n\n  const tasks = [\n    {\n      id: 0,\n      title: { hindi: 'पहला कार्य', english: '1st Task' },\n      paragraph: {\n        hindi: 'एक बार की बात है, एक छोटे से गाँव में, एक प्यारी सी बच्ची रहती थी। उसका नाम नीता था। नीता बचपन से ही बहुत ही समझदार थी। वह हमेशा अपने दादी के साथ खेलती और बातें करती थी। एक दिन, नीता के पास एक खास खिलौना आया। यह एक सुंदर सा किताब था, जिसमें फूलों के बारे में बहुत सी ख़ूबसूरत तस्वीरें थीं। नीता ने दादी के साथ उस किताब को देखकर खुशी-खुशी पढ़ना शुरू किया। उसके बाद, नीता ने अपने दोस्तों को भी वो किताब दिखाई और सबको फूलों के बारे में बताया। और सबको यह सिखाया कि प्रकृति की सुंदर सी चीजों को सबको समझने का अवसर मिलता है। इस कहानी का संदेश है कि हमें प्रकृति की सुंदरता को समझने और महसूस करने का समय निकालना चाहिए, और हमें अपने परिवार और दोस्तों के साथ उसे साझा करना चाहिए।',\n        english: 'Once upon a time, in a small village, there was a lovely little girl named Neeta. Neeta was very wise from a young age. She would always play with her grandmother and chat with her.One day, Neeta got a special toy, a beautiful book with many lovely pictures of flowers. She happily started reading it with her grandmother. Later, she showed the book to her friends and told them about the flowers, teaching everyone about the beauty of nature.The message of this story is that we should take time to understand and appreciate nature\\'s beauty and share it with family and friends.' \n      }\n    },\n    {\n      id: 1,\n      title: { hindi: 'दूसरा कार्य', english: '2nd Task' },\n      image: '/image.png',\n    },\n    {\n      id: 2,\n      title: {hindi: 'तीसरा कार्य', english: '3rd Task' },\n      questions: [\n        {\n          question: { hindi: '', english: 'Is it morning or evevning or afternoon?' },\n          choices: ['Correct', 'Wrong',],\n          answer: null, // User's selected answer\n        },\n        {\n          question: { hindi: '', english: 'What day of the week is today?' },\n          choices: ['State', 'Season', 'Day of the week', 'Month', 'Date'],\n          answer: null, // User's selected answer\n        },\n        {\n          question: { hindi: '', english: 'What day of the week is today?' },\n          choices: ['State', 'Season', 'Day of the week', 'Month', 'Date'],\n          answer: null, // User's selected answer\n        },\n        {\n          question: { hindi: '', english: 'What day of the week is today?' },\n          choices: ['State', 'Season', 'Day of the week', 'Month', 'Date'],\n          answer: null, // User's selected answer\n        },\n        v\n      ]\n    }\n  ];\n\n  const handleTabClick = (id) => {\n    setSelectedTab(id);\n    setShowModal(true); // Show modal when switching to a new task\n  };\n\n  const toggleLanguage = (e) => {\n    e.preventDefault();\n    setLanguage((prev) => (prev === 'hindi' ? 'english' : 'hindi'));\n  };\n\n  const handleMediaRecord = () => {\n    const mediaType = selectedTab === 1 ? { video: true } : { audio: true };\n\n    if (!isRecording) {\n      navigator.mediaDevices.getUserMedia(mediaType).then((stream) => {\n        const mediaRecorder = new MediaRecorder(stream);\n        mediaRecorderRef.current = mediaRecorder;\n        mediaChunksRef.current = [];\n        mediaRecorder.start();\n        setIsRecording(true);\n\n        mediaRecorder.addEventListener('dataavailable', (event) => {\n          mediaChunksRef.current.push(event.data);\n        });\n\n        mediaRecorder.addEventListener('stop', () => {\n          const mediaBlob = new Blob(mediaChunksRef.current, { type: selectedTab === 1 ? 'video/webm' : 'audio/webm' });\n          setMediaURL(URL.createObjectURL(mediaBlob));\n          setIsRecording(false);\n        });\n      }).catch((err) => {\n        console.error('Error accessing media:', err);\n        alert(`Could not access your ${selectedTab === 1 ? 'camera' : 'microphone'}. Please check your browser settings.`);\n      });\n    } else {\n      if (mediaRecorderRef.current) {\n        mediaRecorderRef.current.stop();\n        mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      }\n    }\n  };\n\n  const handleReRecord = () => {\n    setMediaURL(\"\");\n    handleMediaRecord();\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!mediaURL) {\n      alert(`Please record ${selectedTab === 1 ? 'video' : 'audio'} before submitting.`);\n      return;\n    }\n\n    const response = await fetch(mediaURL);\n    const blob = await response.blob();\n    const formData = new FormData();\n    formData.append('name', state?.name);\n    formData.append('age', state?.age);\n    formData.append(selectedTab === 1 ? 'video' : 'audio', blob, selectedTab === 1 ? 'recording.webm' : 'audio.webm');\n\n    const uploadResponse = await fetch('http://localhost:8000/upload/', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const result = await uploadResponse.json();\n    console.log(result);\n    alert(`Uploaded successfully: ${selectedTab === 1 ? 'Video' : 'Audio'} URL: ${result.media_url}`);\n\n    // Show the tick animation\n    setShowTick(true);\n\n    // Hide the tick after 2 seconds\n    setTimeout(() => {\n      setShowTick(false);\n    }, 2000);\n  };\n\n  const InstructionModal = ({ onClose }) => (\n    <div className=\"custom-modal-overlay\">\n      <div className=\"custom-modal-content\">\n        <h2>Instructions / निर्देश</h2>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 \n            ? 'Please click on the \"Record Voice\" button and read the passage out loud. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.'\n            : 'Please click on the \"Record Video\" button and describe what you see in the picture. If you want to zoom then click on the picture. Once finished, click \"Stop Recording\" and then \"Submit\" to save your recording.'}\n        </p>\n        <p style={{ marginTop: '10px', fontSize: '1.2em', color: '#555' }}>\n          {selectedTab === 0 \n            ? 'कृपया \"आवाज़ रिकॉर्ड करें\" बटन पर क्लिक करें और जोर से पढ़ें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।'\n            : 'कृपया \"वीडियो रिकॉर्ड करें\" बटन पर क्लिक करें और चित्र में जो आप देख रहे हैं उसका वर्णन करें। यदि आप ज़ूम करना चाहते हैं, तो चित्र पर क्लिक करें। समाप्त होने पर, \"रिकॉर्डिंग रोकें\" पर क्लिक करें और फिर अपनी रिकॉर्डिंग को सहेजने के लिए \"जमा करें\" दबाएँ।'}\n        </p>\n        <button className=\"custom-ok-button\" onClick={onClose}>OK</button>\n      </div>\n    </div>\n  );\n  \n\n  const MultipleChoiceTask = ({ task }) => {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [selectedAnswers, setSelectedAnswers] = useState([]);\n  \n    const handleNext = () => {\n      if (currentQuestionIndex < task.questions.length - 1) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n        setSelectedAnswers([]); // Clear selections when moving to the next question\n      }\n    };\n  \n    const handlePrevious = () => {\n      if (currentQuestionIndex > 0) {\n        setCurrentQuestionIndex(currentQuestionIndex - 1);\n        setSelectedAnswers([]); // Clear selections when moving to the previous question\n      }\n    };\n  \n    const handleAnswerSelect = (index) => {\n      // Toggle the selected state for each choice\n      setSelectedAnswers((prevSelected) =>\n        prevSelected.includes(index)\n          ? prevSelected.filter((answer) => answer !== index) // Deselect if already selected\n          : [...prevSelected, index] // Select if not already selected\n      );\n    };\n  \n    return (\n      <div className=\"multiple-choice-task\">\n        <h3>{task.questions[currentQuestionIndex].question[language]}</h3>\n        <ul>\n          {task.questions[currentQuestionIndex].choices.map((choice, index) => (\n            <li key={index}>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={selectedAnswers.includes(index)}\n                  onChange={() => handleAnswerSelect(index)}\n                />\n                {choice}\n              </label>\n            </li>\n          ))}\n        </ul>\n        <div className=\"navigation-buttons\">\n          <button onClick={handlePrevious} disabled={currentQuestionIndex === 0}>Previous</button>\n          <button onClick={handleNext} disabled={currentQuestionIndex === task.questions.length - 1}>Next</button>\n        </div>\n      </div>\n    );\n  };\n  \n  \n\n  const TaskContent = ({ task }) => {\n    if (task.id === 2) {\n      return <MultipleChoiceTask task={task} />;\n    }\n    \n    return (\n      <div className=\"task-content\">\n        {task.image ? (\n          <>\n            <img\n              src={task.image}\n              alt=\"Task\"\n              style={{ cursor: 'pointer', maxWidth: '100%', maxHeight: '100%' }}\n              onClick={() => setShowImageModal(true)} // Show modal on image click\n            />\n            {showImageModal && (\n              <div className=\"image-modal\">\n                <img\n                  src={task.image}\n                  alt=\"Popup Task\"\n                  style={{ maxWidth: '90%', maxHeight: '90%', objectFit: 'contain' }}\n                  onClick={() => setShowImageModal(false)} // Close modal on image click\n                />\n              </div>\n            )}\n          </>\n        ) : (\n          <p style={{ width: '60%', margin: '0 auto', lineHeight: '1.8', fontSize: '1.1em' }}>\n            {task.paragraph[language]}\n          </p>\n        )}\n      </div>\n    );\n  };\n\n\n  return (\n    <div className=\"app\">\n      {showModal && <InstructionModal onClose={() => setShowModal(false)} />}\n\n      <div className=\"gradient-bg\"></div>\n      <div className=\"container\">\n        <div className=\"tabs\">\n          {tasks.map((task) => (\n            <div\n              key={task.id}\n              className={`tab ${selectedTab === task.id ? 'active' : ''}`}\n              onClick={() => handleTabClick(task.id)}\n            >\n              {task.title[language]}\n            </div>\n          ))}\n        </div>\n\n        <div className=\"content\">\n          <button onClick={toggleLanguage} style={{ marginBottom: '10px', padding: '8px 12px', cursor: 'pointer', backgroundColor: '#007bff', color: 'white', border: 'none', borderRadius: '4px' }}>\n            {language === 'hindi' ? 'Switch to English' : 'हिंदी पर स्विच करें'}\n          </button>\n\n          <h1 className=\"task-title\">{tasks[selectedTab].title[language]}</h1>\n          <TaskContent task={tasks[selectedTab]} />\n\n          {selectedTab !== 2 && (\n            <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '15px', marginTop: '20px', position: 'relative' }}>\n              <div className=\"media-controls\">\n                {mediaURL ? (\n                  <>\n                    {selectedTab === 1 ? <video src={mediaURL} controls /> : <audio src={mediaURL} controls />}\n                    <button type=\"button\" onClick={handleReRecord} className=\"custom-button\">\n                      {language === 'hindi' ? 'पुनः रिकॉर्ड करें' : 'Re-record'}\n                    </button>\n                  </>\n                ) : (\n                  <button\n                    type=\"button\"\n                    onClick={handleMediaRecord}\n                    style={{\n                      marginBottom: '10px',\n                      padding: '8px 12px',\n                      cursor: 'pointer',\n                      backgroundColor: '#007bff',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                    }}\n                  >\n                    {isRecording ? (language === 'hindi' ? 'रिकॉर्डिंग रोकें' : 'Stop Recording') : (language === 'hindi' ? (selectedTab === 1 ? 'वीडियो रिकॉर्ड करें' : 'आवाज़ रिकॉर्ड करें') : (selectedTab === 1 ? 'Record Video' : 'Record Voice'))}\n                  </button>\n                )}\n              </div>\n\n              <button type=\"submit\" disabled={!mediaURL} className=\"custom-button\">\n                {language === 'hindi' ? 'जमा करें' : 'Submit'}\n              </button>\n\n              {showTick && <span className=\"tick\">✔</span>}\n            </form>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FileUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}